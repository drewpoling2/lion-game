{"version":3,"sources":["../utility/updateCustomProperty.js","../elements/ground.js","../node_modules/howler/dist/howler.js","../utility/sound-controller.js","../elements/dino.js","../elements/cactus.js","../../../server/common/errors.ts","../apis.js","../elements/leaderboard.js","../utility/validate-input.js","../game-manager.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["getCustomProperty","elem","prop","parseFloat","getComputedStyle","getPropertyValue","setCustomProperty","value","style","setProperty","incrementCustomProperty","inc","_updateCustomProperty","require","SPEED","groundElems","document","querySelectorAll","setupGround","updateGround","delta","speedScale","forEach","ground","_howler","soundController","exports","die","Howl","src","volume","jump","beatScore","_dinoStationary","_interopRequireDefault","_dinoLose","_dinoRun","_dinoRun2","_soundController","obj","__esModule","default","dinoElem","querySelector","JUMP_SPEED","DOUBLE_JUMP_SPEED","GRAVITY","DINO_FRAME_COUNT","FRAME_TIME","isJumping","canDoubleJump","jumpCount","dinoFrame","currentFrameTime","yVelocity","isMobileDevice","test","navigator","userAgent","setupDino","removeEventListener","onJump","addEventListener","updateDino","handleRun","handleJump","getDinoRect","getBoundingClientRect","setDinoLose","dinoLoseImg","dinoStationaryImg","dinoRun1Img","dinoRun0Img","e","code","type","play","_cactus","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","iter","Symbol","iterator","isArray","len","length","i","arr2","cactiPositions","CACTUS_INTERVAL_MIN","CACTUS_INTERVAL_MAX","worldElem","nextCactusTime","setupCactus","cactus","remove","isPositionOccupied","position","includes","generateRandomCacti","minCacti","maxCacti","numberOfCacti","randomNumberBetween","newPosition","push","createCactus","updateCactus","getCactusRects","map","createElement","dataset","cactusImg","classList","add","concat","append","min","max","Math","floor","random","_errors","_typeof","_regeneratorRuntime","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","getAllHighScoreUsers","_ref","_callee","response","_callee$","_context","fetch","ok","status","json","t0","console","log","handleDeleteEntry","_ref2","_callee2","entryField","errorData","_callee2$","_context2","headers","UserErrors","NO_USER_FOUND","alert","_x","handleSortAndDeleteLastEntry","_ref3","_callee3","_callee3$","_context3","data","sortedData","users","sort","b","parseInt","score","username","handleNewHighScore","_ref4","_callee4","_callee4$","_context4","body","JSON","stringify","USERNAME_ALREADY_EXISTS","_x2","_x3","checkIfNewHighScore","_ref5","_callee5","_callee5$","_context5","_x4","_apis","createLeaderboard","leaderboardElem","getSuffix","number","lastDigit","item","index","rowElement","rankCell","indexSuffix","textContent","appendChild","scoreCell","nameCell","badWordsArray","checkForBadWords","input","_iterator","_createForOfIteratorHelper","_step","word","validateInput","userInput","getElementById","_ground","_dino","_leaderboard","_validateInput","WORLD_WIDTH","WORLD_HEIGHT","SPEED_SCALE_INCREASE","scoreElem","highScoreElem","startScreenElem","endScreenElem","scoreNewHighScoreElem","scoreErrorMessageElem","setPixelToWorldScale","window","handleStart","once","lastTime","localStorage","getItem","padStart","hasBeatenScore","update","time","requestAnimationFrame","updateSpeedScale","updateScore","checkLose","handleLose","dinoRect","some","rect","isCollision","rect1","rect2","left","right","top","bottom","handleCheckIfHighScore","setItem","handleCheckLeaderboardHighScore","handleSubmitNewScore","_handleSubmitNewScore","res","setTimeout","worldToPixelScale","innerWidth","innerHeight","width","height","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","Function","deps","cached","cache","cb"],"mappings":"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","file":"game-manager.e0ee197a.js","sourceRoot":"../../src/public","sourcesContent":["export function getCustomProperty(elem, prop) {\n  return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0;\n}\n\nexport function setCustomProperty(elem, prop, value) {\n  elem.style.setProperty(prop, value);\n}\n\nexport function incrementCustomProperty(elem, prop, inc) {\n  setCustomProperty(elem, prop, getCustomProperty(elem, prop) + inc);\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.05;\nconst groundElems = document.querySelectorAll('[data-ground]');\n\nexport function setupGround() {\n  setCustomProperty(groundElems[0], '--left', 0);\n  setCustomProperty(groundElems[1], '--left', 300);\n}\n\nexport function updateGround(delta, speedScale) {\n  groundElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -300) {\n      incrementCustomProperty(ground, '--left', 600);\n    }\n  });\n}\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { Howl, Howler } from 'howler';\nexport const soundController = {\n  die: new Howl({\n    src: ['sounds/die.wav'],\n    volume: 0.075,\n  }),\n  jump: new Howl({\n    src: ['sounds/jump.wav'],\n    volume: 0.075,\n  }),\n  beatScore: new Howl({\n    src: ['sounds/beatScore.wav'],\n    volume: 0.075,\n  }),\n};\n","import {\n  incrementCustomProperty,\n  setCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport dinoStationaryImg from '../public/imgs/dino-stationary.png';\nimport dinoLoseImg from '../public/imgs/dino-lose.png';\nimport dinoRun0Img from '../public/imgs/dino-run-0.png';\nimport dinoRun1Img from '../public/imgs/dino-run-1.png';\nimport { soundController } from '../utility/sound-controller.js';\n\nconst dinoElem = document.querySelector('[data-dino]');\nconst JUMP_SPEED = 0.35;\nconst DOUBLE_JUMP_SPEED = 0.4; // Adjust this as needed\nconst GRAVITY = 0.0015;\nconst DINO_FRAME_COUNT = 2;\nconst FRAME_TIME = 100;\n\nlet isJumping;\nlet canDoubleJump;\nlet jumpCount;\nlet dinoFrame;\nlet currentFrameTime;\nlet yVelocity;\n\nfunction isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nexport function setupDino() {\n  isJumping = false;\n  canDoubleJump = true;\n  jumpCount = 0;\n  dinoFrame = 0;\n  currentFrameTime = 0;\n  yVelocity = 0;\n  setCustomProperty(dinoElem, '--bottom', 0);\n\n  // Function to check if the device is a mobile device\n  if (isMobileDevice()) {\n    document.removeEventListener('touchstart', onJump);\n    document.addEventListener('touchstart', onJump);\n  } else {\n    document.removeEventListener('keydown', onJump);\n    document.addEventListener('keydown', onJump);\n  }\n}\n\nexport function updateDino(delta, speedScale) {\n  handleRun(delta, speedScale);\n  handleJump(delta);\n}\n\nexport function getDinoRect() {\n  return dinoElem.getBoundingClientRect();\n}\n\nexport function setDinoLose() {\n  dinoElem.src = dinoLoseImg;\n}\n\nfunction handleRun(delta, speedScale) {\n  if (isJumping) {\n    dinoElem.src = dinoStationaryImg;\n    return;\n  }\n\n  if (currentFrameTime >= FRAME_TIME) {\n    dinoFrame = (dinoFrame + 1) % DINO_FRAME_COUNT;\n    dinoElem.src = dinoFrame === 1 ? dinoRun1Img : dinoRun0Img;\n    currentFrameTime -= FRAME_TIME;\n  }\n  currentFrameTime += delta * speedScale;\n}\n\nfunction handleJump(delta) {\n  if (!isJumping) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= 0) {\n    setCustomProperty(dinoElem, '--bottom', 0);\n    isJumping = false;\n    canDoubleJump = true;\n    jumpCount = 0;\n  }\n\n  if (jumpCount === 1 && canDoubleJump) {\n    yVelocity = DOUBLE_JUMP_SPEED;\n    canDoubleJump = false;\n  }\n\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onJump(e) {\n  if (\n    (e.code !== 'Space' && e.type !== 'touchstart') ||\n    (isJumping && jumpCount >= 2)\n  )\n    return;\n\n  soundController.jump.play();\n  yVelocity = JUMP_SPEED;\n  isJumping = true;\n  jumpCount++;\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport cactusImg from '../public/imgs/cactus.png';\n\nconst cactiPositions = [];\n\nconst SPEED = 0.05;\nconst CACTUS_INTERVAL_MIN = 500;\nconst CACTUS_INTERVAL_MAX = 2000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCactusTime;\nexport function setupCactus() {\n  nextCactusTime = CACTUS_INTERVAL_MIN;\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    cactus.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return cactiPositions.includes(position);\n}\n\nfunction generateRandomCacti() {\n  const minCacti = 1;\n  const maxCacti = 3; // Adjust the range as needed\n\n  const numberOfCacti = randomNumberBetween(minCacti, maxCacti);\n\n  for (let i = 0; i < numberOfCacti; i++) {\n    let newPosition;\n\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    cactiPositions.push(newPosition);\n    createCactus(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  cactiPositions.length = 0;\n}\n\nexport function updateCactus(delta, speedScale) {\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    incrementCustomProperty(cactus, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(cactus, '--left') <= -100) {\n      cactus.remove();\n    }\n  });\n\n  if (nextCactusTime <= 0) {\n    generateRandomCacti();\n    nextCactusTime =\n      randomNumberBetween(CACTUS_INTERVAL_MIN, CACTUS_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextCactusTime -= delta;\n}\n\nexport function getCactusRects() {\n  return [...document.querySelectorAll('[data-cactus]')].map((cactus) => {\n    return cactus.getBoundingClientRect();\n  });\n}\n\nfunction createCactus(newPosition) {\n  const cactus = document.createElement('img');\n  cactus.dataset.cactus = true;\n  cactus.src = cactusImg;\n  cactus.classList.add('cactus');\n  setCustomProperty(cactus, '--left', newPosition);\n  setCustomProperty(cactus, 'height', `${randomNumberBetween(22, 27)}%`);\n\n  worldElem.append(cactus);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export enum UserErrors {\n  NO_USER_FOUND = 'no-user-found',\n  USERNAME_ALREADY_EXISTS = 'user already exists',\n}\nexport enum ServerErrors {\n  SERVER_ERROR = 'server-error',\n}\n","import { UserErrors } from '../../server/common/errors';\n\n//gets all users from collection\nconst getAllHighScoreUsers = async () => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/users');\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log('getAllHighScoreUsers error', error);\n  }\n};\n\n//deletes entry by field\nconst handleDeleteEntry = async (entryField) => {\n  try {\n    const response = await fetch(\n      `http://localhost:3001/scores/delete-entry/${entryField}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.NO_USER_FOUND) {\n        alert('ERROR: No entry found with the specified ID');\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleDeleteEntry error', error);\n  }\n};\n\n//sorts all collection data in descending order by score, and deletes last entry by username\nconst handleSortAndDeleteLastEntry = async () => {\n  await getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n    handleDeleteEntry(sortedData[sortedData.length - 1].username);\n  });\n};\n\n//adds new high score\nconst handleNewHighScore = async (username, score) => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/new-high', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        score: score,\n      }),\n    });\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.USERNAME_ALREADY_EXISTS) {\n        return UserErrors.USERNAME_ALREADY_EXISTS;\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    } else {\n      await handleSortAndDeleteLastEntry();\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleNewHighScore error', error);\n  }\n};\n\nconst checkIfNewHighScore = async (score) => {};\n\nexport { handleNewHighScore, getAllHighScoreUsers, checkIfNewHighScore };\n","import { getAllHighScoreUsers } from '../apis';\n\nexport function createLeaderboard(leaderboardElem) {\n  getAllHighScoreUsers().then((data) => {\n    function getSuffix(number) {\n      const lastDigit = number % 10;\n      if (number === 11 || number === 12 || number === 13) {\n        return 'th';\n      } else if (lastDigit === 1) {\n        return 'st';\n      } else if (lastDigit === 2) {\n        return 'nd';\n      } else if (lastDigit === 3) {\n        return 'rd';\n      } else {\n        return 'th';\n      }\n    }\n\n    // Map data to HTML elements and append to container\n    data.users.forEach((item, index) => {\n      const rowElement = document.createElement('tr');\n      rowElement.classList.add('leaderboard-row');\n\n      // Create and append the \"Rank\" cell\n      const rankCell = document.createElement('td');\n      rankCell.classList.add('leaderboard-rank-item');\n      const indexSuffix = getSuffix(index + 1);\n      rankCell.textContent = `${index + 1}${indexSuffix}`;\n      rowElement.appendChild(rankCell);\n\n      // Create and append the \"Score\" cell\n      const scoreCell = document.createElement('td');\n      scoreCell.classList.add('leaderboard-score-item');\n      scoreCell.textContent = `${item.score}`;\n      rowElement.appendChild(scoreCell);\n\n      // Create and append the \"Name\" cell\n      const nameCell = document.createElement('td');\n      nameCell.classList.add('leaderboard-name-item');\n      nameCell.textContent = `${item.username}`;\n      rowElement.appendChild(nameCell);\n\n      // Append the entire row to the body\n      leaderboardElem.appendChild(rowElement);\n    });\n  });\n}\n","const badWordsArray = [\n  'ass',\n  'fuc',\n  'fuk',\n  'fuq',\n  'fux',\n  'fck',\n  'coc',\n  'cok',\n  'coq',\n  'kox',\n  'koc',\n  'kok',\n  'koq',\n  'cac',\n  'cak',\n  'caq',\n  'kac',\n  'kak',\n  'kaq',\n  'dic',\n  'dik',\n  'diq',\n  'dix',\n  'dck',\n  'pns',\n  'psy',\n  'fag',\n  'fgt',\n  'ngr',\n  'nig',\n  'cnt',\n  'knt',\n  'sht',\n  'dsh',\n  'twt',\n  'bch',\n  'cum',\n  'clt',\n  'kum',\n  'klt',\n  'suc',\n  'suk',\n  'suq',\n  'sck',\n  'lic',\n  'lik',\n  'liq',\n  'lck',\n  'jiz',\n  'jzz',\n  'gay',\n  'gey',\n  'gei',\n  'gai',\n  'vag',\n  'vgn',\n  'sjv',\n  'fap',\n  'prn',\n  'jew',\n  'joo',\n  'gvr',\n  'pus',\n  'pis',\n  'pss',\n  'snm',\n  'tit',\n  'fku',\n  'fcu',\n  'fqu',\n  'hor',\n  'slt',\n  'jap',\n  'wap',\n  'wop',\n  'kik',\n  'kyk',\n  'kyc',\n  'kyq',\n  'dyk',\n  'dyq',\n  'dyc',\n  'kkk',\n  'jyz',\n  'prk',\n  'prc',\n  'prq',\n  'mic',\n  'mik',\n  'miq',\n  'myc',\n  'myk',\n  'myq',\n  'guc',\n  'guk',\n  'guq',\n  'giz',\n  'gzz',\n  'sex',\n  'sxx',\n  'sxi',\n  'sxe',\n  'sxy',\n  'xxx',\n  'wac',\n  'wak',\n  'waq',\n  'wck',\n  'pot',\n  'thc',\n  'vaj',\n  'vjn',\n  'nut',\n  'std',\n  'lsd',\n  'poo',\n  'azn',\n  'pcp',\n  'dmn',\n  'orl',\n  'anl',\n  'ans',\n  'muf',\n  'mff',\n  'phk',\n  'phc',\n  'phq',\n  'xtc',\n  'tok',\n  'toc',\n  'toq',\n  'mlf',\n  'rac',\n  'rak',\n  'raq',\n  'rck',\n  'sac',\n  'sak',\n  'saq',\n  'pms',\n  'nad',\n  'ndz',\n  'nds',\n  'wtf',\n  'sol',\n  'sob',\n  'fob',\n  'kys',\n];\n\nfunction checkForBadWords(input) {\n  for (const word of badWordsArray) {\n    if (input.includes(word)) {\n      return true; // bad word detected\n    }\n  }\n  return false; // No bad words detected\n}\n\nfunction validateInput() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  if (checkForBadWords(userInput)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport { validateInput };\n","import { updateGround, setupGround } from './elements/ground.js';\nimport {\n  updateDino,\n  setupDino,\n  getDinoRect,\n  setDinoLose,\n} from './elements/dino.js';\nimport {\n  updateCactus,\n  setupCactus,\n  getCactusRects,\n} from './elements/cactus.js';\nimport { createLeaderboard } from './elements/leaderboard.js';\nimport { soundController } from './utility/sound-controller.js';\nimport {\n  getAllHighScoreUsers,\n  handleNewHighScore,\n  handleSortAndDeleteLastEntry,\n} from './apis.js';\nimport { validateInput } from './utility/validate-input.js';\nconst WORLD_WIDTH = 100;\nconst WORLD_HEIGHT = 30;\nconst SPEED_SCALE_INCREASE = 0.00001;\n\nconst worldElem = document.querySelector('[data-world]');\nconst scoreElem = document.querySelector('[data-score]');\nconst highScoreElem = document.querySelector('[data-high-score]');\nconst startScreenElem = document.querySelector('[data-start-screen]');\nconst endScreenElem = document.querySelector('[data-game-over-screen]');\nconst leaderboardElem = document.querySelector('[data-leaderboard-body]');\nconst scoreNewHighScoreElem = document.querySelector(\n  '[data-score-new-high-score]'\n);\nconst scoreErrorMessageElem = document.querySelector(\n  '[data-score-error-message]'\n);\n// const playAgainButtonElem = document.querySelector('[data-play-again]');\n\n// playAgainButtonElem.addEventListener('click', function () {\n//   handleStart(); // Add any other actions you want to perform on button click\n// });\n\nsetPixelToWorldScale();\n// createLeaderboard(leaderboardElem);\nwindow.addEventListener('resize', setPixelToWorldScale);\ndocument.addEventListener('keydown', handleStart, { once: true });\ndocument.addEventListener('touchstart', handleStart, { once: true });\nlet lastTime;\nlet speedScale;\nlet score;\nhighScoreElem.textContent = localStorage.getItem('lion-high-score')\n  ? localStorage.getItem('lion-high-score')\n  : Math.floor('0').toString().padStart(6, 0);\nlet hasBeatenScore = false;\n\nfunction update(time) {\n  if (lastTime == null) {\n    lastTime = time;\n    window.requestAnimationFrame(update);\n    return;\n  }\n  const delta = time - lastTime;\n\n  updateGround(delta, speedScale);\n  updateDino(delta, speedScale);\n  updateCactus(delta, speedScale);\n  updateSpeedScale(delta);\n  updateScore(delta);\n  if (checkLose()) return handleLose();\n\n  lastTime = time;\n  window.requestAnimationFrame(update);\n}\n\nfunction checkLose() {\n  const dinoRect = getDinoRect();\n  return getCactusRects().some((rect) => isCollision(rect, dinoRect));\n}\n\nfunction isCollision(rect1, rect2) {\n  return (\n    rect1.left < rect2.right &&\n    rect1.top < rect2.bottom &&\n    rect1.right > rect2.left &&\n    rect1.bottom > rect2.top\n  );\n}\n\nfunction updateSpeedScale(delta) {\n  speedScale += delta * SPEED_SCALE_INCREASE;\n}\n\nfunction updateScore(delta) {\n  score += delta * 0.01;\n  scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n  if (\n    score > highScoreElem.textContent &&\n    !hasBeatenScore &&\n    highScoreElem.textContent !== '000000'\n  ) {\n    soundController.beatScore.play();\n    hasBeatenScore = true;\n  }\n}\n\nfunction handleCheckIfHighScore(score) {\n  if (score > highScoreElem.textContent) {\n    highScoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n    localStorage.setItem('lion-high-score', highScoreElem.textContent);\n    handleCheckLeaderboardHighScore(highScoreElem.textContent);\n  }\n}\n\nfunction handleStart() {\n  lastTime = null;\n  hasBeatenScore = false;\n  speedScale = 0.9;\n  score = 0;\n  setupGround();\n  setupDino();\n  setupCactus();\n  startScreenElem.classList.add('hide');\n  endScreenElem.classList.add('hide');\n  window.requestAnimationFrame(update);\n}\n\nfunction handleCheckLeaderboardHighScore(score) {\n  const users = getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n  });\n}\n\nhandleCheckLeaderboardHighScore('90013');\n\nasync function handleSubmitNewScore() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  //check for validation errors and update error message accordingly\n  if (!validateInput() || !userInput) {\n    scoreErrorMessageElem.textContent = 'Enter a valid name!';\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  }\n\n  const scoreNewHighScoreElem = document.querySelector(\n    '[data-score-new-high-score]'\n  );\n  const res = await handleNewHighScore(\n    userInput,\n    scoreNewHighScoreElem.textContent\n  );\n\n  //check if user already exists from res and update error message accordingly, else submit new score\n  if (res === 'user already exists') {\n    scoreErrorMessageElem.textContent = res;\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  } else {\n    scoreErrorMessageElem.classList.add('hide');\n  }\n}\n\nif (document.getElementById('submit-button')) {\n  document\n    .getElementById('submit-button')\n    .addEventListener('click', handleSubmitNewScore);\n}\n\nfunction handleLose() {\n  console.log(highScoreElem.textContent);\n  handleCheckIfHighScore(score);\n  soundController.die.play();\n  setDinoLose();\n  setTimeout(() => {\n    document.addEventListener('keydown', handleStart, { once: true });\n    document.addEventListener('touchstart', handleStart, { once: true });\n    endScreenElem.classList.remove('hide');\n  }, 100);\n}\n\nfunction setPixelToWorldScale() {\n  let worldToPixelScale;\n  if (window.innerWidth / window.innerHeight < WORLD_WIDTH / WORLD_HEIGHT) {\n    worldToPixelScale = window.innerWidth / WORLD_WIDTH;\n  } else {\n    worldToPixelScale = window.innerHeight / WORLD_HEIGHT;\n  }\n\n  worldElem.style.width = `${WORLD_WIDTH * worldToPixelScale}px`;\n  worldElem.style.height = `${WORLD_HEIGHT * worldToPixelScale}px`;\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}