{"version":3,"sources":["../utility/updateCustomProperty.js","../elements/ground.js","../elements/groundLayerTwo.js","../elements/groundLayerThree.js","../node_modules/howler/dist/howler.js","../utility/sound-controller.js","../elements/dino.js","../elements/cactus.js","../../../server/common/errors.ts","../apis.js","../elements/leaderboard.js","../utility/validate-input.js","../elements/score-multiplier.js","../elements/coin.js","../game-manager.js"],"names":["getCustomProperty","elem","prop","parseFloat","getComputedStyle","getPropertyValue","setCustomProperty","value","style","setProperty","incrementCustomProperty","inc","_updateCustomProperty","require","SPEED","groundElems","document","querySelectorAll","setupGround","updateGround","delta","speedScale","forEach","ground","groundLayerTwoElems","setupGroundLayerTwo","updateGroundLayerTwo","groundLayerThreeElems","setupGroundLayerThree","updateGroundLayerThree","_howler","soundController","exports","die","Howl","src","volume","jump","beatScore","pickupCoin","takeDamage","_Jump","_interopRequireDefault","_Jump2","_Jump3","_Run","_Run2","_Run3","_Run4","_Run5","_Run6","_soundController","obj","__esModule","default","dinoElem","querySelector","JUMP_SPEED","DOUBLE_JUMP_SPEED","GRAVITY","DINO_FRAME_COUNT","JUMP_FRAME_COUNT","FRAME_TIME","BOTTOM_ANCHOR","isJumping","canDoubleJump","jumpCount","dinoFrame","currentFrameTime","yVelocity","jumpAnimationInProgress","isMobileDevice","test","navigator","userAgent","setupDino","removeEventListener","onJump","addEventListener","onDive","updateDino","handleRun","handleJump","handleDive","getDinoRect","getBoundingClientRect","setDinoLose","lionLoseImg","classList","add","remove","spotlight","getElementById","startJump","lionJumpImg1","setTimeout","lionJumpImg2","lionJumpImg3","endJump","lionRunImg1","lionRunImg2","lionRunImg3","lionRunImg4","lionRunImg5","lionRunImg6","e","code","type","play","DIVE_SPEED","isDiving","_BushTree","_RoundTree","_PineTree","_SnowballSmall","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","iter","len","arr2","cactiPositions","CACTUS_INTERVAL_MIN","CACTUS_INTERVAL_MAX","worldElem","nextCactusTime","setupCactus","cactus","isPositionOccupied","position","includes","generateRandomCacti","minCacti","maxCacti","numberOfCacti","randomNumberBetween","newPosition","push","createCactus","updateCactus","getCactusRects","map","cactusImages","tree1","weight","tree2","tree3","snowball","totalWeight","reduce","sum","image","randomWeight","Math","random","cumulativeWeight","selectedImage","_iterator","_step","createElement","dataset","concat","append","min","max","floor","_errors","_typeof","_regeneratorRuntime","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","getAllHighScoreUsers","_ref","_callee","response","_callee$","_context","fetch","ok","status","json","t0","console","log","handleDeleteEntry","_ref2","_callee2","entryField","errorData","_callee2$","_context2","headers","UserErrors","NO_USER_FOUND","alert","_x","handleSortAndDeleteLastEntry","_ref3","_callee3","_callee3$","_context3","data","sortedData","users","sort","b","parseInt","score","username","handleNewHighScore","_ref4","_callee4","_callee4$","_context4","body","JSON","stringify","USERNAME_ALREADY_EXISTS","_x2","_x3","checkIfNewHighScore","_ref5","_callee5","_callee5$","_context5","_x4","_apis","createLeaderboard","leaderboardElem","personalBestLvl","personalBestCombo","personalBestScoreElem","storedPersonalBestLvl","localStorage","getItem","storedPersonalBestCombo","storedPersonalBestScore","textContent","getSuffix","number","lastDigit","item","index","rowElement","rankCell","indexSuffix","appendChild","scoreCell","nameCell","badWordsArray","checkForBadWords","input","word","validateInput","userInput","MULTIPLIER_INTERVAL_MIN","MULTIPLIER_INTERVAL_MAX","nextMultiplierTime","setupMultiplier","multiplier","updateMultiplier","createMultipliers","getMultiplierRects","id","rect","getRandomKeyWeighted","probabilities","randomValue","cumulativeProbability","multiplierRatios","x2","x5","x10","_dino","coinPositions","COIN_INTERVAL_MIN","COIN_INTERVAL_MAX","nextCoinTime","setupCoin","coin","updateCoin","dinoRect","coinRect","distance","sqrt","pow","x","locked","angle","atan2","speed","deltaX","cos","deltaY","sin","createCoins","getCoinRects","collectableOptions","points","selectedCollectable","element","initialKeyframe","getRandomKeyframe","animationDelay","_ground","_groundLayerTwo","_groundLayerThree","_cactus","_leaderboard","_validateInput","_scoreMultiplier","_coin","_SpeakerOff","_SpeakerOn","_Pause","_Play","_Redo","_ForegroundTrees","WORLD_WIDTH","WORLD_HEIGHT","SPEED_SCALE_INCREASE","multiplierRatio","scoreElem","highScoreElem","startScreenElem","endScreenElem","gameOverTextElem","gameOverIconElem","scoreMultiplierElem","scoreNewHighScoreElem","scoreErrorMessageElem","multiplierTimerElem","tickerElem","tickerElem2","tickerElem3","livesElem","scrollableTableElem","currentMultiplierElem","plusPointsElem","tickerContainerElem","loadingTextElem","setPixelToWorldScale","window","lastTime","collisionOccurred","milestone","padStart","hasBeatenScore","isPaused","playerImmunity","immunityDuration","display","setAttribute","pauseIconButton","togglePause","playImg","pauseImg","requestAnimationFrame","update","shareContainer","shareButton","copyCurrentLink","location","href","select","execCommand","removeChild","pauseButton","blur","setPlayerImmunity","updateElements","time","updateSpeedScale","updateScore","checkLose","handleLose","checkMultiplierCollision","checkCoinCollision","createOneUpText","newElement","left","offsetLeft","top","parentNode","insertBefore","multiplierTimer","timerInterval","startMultiplierTimer","clearInterval","setInterval","some","isCollision","duration","updateInterval","randomArc","randomXEnd","documentElement","calculateFontSize","coinElement","addPickupText","text","pickupElement","_pickupElement$datase","offsetTop","updateScoreWithPoints","fontSize","initialScore","increments","ceil","incrementAmount","intervalId","isEnemyAndPlayerCollision","currentLives","muteButton","soundControllerMuted","muteIconButton","mute","muteImg","unmuteImg","rect1","rect2","right","bottom","calculateNextMilestone","currentMilestone","growthRate","handleCheckIfHighScore","setItem","handleCheckLeaderboardHighScore","setUpElements","handleStart","tickerData","tickerItem","innerHTML","tickerDivider","handleSubmitNewScore","_handleSubmitNewScore","res","event","contains","target","handleOpenShareContainer","handleToggleLeaderboard","showLeaderboard","loading","stopLoading","leaderboardContent","runTypeLetters","randomTimeout","typeLettersAny","rerunDelay","once","typeLetters","worldToPixelScale","innerWidth","innerHeight","width","height","handleOrientationChange","blackScreen","isMobile","orientation","snow","el","density","maxHSpeed","minFallSpeed","canvas","ctx","particles","colors","mp","quit","init","getContext","render","bind","w","size","vy","vx","fill","_this","clearRect","fillStyle","fillRect","destroy","textToType","timeout","children","span"],"mappings":";;AcAA,AVAA,IUAAkb,OAAA,GAAAra,OAAA;AACA,AVAA,IUAAsa,eAAA,GAAAta,OAAA;AAIA,AVHA,IUGAua,iBAAA,GAAAva,OAAA;AAIA,AVNA,IUMAsY,KAAA,GAAAtY,OAAA;ANTA,ACAA,ACAA,AIeA,AVXA,ACJA,IGAY,ACAZ8L,ACAAyJ,AIeAiF,ATfAvZ,KKAA,EDAA,AKeA,ATfA,CKAAjB,EFGC,ACHDA,AKeAA,ATfAA,KKAA,EDAA,AKeA,ATfA;AGAA,ACAwD,ARAxD,AEAA,ADAA,AQEO,AIkBP,AVfA,ACJO,CGDP,GPAAD,AEAAA,ADAAA,AYoBA0a,ATnBavZ,KID2C6K,ACExCyJ,EFFJ,KMoBZ,CLpBwDjP,CAAA,CKoBxDvG,ATnB4B,EGDN,CHCMmB,CGDN,EPAtB,AEAA,ADAA,CQEiCqU,AIkBjC,CJlBkCC,CTFlCzV,AEAAA,ADAAA,CGC4B,CAAAkB,KJD5B,AEAA,ADAA,OQEiD,EAAE,CLDvB,GAAG,QIDyB6K,OAAA,wBAAArF,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAJ,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAG,MAAA,IAAAH,CAAA,CAAAoC,WAAA,KAAAjC,MAAA,IAAAH,CAAA,KAAAG,MAAA,CAAA8B,SAAA,qBAAAjC,CAAA,KAAAwF,OAAA,CAAAxF,CAAA;AAAA,AFAxD,AMAA,AZMA,AEAA,ADAA,AUNA,AEqBA,AVfA,AJNO,EQCL,AEEA,ALDAnF,EEFFrB,AMAAA,AZMME,AEAAA,ADAAA,AUNNF,AEqBAuC,CTnBK,EAAE,EIFiD0J,ARM7C,AEAA,ADAA,AFNK7M,EKELkC,CGDT,APKY,AEAA,ADAA,CMLZ,GPKgB,CEAC,ADAA,GYenB,GAAArB,ATnBe,CAAC,CEFhB,AMAA,ADAA,CZAiCb,CAACC,CQChC,ADDFY,AMAAA,ADAAA,CJCE,ACDsD,CKqBxD,CdrBsC,CQCpC,CRDsCX,EOAxC,AMAA,ADAA,EZA4C,EAAE,QQCb,ACAjC,qJAAA2M,mBAAA,YAAAA,oBAAA,WAAApG,CAAA,SAAAqG,CAAA,EAAArG,CAAA,OAAAsG,CAAA,GAAA3D,MAAA,C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EkBzC,ATnBS,ALFA1I,CKEC,EGDR,AKGFU,ACiBAA,CNpBE,ADGF,ENEiB,CMFjB6B,CILmB,CVOC1B,CYFpB,ACiBA,AdrBmB,CAACZ,AWDE,CDIC,ACHrB,ETMuB,CQHCY,CJJ1B,AHO2B,CFAC,ACAAA,AGJF,AMFnB,CVMsBC,AIJF,CIF3B8Q,AHDAlR,AHO8BG,ASHW8H,ADFvC,GFDF,AGGyC,CFAP,CDHlCmG,ACGmCzL,ACF5B,CTK6B,CIPpC,AJOqCvC,ASJnC,CRIoC,AHNF,CGMGA,AHNFhB,CQCnC,ADGF,CCHE,ADGFY,CEJA,AEEO,CXFkC,CQCvC,ACDFmR,AGGyCjJ,AZHC,AWGxC,CVG2C,ADNF1I,CCMG,EMF9C,AGDgD,CAAC,ACA1C,CFHP,CEIE,CFJF4R,CPMqD,CACnD,CCDqD,CACrD,AQHK,CFJP,CEKE,CFLFC,ERM6D,ADNF,CCMG,AWHrB,AZHmBhS,CYGnB4I,ADElC,EHJ0C,ACDjD,AEME,CCHuC,AZHuB,CSAhEqJ,ATAiE,CAAC,ESAlE,AEMO,CCHkCnJ,CHHzCiF,ATAsE,AWOpE,CXPqE,ESAvE,ACG2E,CAAC,CCIrE,ETCP,ASAE,CTAD,GCAD,CAAC,AQAM,EACL,CCNuC,CAAAnF,CHHzCsJ,EGGyC,ADMlC,EFTP,AEUE,GFVFL,AGGyCpK,EDOlC,CFVP,CAAAwK,AEWE,GFXF,EAAAlE,AEWO,EACL,CFZF,IEYO,EACL,CFbF1N,IEaO,CFbP,CEcE,EFdF6R,AGGyC,CAAAtJ,EDWlC,CFdP,AGGyC,CHHzCvI,AEeE,ICZuC0I,CHHzC,AEeO,EACL,KAAK,EACL,EFjBFoJ,GEiBO,EFjBP,AEkBE,CCfuC,GHHzCL,CEkBO,EACL,GFnBF,CAAAK,CEmBO,EACL,EFpBF,GEoBO,EACL,KAAK,EACL,KFtBFD,AEsBO,EACL,EFvBF,CAAAnK,EEuBO,EFvBP,AEwBE,IFxBFgH,CEwBO,EACL,IFzBF,CAAA1O,AEyBO,EACL,GF1BF,EE0BO,EACL,KAAK,EACL,CF5BFyQ,IE4BO,EACL,CF7BF,CAAA/B,GE6BO,EACL,EF9BF,CAAA1O,EE8BO,EACL,CF/BF,EAAA4O,EE+BO,EF/BP,AEgCE,CFhCF8C,IEgCO,CFhCP,CEiCE,CFjCFC,IEiCO,EFjCP,AEklJD,ACFA,AFKA,AMDqC,APArC,ALIO,AEEA,ADAA,AUPkC,AEuBzC,AVnBA,AJNA,AWqJA,CHpJC,CEEC,CFLU,CDMZlL,ADDAvE,AQsBA8Y,ATvBInZ,EKCIoU,GDJRlE,AIIqCnL,APArC,ALIgBjG,AEEAU,ADAAH,AUPyBwH,ADmJhC2O,CNnJC,ECCVlV,ADDY,CGJU,CDMtB,GAAAA,CCNsB,AM2BtB,EblB2BxB,CAAA,AakB3BL,EblB8B,ASJL,EFLH,AGuJG+W,CHvJH,AEKM5W,ACkJF6W,CFtJ1BtF,CPUmC9Q,AUPM,AEuBzC,CL1BA,APUmC,CCAEG,CAAA,ADAC,AS4IP,ER5IS,AQ4IP,CLlJjC,AIAoC,CJApCf,AIAqC2C,CFLf,AKKe4D,CAAA,ELLzB,ADMZ,AMDqCC,CNCrCxG,EDDA,AMDyCuH,KLEzC,CGDkD,CFL5B,AEMlB,EEFqC,CJJnB,CAAA,AKKe,CLLf,CAAA,CAAA,ECCtBoK,GIIqClL,CJJrC,CIIqC,QJJrCmL,EIIqClL,EJJrC,ECME,CDNFmL,ACMG,CGFkC,QJJrC,YIIqCtL,CJJrC4J,AIIqC,CAAAzJ,MJJrC,AIIqC,CAAAC,QAAA,EJJrCyH,GIIqC7H,CAAA,GJJrC,EAAA4K,MAAA,QAAAD,EIIqCzK,CJJrC,CIIqC,EJJrCiL,EAAA,CAAAI,GIIqClL,EJJrC,CAAA+K,EIIqC,CAAA9K,CJJrC,EAAA+K,IAAA,AIIqC,CAAArL,CAAA,MAAAE,EAAA,EJJrC2K,CIIqCtK,KJJrCpH,KAAA,IAAAuR,aIIqC,CAAA1K,CAAA,GJJrC,CAAA2K,EIIqC1K,CJJrC,EAAA4H,OAAA,EAAA+C,EIIqC,IJJrC,AIIqC5K,CAAA,CJJrC6K,KAAA,EAAAC,GIIqC9K,CAAA,CAAAQ,CJJrC,KIIqC,KJJrCrH,KAAA,WIIqC+G,EAAA,CJJrC4K,CIIqC9K,CAAA,GAAAE,EJJrCiB,AIIqC,GJJrC,GIIqCV,CJJrCiK,AIIqC,UAAAhK,CAAA,OJJrC,CAAAiK,GAAA,CIIqCjK,CJJrCmH,CIIqC,MJJrC,EAAA+C,MAAA,CIIqCjK,CJJrCkK,AIIqC,EAAAnK,CAAA,EJJrC,AIIqCE,CAAA,CJJrCkK,MAAA,IIIqClK,EAAA,KJJrCO,GAAA,AIIqCV,CAAA,IJJrCoK,AIIqC7K,CAAA,CAAAQ,GJJrC,CAAAgL,EIIqC,OJJrC,IIIqC3K,IAAA,mBAAAA,IAAA,SAAA1H,KAAA,EAAA6G,CAAA,CAAAS,CAAA,UAAApB,CAAA,WAAAA,EAAAyB,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAAkB,IAAA,CAAApB,CAAA,MAAAY,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAnB,EAAA,CAAAoB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAhC,CAAA,WAAAA,EAAAkC,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAf,EAAA,CAAAsB,MAAA,UAAAtB,EAAA,CAAAsB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;ALDrC,ACFA,AFKA,AMFqC,APCrC,AMFyC,AEwBzC,AVnBA,AJLO,ECML,AEEA,ADAA,AQJA,ALHA,AMkJ+B,CNlJ9B,CGDS,ADGZtB,ADDAtE,AQsBA6Y,ATvBI,EJKFlb,AEEAA,ADAAA,AQJMmW,AC+IyBvK,GElJIrD,ADDIlB,AZAzBrH,CMEhB,GCCA,ADDAoC,EKiJiC,CHjJhC,ADCDA,EIgJiCyE,EG3HjC,GAAAtG,GdxBiCP,CUIJ,AVJKL,CaCG6I,EHGL9H,AIoBhC,CDvBqC,AbDC,EAAEd,EMExC,CAAAW,CMFyCuG,AZAG,COG5C,AGCwC,AEJC,CLGzCvG,AGCyC2C,AVJKjD,CYAL2I,ECCJH,CPCrC,CNFmD,AWmJlB,CV7Id,AEEA,ADAA,AS4IE4O,CJjJrB,AKHyC,AZAY,CCMjC5W,AEEAY,ADAAH,KQJkC,CAClD,EELqC4F,CAAA,EXMV,AU8IG,CV9IF,CYLK,AZKJ,CYLI0B,AZKH,EAAE,CYLC,EXOE,CAAC,CCAC,ADAA,CWPJE,AVOK,ADAA,CCAC,CFFC,AEEA,ADAA,EDFE,AEEA,CFFC,CAAC,EWNP5B,CAAA,CVQW,ECAE,ADAA,AQFpD,CREqD,AQFpD,CPEqD,ADAA,CCAC,CUPpB,AVOqB,CUPrB0B,GAAA,KAAAnB,MDDIwB,iBAAA,CAAA/B,CAAA,ECCJ,ADDI8B,CCCJJ,GAAA,EDDI,GCCJG,IDDIjB,CAAA,GAAAoB,MAAA,CAAAC,GCCJ,MDDI,CAAAC,QAAA,CAAAd,IAAA,CAAApB,CAAA,EAAAmC,KAAA,aAAAvB,CAAA,iBAAAZ,CAAA,CAAAoC,WAAA,EAAAxB,CAAA,GAAAZ,CAAA,CAAAoC,WAAA,CAAAC,IAAA,MAAAzB,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAAiC,IAAA,CAAAtC,CAAA,OAAAY,CAAA,+DAAAxD,IAAA,CAAAwD,CAAA,UAAAmB,iBAAA,CAAA/B,CAAA,EAAA8B,MAAA;AJAzC,ACDA,AFKA,AMHqC,APErC,AMHyC,AE6BzC,AVvBA,CINA,CPOE,AEEA,ADAA,AGPA7G,ALDApC,ESFI4S,AFKN3L,ADDAtE,AQ0BA6Y,AHuHkCtP,EV7IhC7L,AEEAA,ADAAA,AGPI,ALDA,CAACE,CKCC,CQD6ByI,ADDID,AE6BzC,AHuHkC,CLjJlC,CEHY,CM6BZnI,AT3BYqB,ALDA,CMEZQ,ANFajC,KOGb,COyBA,EPzBAiC,ECJwB,CCDE,AJGV,ALDQ,CQDA,AHEP,ALDQxC,CYDgByJ,CHDf3H,CIEW,CbAR,CYDY,CZCVzB,GSFL,CAAAsS,AHI1B,CAAAhS,ANFoC,CAAC,KaAAuH,CNGrC,ADDA,CCCAvH,CNGmB,AEEA,ADAA,AUTsB0G,EXOrBxG,AEEAY,ADAAH,IKLpB,AMHqC,ADDI,IHDf,GRQK,CAAC,CAAC,CAAC,EAAE,GCEG,CAAC,CCAC,ADAA,CCAC,ADAA,CCAC,CFFC,AEEA,ADAA,AUTHmI,EXOK,AEEA,ESTL,CXOQ,AWPRpC,CXOS,ECEE,ECAE,ADAA,CUTb,CTSe,ASTfC,CVSgB,CAAC,CCAC,CAAC,ISTnB,aAAAmC,IAAA,+BAAAlC,KAAA,CAAAiC,IAAA,CAAAC,IAAA;ALI0B,AMH9B,APIrC,ALGA,AEEA,ADAA,AUVyC,AEmCzC,AV5BA,AJLA,EQDE,ACFwB,ACSxB,AC4IgC,EL/IlC9G,AQ8BA6Y,AThCIvZ,EIJsB2Q,CJInB,CCEP,CCDmEpQ,AMH9BiF,ADDIoB,APGhC,CIJiB,AJIhB,CCEVrG,EGN0B4P,CDExB,CAAA,AMkCF,GAAA5P,SThC2B,COHcoG,APGb,CGF1B,CAAA,ACFwB,CGCe,CLI0B1F,CCHjE,AFIF,CAAAvC,CCDmE,EMH9BuG,CAAA,CDDIK,CCCJyB,ACkCrC,CR9BA,AQ8BArI,GFnCyC,CHDfgM,AGCenF,CLI0BtE,AMH9B,CLAN,CMkC/B,CP/BmE,GKJ1B,CLI0BA,AKJ1B0F,ECCJ1B,CNG8B,AMH9B,ADDI,CLI0B/D,OELzC,EGCe8F,CHDfwH,AFKyC,GAAAvN,CELzC,CAAG,CFKsC,IMH9BgE,CNG8B9D,AMH9B,GJFRyP,EGCY,CAAAjK,CLI0B,EAAA1F,AKJ1B,EHDZ,CFKsC,UMH9B+F,iBAAA,CAAA/B,CAAA,EAAA8B,MAAA,OAAAlB,CAAA,GAAAoB,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAd,IAAA,CAAApB,CAAA,EAAAmC,KAAA,aAAAvB,CAAA,iBAAAZ,CAAA,CAAAoC,WAAA,EAAAxB,CAAA,GAAAZ,CAAA,CAAAoC,WAAA,CAAAC,IAAA,MAAAzB,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAAiC,IAAA,CAAAtC,CAAA,OAAAY,CAAA,+DAAAxD,IAAA,CAAAwD,CAAA,UAAAmB,iBAAA,CAAA/B,CAAA,EAAA8B,MAAA;ALCrC,ADEmE,AMH9B,APKrC,ALIO,AEEA,ADAA,AUZkC,AEoCzC,AV5BA,AJJO,CQFN,CEOC,CFTU,CCDiB,AHO7BpG,AQ8BA6Y,AThCIvZ,AMgJF,ED3IMsU,EDVqB1D,CFKsC7L,AMH9B6B,APKrC,ALIgB7H,AEEAU,ADAAH,AUZyByH,AZIzBzI,AWgJdwL,CNhJQ,ECEVxJ,ADFY,ESgCZ,CNpCwB,CCDK,CKqC7BA,CHgHE,CAAAqF,CHpJsB,AGoJtB,CV1I0B5G,CAACC,IYTQuI,AFmJnCwC,CHpJsB,APUU,ASDL,AETYrD,CJAjB,CPUYzH,ACEAK,CWXC,AXWAN,AQHLuV,AETS,CTYH9U,AQwIpC,CRxIqCT,ASZEwI,AZIFlJ,CAACT,CMExC,AK8IEiM,CL9IFrL,AJM0C,AUZD,CLI0BuG,CAAA,AJQvB,ADAA/F,AFRA,EOAuBgG,ANMrB,AEEAhG,AWwB9C,AdhC8CnB,CQJtB,AMoCxBW,Cb1BgD,CKJhD,AIG4C,CFThC,AESiC+V,AETJhN,AZIS,AWgJhD,CAAA5B,CEnJmCT,AbGe5G,AWgJlD,CCpJuC,CVYa,AYwBtD,CdhCuD,CGQC,ADAA,ASwItDsH,CD3IkD,AVLK,CaHpB,AVWqB,AOHL,EHLc,AIgJjE,EHpJsB,CGoJY,EHpJZ,AIAiB2B,CJAjB,CAAA,CAAA,ADI2CtC,AKJ1B,CJAjB,CDI2C,CKJ1BwB,EFS2B,CAAC,AET5B,CAAAlB,GCCJ+B,ENG8BpC,CKJ1B,CCCJ,CAAAA,ADDIqC,GLI0B,AKJ1B,GCCJ,ADDId,CCCJtB,EDDI,CAAAI,KCCJ,CDDI,OLI0BR,CAAA,CAAAG,EKJ1BM,CCCJ8B,ADDI,GLI0B,CAAAnC,AMH9B,EDDIqC,IAAA,ELI0B,KAAAzC,AKJ1BK,CLI0B,IKJ1B,CAAAmC,GAAA,GAAA/B,CAAA,GAAA+B,ECCJnC,CDDI,EAAAI,CLI0BP,AKJ1B,CCCJ,CNG8B,AMH9BoC,EDDIG,ECCJ,CAAAF,CDDI,CAAA9B,CLI0BJ,AKJ1B,CCCJ,GDDIqB,CLI0B,CAAApB,CKJ1B,CAAAG,CAAA,ILI0B,CAAAT,CAAA,IKJ1ByC,ELI0BvC,EAAA,AKJ1B,GLI0BK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAAQ,MAAA,qBAAAN,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAO,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAT,CAAA,CAAAQ,MAAA,WAAAK,IAAA,mBAAAA,IAAA,SAAA1H,KAAA,EAAA6G,CAAA,CAAAS,CAAA,UAAApB,CAAA,WAAAA,EAAAyB,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAT,EAAA,GAAAA,EAAA,CAAAkB,IAAA,CAAApB,CAAA,MAAAY,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAnB,EAAA,CAAAoB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAhC,CAAA,WAAAA,EAAAkC,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAf,EAAA,CAAAsB,MAAA,UAAAtB,EAAA,CAAAsB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;AAAA,AMH9B,APMrC,AMLA,AEmCA,AV5BA,EHEExH,AEEAY,ADAAH,AQHA,ALLA,ALAAlB,CKAC,CIN0B,AHQ7ByC,AMLMjC,AEmCN8a,AThCI,EKKI/E,AC0I4B,GJhJ+BhO,AMH9BE,APMrC,AMLW,CEmCX,AH+Ga+O,CFrJgBjL,CHQ7BnK,AMLc,CXSD,Aa0BbA,Cb1BcpB,AUyIG,EClJC,CDkJD6K,EX/IE,CAAClM,CCMC,ACEA,CDFC,ACEAqB,ASuIL,CRvIM,AQuINf,CRvIOe,AHRA,EAAEpB,EODyC4I,AMH9BA,AFmJpB,CTvIY,AQHE,CDXF,APcC,AFRA,CODqC,AMH9B,AVYN,CFFRvH,AEES,AOHEoV,AVLF3W,CSNH2N,CHQ7B,CAAA9M,AQ8BA,CAAAA,CLtC6B,CRYA,CYVQ4G,CZUH,ACEHlG,EKToCwH,ADGnE,AHMiCxH,CWwBjC,CDpCqC,AHSS,CGTTmG,AHSUkP,CRGV,COdR3D,CNcU,ADAG,CFRO,CGQL,AHRMhT,EaJb,AHSiB,CGTjB6I,AHSkB,CVLD,ESNzBoK,AIEQ,AbImBhT,IODW,APCP,CODO4I,APCN,GSNhC,AFKsC,APCHnI,EaJ3BwI,CbI8B,CAAC,CODDH,CGMK,CAAC,YGTpC,CAAAF,CNG8B,CAAAA,CMH9B,ENG8B,KAAAnB,2BAAA,CAAAmB,GAAA,KAAAG,kBAAA;AAAA,AMH9B,APOrC,AMLA,AEmCA,AV5BA,AJJA,EUKE,ALLA3G,ECEFU,ALII,AEEA,ADAA,AUXEiV,AEmCN4D,ELvC6B,ACYrB/E,AC0IJ,EVzIApW,AEEAA,ADAAA,CKV+DuI,AMH9BE,APOrC,AQ8BA,CH+GQ0O,CN/IG,CCEXnV,AQ8BAA,CThCa,EM+IA,CAAC6H,CN/IGrI,OIPYgR,AEsJP,CAAC4E,EEpJchP,ADER,CLCsC,CGOpC,ALLV,AM+IM,CEpJU,ADEL,APGV,AM+IM,EFtJC,AIEQc,AHUH+M,AC0IJ,CFtJDvF,CHS7B,AMLoC,AEmCpC,CDrCqC,APOrCvQ,AQ8BAA,ELvC6B,GAAAqS,EFKsC9K,ADInE,AQ8BA,CDrCqCwB,CHUS,CAACgN,CGVV,EJFR,CAAAlO,EFKsC,CGOb,CDZzB,ARaF,AEEA,ADAA,AQH4B,ETC3BnH,AEEAA,ADAAA,GWbSqI,GAAA,AZWH,AEEA,ADAA,EDFE,AEEA,ADAA,CWbCd,GAAA,CAAAlB,EHUmC,CTC5B,AEEA,ADAA,AQH6B,ETC3BxG,AEEAA,ADAAA,CWbT,EAAAwI,EZWc,AEEA,ADAA,CWbd,EZWiBvI,AEEAA,ADAAA,CWbjByH,GAAA,CAAAlB,KZW2B,AEEA,ADAA,CWb3B,EZW8B9G,AEEAA,ADAAA,KDFK,AEEA,ADAA,GDFG,AEEA,ADAA,CWbtC+G,AZWuC,AEEA,ADAA,CWbvC,AZWwC,AEEA,ADAA,CDFC,AEEA,ADAA,KWbzCgC,IAAA,OAAApC,KAAA,CAAAmC,GAAA,GAAA/B,CAAA,GAAA+B,GAAA,EAAA/B,CAAA,IAAAgC,IAAA,CAAAhC,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAAgC,IAAA;ANG8B,AMDnE,APMA,AMLA,AEmCA,AV5BA,ISRMuP,APMNnW,ALKI,AEEA,ADAA,AUZEiV,AEmCN4D,AThCI3Z,GAAG,CIRsB,ARerB,AEEA,ADAA,ASsIF,CJlJ6DwF,ADKnE,AQ8BA,AThCS,CAAC,ECEVjF,ALKQ1C,AEEAA,ADAAA,AYuBR0C,GH+Ga,EEnJM,EFmJF,CEnJK,AFmJJ,CAAC,CEnJK,KDCK,GAAG,EPGA,CAAC,CCEjC,AMLoC,AEmCpC,CR9BA7B,AQ8BAA,EPnCmEuG,CAAA,EAAA8B,EDKnE,AQ8BA,IPnCmE,KNU1C,AEEA,ADAA,EDFC3H,AEEAA,ADAAA,EKZyC6F,CAAA,GNUnC,AEEA,ADAA,EDFE,AEEA,ADAA,QDFQ,AEEA,ADAA,CDFC,AEEA,ADAA,IDFI,AEEA,ADAA,CDFC,AEEA,ADAA,EKZmBA,CAAA,ANUhB,AEEA,ADAA,EDFE,AEEA,ADAA,oBKZc+B,iBAAA,CAAA/B,CAAA,EAAA8B,MAAA,OAAAlB,CAAA,GAAAoB,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAd,IAAA,CAAApB,CAAA,EAAAmC,KAAA,aAAAvB,CAAA,iBAAAZ,CAAA,CAAAoC,WAAA,EAAAxB,CAAA,GAAAZ,CAAA,CAAAoC,WAAA,CAAAC,IAAA,MAAAzB,CAAA,cAAAA,CAAA,mBAAAP,KAAA,CAAAiC,IAAA,CAAAtC,CAAA,OAAAY,CAAA,+DAAAxD,IAAA,CAAAwD,CAAA,UAAAmB,iBAAA,CAAA/B,CAAA,EAAA8B,MAAA;AAAA,AMCnE,APKA,AMLA,AEmCA,AV5BA,EMCE,EGRIpI,APKNoC,AMLM+G,AEmCN8R,AThCI3Z,EJOE,AEEA,ADAA,ASsIF,GJnJ+D4G,AMCxD,APKX,CGX6BkK,ARgBvBxS,AEEAA,ADAAA,AGTI,EQHI,APKdgC,ADFY,COHG,GCAG,ADAA1B,EHNW,CAAAoQ,CKyC7B,GLzC6B,AKyC7B1O,CFnC0B,CAACc,CLDwCmG,IAAA,IDMnE,CAAA9I,GMLwC,CAAC,GNKzC,GCNmE0G,AOoCnE,CAAA1G,KPpCmE,EKCZ,AEmCvD,CFnCwD,CXU3B,AEEA,ADAA,EDFCU,AEEAA,ADAAA,MDFM,AEEA,ADAA,EDFE,AEEA,ADAA,MKb6BoI,ENWrB,AEEA,ADAA,EKbqB,ANWnB,AEEA,ADAA,CKbmBpC,ENWhB,AEEA,ADAA,CDFC,AEEA,ADAA,GKbe,CAAAC,QAAA,aAAAmC,IAAA,+BAAAlC,KAAA,CAAAiC,IAAA,CAAAC,IAAA;AAAA,AMEnE,APKA,AMJA,AEiC2E,AV3B3E,EMCE,ALLA,CAAC,CQHG0P,APKNlW,ALKI,AEEA,ADAA,AUXAgV,APEA,AM+IF,ED1IIzB,GHV6D3N,AOoCQrG,CLzC9CwQ,QAAA,CAAAxK,CHY7B,COLuB,CDCD,CHRO,AHY7B7H,COL0B,EAAE,CHQD,CHVwCiI,EDOnE,CCPmE,CGUnC,AI0B2C1F,GAAA,CJ1BvC,EAAE,CHV6BqE,KAAA,CAAAC,COoCQtE,GAAA,GPpCR,CAAA0F,AOoCQ1F,GPpCR,AOoCQ,CAAAC,SPpCR8F,COoCQ,GAAA/F,GAAA,KAAAE,KPpCR,CAAAwF,COoCQ,EPpCR,AOoCQ1F,GAAA;APpCR,AMGnE,APIiE,AMH1D,AEgCoE,AV1B3E,EHGE,AEEA,ADAA,AGTAb,AM8IC,CVvIA,AEEA,ADAA,CWZG+W,AZUF,AEEA,ADAA,AQJA/C,KHX+DpN,ADOFzG,AMHjD0V,AEgC2DxL,CLzC9C,CEyJ1BrE,CN9IS,EAAE,AM8IX,GFvJwB4K,AKuCgD/L,CAAA,AT9BzDlF,CKKC,CAAC6U,CGRG,CJNS,CAAC,CIMP,ADCKqB,CAAA,ELJoCtP,AKIjC,CCDJ,ENHqC,AFM7C,CKKS,ALLR,CEN4Cc,ADOFxG,EII/BsT,CHXiC,ADOF,QCPE9M,GAAA,ADOFxG,GAAA,IAAAA,EIIV,CJJU,AQ6BUwJ,CR7BVvJ,CCPEuG,CEHE,CAAC,CFGH,EOoCQ,CPpCRd,GAAA,ADOF,CCPElB,EDOFxE,GAAA,CCPE,EAAAwG,EDOFtG,CCPE,GAAAwF,GAAA,ADOF,CCPElB,CDOFxE,AQ6BUmE,GR7BV,ECPE,COoCQ,UPpCRM,CAAA,MAAAgC,IAAA,EOoCQtC,KPpCRE,COoCQ,CAAAD,GPpCR,CAAAoC,GAAA,COoCQ,EPpCR/B,CAAA,GAAA+B,GAAA,EAAA/B,CAAA,COoCQT,CAAA,EPpCRyC,IAAA,CAAAhC,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,COoCQT,CAAA,QPpCRyC,IAAA,IOoCQzC,CAAA,WAAAA,CAAA,yBAAAG,MAAA,IAAAH,CAAA,CAAAoC,WAAA,KAAAjC,MAAA,IAAAH,CAAA,KAAAG,MAAA,CAAA8B,SAAA,qBAAAjC,CAAA,KAAAwF,OAAA,CAAAxF,CAAA;APnC3E,AMGA,APKA,ALKA,AEEA,ADAA,AYoB2E,AVzB3E,EMCE,AEPA+Q,ELJIrO,AMGAG,APKA1G,ADFFpB,AM6ID+J,GN7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A,EAAAC,KAAA,EAAAC,MAAA,UAAA3R,KAAA,cAAA2R,OAAA3J,GAAA,IAAAuJ,kBAAA,CAAAC,GAAA,EAAA9C,OAAA,EAAA+C,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAA3J,GAAA,KAAA0J,KAAA,CAAAW,SAAA;APYA,ADOA,AQyBA,AVvBA,ESLE2G,AHOA,AERA,APEA/W,AM0IC,CC5IA,CLHGwH,ADOArG,AMJF,AE6BEqY,ORzBO,CGbO9I,AJWR,EQDE,APGE,ADFF,CS2BG,ED5BAmG,CC4BG,AT3BFnX,EIXE,CAAAwG,AHaG,AQyBA,EPhCE,EENL,CFMQ,IAAI,AFKV,CAAC,GQDW;ANHlC,ADOA,AMJA,AE6BA,AVvBA,ESLE1H,AHQA,ACmIA,EJ/IIiJ,ADOArG,AQyBAqY,AT3BF9Z,EKOE2U,CLPC,EAAE,AM0IA,CE3IC,ARCA,CQDC7V,CJXS,CFOL,CI+ID,CAAC,CJ/IGD,AOgCA,AH+GF,GG/GK,CRzBC,CQyBC,ERzBE,CCPC,ADOA,CCPCwC,EMIA,CAAC,CHQC,ILPI,CKOC,ALPA,IELM,AGYF,CHZG,CGYD,CGRC,CAAC,CAAClC,OAAO,CAAC,ENJI,CAAC,OMIJmY,IAAI,EAAK;ANF7D,ADMA,AMHO,AE4BP,AVvBA,AOsIA,IJ9IIvP,AMGAuP,APGE5V,AIKF4S,AIoBEyF,AT3BF9Z,IQDI,CAACsD,ADAO4S,CHZI,AJaV,EAAE,GQDG,CAAC,CAAC,CNHC,EDMI,GAAG,CAAC,AQyBA,CJpBD,AEROA,CFQNvB,AERO3V,CE4BJ,IF5BS,EAAEC,CE4BJ,GJpBC,GAAGyV,GERU,EAAE,kBFQW;AHVxD,ADMP,AQyBA,AVvBA,ESLE,AHQA,AERA9V,APCA,CQDC,ARCA,CQDC,APGE8C,AQyBFqY,KP/BYhS,CEVI,AGaV,CAAClJ,GNGK,EGfJ,CHeO,EQyBA,CLxCHoO,AFSWlF,ADML,CCNK,CO+BL,CP/BQ,AO+BP,ELxCF,EGYM,CAAC,mBAAmB,CAAC,CHZ3BmC,AGY4BhL,MHZ5B,CAAwB0R,AGYW,CAAC,OHZJ,CAACK,EGYIgF,IHZE,CAAE,CAAC,IGYK,EAAK;ACCzE,APGA,AQyBA,AVvBA,ACJA,AM0IA,CN1IC,CEJCnO,AGYA,EJNInG,AMHF,AE4BEkG,EJnBJ4I,EDtB6D,AGa3DnS,CD2IKqX,IG/GM,GP/BC,AO+BE/W,CRzBC,ECNA+I,CDMG,EKwIAgO,CAAA,CLxII,AQyBA,CAACvU,AH+GF,ODlIH,EAAC,CAAC,CAAC2L,EHZa,AO+BE,CAAC,CJnBZ,CAAC,UAACwF,EETJ,AE4B4B,CAAC,CJnBrB,AER7B0D,EFQkC,QERxB,EACV,QAAQ,EACRjX,KAAK,GAAGC,UAAU,GAAGP,KAAK,GAAG,CAAC,CAChC,CAAC;ACFE,APGP,AQwBA,AVvBA,EGREE,AI8IA,ELvIEgD,AIKA,AELA,AEwBEoY,EH+GEpE,ECvIA,CCHQ0B,CJf+CxG,AFWrD,CAACjS,CKOHjB,CNAK,AIKAgX,AImBE,EH+GE,CG/GChW,EL1C6C,AEyJ3CA,CFzJ2C0H,AIerCgR,CAACtY,EHQL4V,CDvByC,ACuBxCC,CImBG,CD3BM,AC2BLzT,CH+GC,CJ9ID,AMIOnC,AF0ILuE,CJ9ID,CGYC,EAAE,MGRa,CC2BJ,CD3BM,AC2BL,EH+GE,CAAC,CJ9ID,CAAC,CAACtE,MKOpB,CLP2B,CAAC,AKO3B+W,AEwB6B,CAAC,OH+GO,CAAC,CJ9IVjO,AKOlB,ADuI6B7J,ECvI3B,GDuIgC,CJ9IV,EAAK,EKOnB,CAAC,IAAI,CAAC,GAAG,EAAE;ANCzD,AQwBA,AVvBA,ESJES,AF0IA,EJ9IEoJ,ADOAnG,AQwBEoY,EJnBA,AELAhE,ADuIAT,IF1JyD,AFYrD,AMIA,AHQEV,CHZDxR,AMIAzE,KDGK,CHjBC+R,AFUA,ADOA,AMAAtN,AEwBE,CP/BD,CAAC,AGYE,CImBC1E,EJnBEiW,ACkIF,CCvIC,ADuIAe,CCvIC,CHjBC,AGiBA,CHjBC1E,CIcC,CAAC,AHQE,AImBA,CAAC9P,CLzCD,CAAC,ACsBE,CDtBD,AEwJA,CDlIG,ACkIF,EAAE,ME1IM,CAAC,AC2BE,CD3BDlC,AC2BE,OD3BK,CAAC,UAACmY,CC2BY,CAAC,ED3BT,EAAK;API7D,AQwBA,AVvBA,EGRE,CAAC,CAAC,AMIA,APGAvV,AMAA,AEwBEoY,AH+GF,EDlIE,EDvB0B,ECuBtBrF,CCkIC,ELvIE,GIKG,ACkIA,GG/GK,EJnBA,CImBGjW,CJnBD,IAAIiW,GImBK,CAACzT,EJnBA,KAAK,EAAE,IAAIyT,AImBE,CAAC,KJnBG,KAAK,EAAE,EAAE,OImBS,CAAC;AP9BrE,ADOA,AQwBA,AVvBA,EQDE,ADuIA,CCvIC,ADuIA,CE1IC,APGA9S,AMAA,AEwBEoY,ID3BI5C,AHQF,CCkIC,CF1JuB,GHmBnB,EIKE,CGRG,CJhBczG,AK2Cb,ED3BE,AHQF,CImBGlS,GD3BDoE,EJhBW,CAAAwK,EK2CF,CAACpM,GL3CC,QIgBA,EAAC,AC2BW,CL3CZ0P,AIgBE,AC2BW,QL3Cb,CAAAzD,IAAA,YK2CsC,CAAC;AP7BvE,ADMA,AQwBA,AVvBA,EQAE,ECJE,APGArL,AQwBEoY,AH+GF,EDlIE,AEJArE,CFIC,CDzByB,AIiBtByB,CNHDvP,EI6IE,EDlIE,ECkIE,CE1IG,CHQD6M,EGRIuC,CPGD,AQwBE,GD3BG,AC2BAzY,CD3BCqE,ADIF,EFIE,CHXCgF,CAACC,AKOA,CAAC,EFIE,AEJA,AEuBE,CJnBD,AImBE9G,EJnBA,EHXE,EAAE,OMGS,AC2BA,CD3BC,AC2BA,CD3BC,sBC2BsB,CAAC;ARvBxE,AQwBA,AVvBA,EGPE,AI6IA,EE1IE,APGAa,AMCAkU,AEuBEkE,IJnBE,CHXC3S,CEfuBoJ,GHqBnB,EIKE,GD1BiB,CAAA9B,AC0Bb,CImBG,CFvBD,CAAC,CHtBU,AFeT,AKOA,AEuBEpQ,CP9BDuJ,OO8BS,CP9BD,AO8BE3E,CP9BD0E,QAAQ,CAAC,IO8BM,CAAC,gBAAgB,CAAC;AP7BlE,ADMA,AQwBA,AVvBA,AOsIA,IE1II,APGAhG,AMCA6T,AEuBE7B,EJnBA,CAAC,CGRGuD,EJnBsB3G,GC2BnB,GGRK,CHQDgE,CD3Be,CAAA3D,AImBXzH,AC2BA,EL9CW,CGuBV,AEuBE9K,CD3BC,CJnBOkS,AImBN4G,CDKpBlP,CFGoB,CJLC,COHG,CACxBkB,CC0B0B,CJnBD,AImBEtI,CL9CD,AC2BA,CGPtB,CAACuW,AHOuB,GGPpB,CAACJ,MDIU,AEsBqB,CFtBpB1B,AEsBqB,CD1BxB,CAAC+B,CAAC,GAAGJ,QAAQ,CAACI,CAAC,EAAE,CAAC,CAAC,GAClClO,ADGyC,EAAEoM,AEsBqB,CAAC,CDzB7D,CAAC6B,GAAG,CAACJ,QAAQ,CAACvL,CAAC,GAAGwL,GDG4C,CAAC,GACrEvY,CCJgC,CAAC+M,CAAC,EAAE,CAAC,CACvC,CAAC,EDGW;ALPhB,ADMA,AQuBA,AVvBA,EQEE,EEqBIsO,IJnBE,CHVClS,ADMAjG,CGtBLiP,KC0BW,ED1BJ,CAACC,CC0BO,ED1BJ,CAAC,CHsBOlP,AQuBE,CRvBF,EAAG,AQuBEvD,EP7BAwJ,CAAA,EAAG,GO6BK,CAAChH,aAAa,CAAC,CL7CP,EAAA0P,QAAA,CAAAK,EAAO,CAAC,UK6CwB,CAAC;AAC7E,AVvBA,EGNE,ADMA,AMEA4E,ECHE,ACwBEwE,EP7BElS,AGUF,CAAC,CD3B8C,CHuB5C,IIII,CHVG,GAAG,AGUFyM,CHVG,EKQA,IAAI9V,CEqBG,CJnBD,EImBIJ,CFrBD,EFEE,CAAC,EAAE,EImBI,CAACwC,aAAa,CAClD,sBRxBuE,CAACgB,IAAI,CAC1EC,CQwBJ,CAAC,ORxBY,CAACC,SACZ,CAAC;AACH,AMAA,AEuBA,AVzBA,EGNE,EMKE,AC0BEkY,EP/BElS,EElB6C,AIuB7C+O,AHKA,IGLI,CAACpN,CNLG,CGUD,EHVI,CAAC,CAAC,AGUF,CHVG,AMKF,CAAC4N,IC0BM,ED1BA,CC0BGjZ,ID1BE,IC0BM,CAACwC,CD1BD,IAAIqW,QAAQ,AC0BE,CAClD,ED3BmD,GAAG,EAAE,qBC4B1D,CAAC;ARvBM,AMAA,AEwBP,AV3BA,IU2BMgD,ED5BA,AHKA,CAAC,EJDSlY,AMAA6T,CH5BqC,GC6BxC,ID7BwCtF,CH4B5BvO,CAAA,EAAG,EQwBH,ELpD4B,CAAA2M,AKoDzBtQ,CFxBMwX,CAAA,EH5BmB,AG4BhB,IEwBD,CAAChV,aAAa,CAAC,yBAAyB,CAAC;AAC7E,AV3BA,EGNE,ADSAQ,AMAA,EEwBI8Y,ELrD+C,AFoB7CnS,AMKF8O,EHKE,CEDC5Q,CCJC,CAACwD,APIA,GAAG,AQwBE,CJvBD,EIuBIrL,CD5BD,CNLG,AMKFiZ,APIA,AICA,GHVKrP,GMKC,AC4BE,CAACpH,CFxBnB,CCJmB,ADIfxC,MCJqB,EDIb,CAACC,EEwBmB,CAAC,CPjCC,CAACwJ,QAAQ,EAAEC,CKShB,CAAC,CEwBkB,CAAC,IPjCI,CAAC,YKSL,CAAC,EAAEQ,GAAG,CAC5D,UAACmN,UAAU,EAAK;AEwBpB,AV3BA,EGLE,ADQA/T,EG9BmD,AG+B/C,AEuBAyY,ED5BA,AHKA,CD/B+ChK,AFsB9C,GMIKmH,CNJDrS,AKSE,CLTD,EEtByC,CFsBtC,AMIE,AC4BA,CPhCD,EAAEA,AMIEiE,AC4BA9K,CPhCD,GAAG2J,AMIE,CAACwP,EPIA,CQwBG,CAAC3W,CD5BC,APIF,COHpBmW,IPGyB,ECRE,EAAE9R,AMKrB,CNLsB,AMKrBuG,CAAC,CNLsB,AOgCE,CAAC,CPhCD,AMKrBwL,QAAQ,CAACxL,CAAC,EACvBuL,GC0BmD,CAAC,ID1B5C,CAACK,CAAC,GAAGJ,QAAQ,CAACI,CACxB,CAAC;AC0BP,AV3BA,EK5BqD,AH+BnD/V,CG7BD,CFqBG,AGSA,AIuBE+Y,EDzBA,ADEEvE,ELTA5N,AKSE,ECFEuP,ADEA/B,KCFK,APCF,AQwBE,GDzBGvX,APCF,AQwBEE,CPhCD,CKSG,CAACyX,CNDD,CODG,ADEA,GCFGrX,ACyBA,CAACoC,IDzBI,GAAGnC,MCyBM,CAAC,GDzBG,aCyBa,CAAC;AAC5D,AV3BA,EK3BC,AH8BC6C,ECPE,AO+BE+Y,EFvBEvE,CLRD,GKQK,CNDD,CMCGL,CEuBC,CRxBD,CAAC,CQwBGrX,ELjEZ6R,IG0CkB,CAACxN,CEuBC,CAAC7B,aLjEDqP,AKiEc,CLjEd,AKiEe,KFvBK,CAAC,CAAC,OEuBO,CAAC;AACxD,AV3BA,EEGE1O,EG1CwB,AC2CtB,AIuBEZ,EP/BAsH,AMMA,ADEEwN,KH3CkBvF,AH0Cf,CQwBG,ERxBA,CG1CY,AH0CX,AQwBE9R,CLlES2R,AG2CR,CLRD,CKQG0F,ELRAzN,CEnCM,EKkED,CAACpH,ILlEAkP,AG2CI,CAACrG,OAAO,CH3CZ,AG2CagM,AEuBA,CAAC,CP/BD,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CO+BG,CAAC;AACtD,AV3BA,EKxC0B,AH2CxBjU,ECPE,AGQAuQ,AEAE,AEuBAuI,CP/BD,AKQE,CCFD,EHEE,CAACrI,CGFGwF,GNNChQ,CGQC,CAAC/I,CGFG,EPCA,CODGwK,EPCA,CAAC,AICA,CGFG,AHEF,AIuBE,CDzBCwO,ECyBEtZ,CDzBC,CAACkZ,GNNC,CAACrP,CMMG,AHEXsM,CGFY,ACyBA,CAAC3T,EDzBE4W,AHEX,EAAEhD,GGFc,CNND,CAAC,AGQT,CGFY,CHEP,EIuBU,CDzBC,ACyBA,yBAAyB,CAAC;ALnEnD,AKoE1B,AV3BA,EEGE/S,AMCE,CHlCH,AGmCC,CLREyF,AKQD,AEsBGqT,EDzBA,AHEA,IGFM5C,AHEAlD,CJDD,GAAG,CAAC,CODG,ENLA,CAACvM,AMKEgB,CHEC,GHPC,AMKE,AHEA9K,CHPD6J,AMKE2P,CCyBC,EDzBE,CAACN,ACyBAlZ,GJvBG,CAACoL,CGFC,CAAC,CNLD,CAAC,AO8BE,CDzBCgO,ACyBA5W,KDzBK,GAAG,AHEA,CAAC,GGFG,CHEC,AIuBA,CJvBC,AIwBnD,2BACF,CAAC;AFvBD,AEwBA,AV7BA,EEGE,ECNEuH,AOgCEqS,ER1BJ9c,AICI+W,UHPU,AGOA,CHPCxM,AGOArF,CIyBG,GAAGxE,KJzBG,CAACyE,CHPC,CAAC,AOgCE,CJzBD,AIyBEjC,CJzBD,YIyBc,CAAC,CR1B3B,EAACD,CIC4B,CAAC,MJDrB,EAAE,OQ0BoC,CAAC,ER1B3B,EAAEQ,aAAa,CAAC;AGhCxD,AGoCA,AEuBA,AV7BA,EGHE,EOgCIsZ,ED3BA,GDIG1E,cEuBgB,GAAG3X,GFvBC2X,CAACvV,GAAG,CEuBG,CFvBD,AEuBEI,aAAa,CAAC,yBAAyB,CAAC;AAC7E,AV7BA,EEGE,AMGA,EEuBI8Z,ED3BA,AHEA,AEEErM,ICJFvQ,ADIM,GAAG0I,MAAM,AEuBA,CFvBC6H,EEuBEjQ,EFvBE,CAACoC,GAAG,CAAC,CEuBC,CAACI,aAAa,CAAC,UD3BlB,EAACiW,IAAI,EAAE,GC2BgC,CAAC,ID3BzB,EAAEY,MAAM,CAAC;AJ/BrD,AL8BA,EGHE,ADMA,AMGA,ICJI,APCA9V,AICA,AEEEqU,ICJFlY,AHEM4W,QAAQ,CEEC,CNHD,CAAC,AICEtW,CJDD,AMGE,CAAC,CNHD,EMGI,EAAE,CFFC,CAACoL,CEEC,EAAE,GAAG,CAAC,CAAC,CAAC,IFFI,CAAC,IAAI,CAAC,MGFtB,EAACqN,IAAI,EAAE,UAAU,EAAEc,MAAM,GAAG,CAAC,CAAC,CAAC;AJ/B5D,AK2DA,AV7BA,EGHEzQ,AKSA,EHpCI4J,AIgCF,APCA1S,CODC,CHECsW,AEEEuB,KCJG,CPCC,CAACjU,CICC,CAACY,CHPC,CAACoC,AKSE,GAAGkE,CHpCC,EF2BA,CGOC,AEEE,CFFDrG,AEEEsG,CLTD,CAAC,CGOC,CAAC,EEEI,CNHD,AMGE,CNHD,AMGE,YNHU,EAAElH,KICK,CJDC,AICA,CJDC;ACLtD,AHGA,EK/BuB,AGqCrB,ENHE7D,EGlCmB2S,AIiCjB,AHEA,AEEAmF,IFFMvB,CDnCW,CHkCX,CAACzS,CGlCUwN,OCmCA,GAAG0E,GEEC,ENHE,CAAC,AMGA,CHrCP,AGqCQ,EFFI,CAACI,KAAK,GJDC,AICE,CAAC,CJDDvS,AICE,EDnCvBgI,IHkC2B,CAAC,cGlC5B,GAAA8D,IAAA,CAAG,SAAAiD,SAAOC,UAAU;AF8BpC,AO+BP,AV7BA,EQOE,EHvCyC,AHmCvC7S,EODE,AHEAsW,CEGC,CHvCoCtE,CF8B3BhI,CMIVtK,CDKKmH,CNJC,AMIA,CNJC/C,CICC,CAACiS,AEGA,CHvC4B,AGuC3B,EHvC2BjD,AGuCzBjM,CAAC,ELTSmD,CAAC5J,AKSP6P,IFHI,AEGA,CHvCiB,AF8BT,AKSPrJ,ELTSvG,ADKP,CAAC,EICJiL,CEGO,EAAEzE,CAAC,EFHV,AEGY,CLTQ,AGMduP,CEGQ,CLTQ,CDKN,EAAErS,AICP,GAAG,CAAC,EJDS,AICTuH,CJDU,IODtB,CHEY,CGFXmN,AHEclC,IGFV,EAAE,KHEmB,CAAE,EGFb,EAAEnW,KAAK,GAAGC,UAAU,GAAGP,KAAK,GAAG,CAAC,CAAC,CAAC;AC4B9E,AV7BA,EGFEE,ADKA,CAAC,CGpCwC,AImCvC,ADKA8X,EFHEzB,GJDG,CCLC,CE/BiCxK,AF+BhC5L,KGMK,CAACuW,QEGQ,ELTE,CAAC,AGMA,CAACF,AEGAsB,CHxCc,GAAAjL,IAAA,ACqCN,CAAC,IEGI,CLTC,AKSA9F,CLTC,AKSA,CLTCvG,AKSA,EHxCFyS,KF+BS,CAAC,IE/BVC,MF+BW5J,GE/BX,GF+BiB,EAAK;AOgCjE,AV7BA,IGFI,ADKApJ,AMIA,EHzCuC,EFgCvCN,AKSImY,INJI,CAACjU,MMIM,IAAIkU,CHzCoB9E,QHqCX,CGrCW,AHqCV,CGrCU5C,IAAA,GAAA4C,CHqCD,EAAEnP,AMIA,EAAE,IHzCH,AHqCO,CGrCP6D,AHqCQ,ECLxB,EEhCgB,AFgCf0B,MAAM,EAAE,QAAQ,EAAEhJ,KAAK,GAAGC,UAAU,GAAGP,KAAK,GAAG,CAAC,CAAC,CAAC;AOgC9Eyc,AV7BA,IGFI,AMIA,APCAvc,EICE,AEGA,EH1CqC,AFiCnC,IAAAhB,ADKI,CAAC8E,AMIAmM,IAAI,CAACpJ,CAAC,CAAC,AEsBA,CAAC,CAAC,OR1BO,CAAC,SAAS,EAAEhD,MAAM,CAAC,GCLvB,EAACuF,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;AOgCrD,AV7BA,ISEI,APCApJ,AMIA,AEsBJqV,EP/BMjM,AGMA,EGFE,EJtCmC4J,ACwC/ByD,EHNA,AMIJzX,APCI,CCLC0F,ADKAZ,MGvC8B,AFkCxB,AGME,CDxCsBsM,AFkCvB,CAAC,CGMGpQ,EDxCmB,KHuCd,CAAC,AICE,CAACoL,GIyBhB,EAACkK,GR1BqB,EAAEvR,GICK,CAAC,EJDA,CAAC,CICG,CAAC,CGF3B,AC2BQ,CAAC,CD3BR0U,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;AC4BnD+D,AV7BA,EEGE,AMIA,ELTE,EMIE/D,AHEAhC,AIyBA,CAAC3S,GLlEoCkP,AIuCjC,CAACtO,IHEI,CAACF,CGFC,CAAC,CJvCyB,AIuCxB,CJvCwBkD,GKkEpB,CLlEoB,AKkEnB,CJzBC,CAACjD,GAAG,CAAC,EIyBE,EAAE8X,oBJzBoB,AIyBA,CJzBC,AIyBA;ARzBvD,AQ0BA,AV7BA,EGFE,CAAC,CAAC,AMIA,EHEE9F,ID1CqC,KC0C5B,CAACV,CDxCW5D,KAAK,KCwCL,MAAA7G,MAAA,CAAM6K,IAAI,CAAClC,KAAK,CAAE,iBDxCb3I,MAAA,CACmBuH,UAAU,GACvD;AHuCC,AQyBP,AV7BA,EGDE,AMGA,ADKA,CCLC,CAAC,ENHE3J,AGKAmN,GJAUrS,GGtCRsK,ICsCQ,CAACkI,CDtCH,CHsCYxS,CGtCV,AFiCI,ADKO5D,ICLH,CAAC,ADKO,ECLL,ADKOC,CGtCV,ACsCI,CAACoW,QJAe,CIAN,CJAQ,AIAP;AI0BvC,AV7BA,ESGE,APCAxS,AMGA,ELREuF,AO8BAiT,ED1BElE,GDIGtI,ENHE,CGtCHgD,AHsCI7S,AQyBA,CFtBC,CAAC6P,GNHG,CODC,ADIA,CHzCH,AHsCI5P,AMGAuG,EHzCF,CIqCK,CNJC,AMIA,CNJC,CAAC,AMIA,ADIA,GAAG,CNHC,AMGA,CNHC,AMGA;AAC9B,AEsBA,AV7BA,EEIE1C,ECLEgF,AMIAuQ,AC0BApZ,EJzBE,MJAM,CAACD,CGtCH,AK+DI,CD1BC,CAAC,CAAC,CNJC,ADKA,CAAC,ECJbwJ,OElCkB,EAAE,UFkCD,CAACb,mBAAmB,EAAEC,mBAAmB,CAAC,GAC7D3I,UAAU;AKQhB,AEqBA,AV7BA,EGCE,ADGA8D,EODEoU,AC0BAtE,EJzBE,GEIGsD,AEqBA,CJzBGb,EDtCJ,AHsCI,CAACtW,GODG,EPCE,AIAE,CGAdwJ,APAa,EIAI5J,KEIGuX,CAAA,EFJK,AEIF,CFJGnM,QGAP,CAACiN,IHAmB,CAAC,IAAI,CAAC,OGAR,EAAEC,iBAAiB,CAAC,GAAGjY,UAAU;APC5E,AQyBA,AV7BA,EGCE6I,AMGA,ADIA,EEqBEwT,EJzBEhG,AEIEW,IH1CF,CACF,CAAC,ECqCS,CAAC7S,CHHC,AKOE,GAAGxE,CLPDI,CO4BC,GJzBG,AIyBA,CP5BC,AGGAqE,EEII,CFJD,AEIE2G,CFJD,AIyBA,CAAC,CAAC,UFrBY,CAAC,KAAK,CAAC,IFJE,CAAC;AHFrD,ADIO,AQwBP,AV7BA,ESIEmN,ADIAlB,EEqBEsF,EJzBEjG,EDtCD,CHuCWtS,GMGJ,CAACiH,AEqBA,CDzBC,AHAA,CAAC0K,CIyBC,EDzBE3V,EPCSgE,AMGP,CNHO,AMGNiT,AEqBA,EDzBE,APCO,GIDJ,KEIK,CFJL/L,EEKtByM,IFLsB,CAAM5B,IAAI,CAACjC,MEKjB,CAACyD,CFLwB,CAAE,kBEKN,CAACI,gBAAgB,CAAC,CAAC;ALNrD,AMEP,ACyBA,AV7BA,EEKE,AMIAV,IFLIhB,GHFUpM,ADGP1H,CGhDCyP,EGoDE,CAAC+D,GFLG,CJCC,AIDAS,CD/CC,AHgDAnS,GGhDA2O,EF6CY/I,CAAA,AKON,ELPS,CKONoN,CFLC,CAACX,CD/CX,CAAAjI,IAAA,EC+CmB,AEKA,CFLC,AEKApD,CNJC,CAAC,CAAC,IMII,CAACgM,UAAU;ACHjD,APAP,AQwBAgE,AV7BA,EGEE,AKOAhE,OLPOxP,AMGO6R,CJjDE,EGqDN,CAAClV,AEoBA,CL/DJwN,AK+DK+D,ODxBc2D,CJvCX,AIuCW,ADIN,CH3CJtH,AG2CK3N,CCJQ,CJvCX,AK+DK,CFpBC,CLPjB,AKOkB,CLPdzE,AO2Be2V,QP3BP,CAAC1V,EKOiB,CEoBC,CFpBC,AEoBA2V,OAAO,CAAC,IP3BX,CAAC,EKOiB,CAAC,SEoBS,CAAC,EP3Bb,CAAC,AO4BnDD,EP5BqDzL,GAAG,CAAC,MO4B7C,CAAC0L,GP5B6CxM,IO4BtC,CAAC,CP5B2C,EAAK,cO4B/B,CAAC,GACvC0B,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACpD,QAAQ,CAAC,CAAC,CAACsU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;ARxBtC,AQyBP,AV/BA,ESKE,ADIAvF,ELPE,AO6BAwF,EJ3BE,GGCGhV,APCOvD,ECJL8E,CErCS4J,AG4CR,CAACyE,EAAE,ELPE,CAACpT,AKOAyG,AEsBA,ERzBSxG,CGzCP,AHyCO,AQyBN,CLlEDoD,AG4CE,CNHQ,AMGPqD,GH5CH,AKkEM,CD1BjB,CAAI/K,CDIgB,CAAC,CAAC,CAACsI,ICJX,CAACrI,ENHiB,CAAC,AKOA,CLPC,AKOA,EAAE,CAAC,CAACsI,KAAK,CAAC,CAAC,CCJd,ADIe,CCJd,aAAa,CAAC,EAAE2B,GAAG,CAAC,UAACuO,IAAI,EAAK;AC2BrE,AV/BA,EGEE,ADIAlW,AMGA,CLPC,CAAC,AMGA,AC0BAua,EJ3BExH,AEKJhW,INHQ,CODC,APCA6B,CG1CS,AKmER,ERzBE,CQyBC,ERzBEoD,GQyBG,CJ3BC,CAACiS,QJEM,GIFK,CAACH,UAAU,CAAC,AEK1B,EAACgB,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC;ALN9C,AO6BA,AV/BA,EEME9U,AMGA0G,EFLE,AI2BA8T,CJ3BC,CGCCtF,AHDA,EGCE,EJ1CY,AI0CVgB,APCA,CAACjU,AMGA,CAAC+G,ECJE,CAACkM,EAAE,CDIC,AEsBA,CFtBCJ,CNHC,CAAC5S,AQyBA,GRzBG,CAAC,CQyBC,GFtBG,CAAC,CNHC,CAAC;AMIhC,AEsBA,AV/BA,EEMElC,AIFA,CAAC,CAAC,AI2BAya,ED1BEtF,IJ3Cc1E,AI2CV,APCA,CAACxO,CODCiU,IAAI,CAACpU,EJ3CG,CAAAqD,AH4CA,AQyBA,CRzBChD,EQyBE,CLrEH,GH4CO,AQyBA,CRzBC,AQyBA,CAAC,SD1BS,CAAC,MPCM,CAAC;ACH9C,AGEA,AEMA,AEqBAwX,AV/BA,EEME,EODE,CAAC,CPCGvX,GMICiF,CHjDW,KH6CH,EG3CaoI,CH2CVhS,CQyBD,CAACwE,KLpEkB,CAAC8N,AH2CX,CAAC1N,CMIDgF,CAAC4B,AEqBA,CLpEc,AKoEb/G,CLpEc,CAAC,AG+Cb,CEqBC,CFrBCgH,AEqBA,GFrBG,EAAE,ENJI,CAAC,MQyBI,CAAC,IRzBM,CAAC;ACHxD,AO6BAyQ,AV/BA,ESKE,APCAvX,AMIA,CCLC,CNHGwF,AMGF,IJ3CyC,CGgDpCW,ENJE,CAACtG,CMIC,CAACkH,ELRI,GAAG,AKQF,AEqBA,CP5BjB,AKOkBZ,AEqBAtL,CRzBC,CAACiF,EMIE,CNJC,AMIAsG,AEqBA,CRzBC,AQyBAkS,KFrBK,CAAC,CAAC,AEqBA,GAAG,CFrBCxR,GAAG,EEqBE,CRzBC,AMIAD,CNJC,EMIE,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;ACJ1D,APCA,AMIA,AEqBAvC,AV/BA,EGEI9H,GAAG,EAAEiJ,EO6BA,CLtEG0I,AKsEFoK,SLtEW,GAAAlK,AKsEC,CAAC,CP7BT,OEzCO,CAAAvE,IAAA,KKsEoB,EAAE,kBAAkB,CAAC;ADxB9D,APCA,AMIA,AEoBA,AV/BA,EGCgBpE,EMKVsP,ADKA5B,ILVgB,CDMblT,CG9CH,AFwCkB,IExCdiO,IH8CQjO,CAAA,CMII,CNJD,CODG,CJ7CL,AGkDM,CHlDLc,CI6CO,CACzB,EJ9CsB,KAAKuN,kBAAU,CAACC,aAAa,EAAE;AFwC7B,AO+B1B,AV/BA,CGA2B,CMMvBxN,APCF,AMIAqS,CLVA,CKUE,ECLI,APCF,AMIA,CNJC1U,AMIA,CCLG,IJ7CF8P,KAAK,CAAC,CI6CO,WPCS,EAAE,+BG9C2B,CAAC;AKuE5D,AV/BA,EGAIjS,AMKmBkJ,ADMrB4N,ENJE3U,AMIA,AEoBE6Z,CP/BC,CKWD,CLXG7S,AKWF,CCNsB,EJ5CvB,AI4CyB,CJ5CxB,EI4C2B,IJ5CrB,EKsEQ,GAAGtK,GP/BV,EDOa,GAAG,AQwBE,CAAC4E,GRxBC,WQwBa,CAAC,mBAAmB,CAAC;AV9BpE,EGDgByF,AMKoBuP,ADOlC1B,ENJE3V,CMIC,EAAE,CLZe,AMKoB,ENLlB,AMKoB,EJ3CpC6Q,AH8CI,CAACjS,GAAG,CG9CH,CAAC,CH8CK2D,aAAY,eG9CY,CAAC;AFsClB,AMKqB,ADQ/C,AEoBA,AV/BA,CGF2B,AMKqB,ADQ/C,ELZC,AMKA,CPIEC,MG/CE,IH+CQ,CAAC,YAAY;AQwB3B,AV/BA,EGFI5D,AMKAwE,GNLG,CMKC,APKFpD,CCVGgI,CEtCF,AI2CG,CC4BD6S,KRvBK,CAACjc,EOLI,CPKD,EQuBEic,CRvBCpY,AQuBD,EAAG,CPjCT,WDUmB;AFPjC,EGHgBqF,AMKKA,AC6BnByS,ERvBE,CAAC,EAAE,CCXe,AMKK,EJ3CpB9J,AFsCiB,AMKK,APMnB,AQuBA,CRvBC,CAAC,CONoB,APMnB,AQuBA,CAAC8J,KLxEP,CAAApV,EKwEe,ELxEf;AFsCmB,AHI1B,CGJ2B,CMKOkS,AC8BhC,CPlCA,GOkCIkD,ED9BkC,EJ3CjC,AI2CmC,IC8B5B,EAAE;AD9B8B,ATA9C,CSA+C,CNJ3C3b,CMKF,CPOE4D,AQuBAoY,CPnCG,EAAE3S,CEvCF,MHmDO,CAAC,IQuBI,CAACrJ,GAAG,GAAGkc,CRvBC,ECZV,UOmCgB;AV9BjC,EGLmBhT,AMKf1E,AC+BF,CAAC,GD/BK,APQFpD,ECbmB,AMKf,CC+BD,CL3EFyQ,AFuCoB,IDab,CAAC7R,GAAG,CGpDX,CAAAiP,CI4CgB,APQFnL,GGpDd,WHoD0B;ACbJ,AHM7B,ESDyBoF,EPSrB,AQuBA8S,CRvBC,EAAE,COTwB,EJ5CxBnK,AI4C0B,APSvB,CAAC,CAAC,COTwB,APSvB,MGrDN,AK4EY,CL5EZT,AK4EapR,EL5Eb,CK4EgB,EL5EhB6R,CK4EmBsK,QL5EnB,MK4E2B;APpChC,AHMF,ESFsC1D,APUpC,EQuBE4C,IDjCwC,EJzCxC,AIyC0C,ACiCpC,CAACe,qBAAqB,CAACC,MAAM,CAAC;APrCtC,AMI+C,APWjD,AFRA,CGNC,AMGiD,CACjD,ACiCC,QL1EEhL,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAAO,SAAA,CAAAT,EAAO,CAAC;AI2CjD,ACgCA,AV/BA,QK5CkD,CI2CzCkH,WAAWA,CAAA,EAAG;ANJvB,ADcA,AQwBA,AVhCA,ESDE,ECiCIgE,IL7E4C,CFuCzC1T,ADcA7E,OAAOA,CAAA,CQwBI,CRxBD,ECdE6E,AOsCE/J,CPtCD6J,OOsCS,CAACjF,GPtCC,EAAE,SOsCW,CAAC,iBAAiB,CAAC;AACjE,AVhCA,EGNE,AMKA,APSA5B,EQwBI0a,EDjCEjT,IJ7C0C,CHsDvC,GAAG,CQwBG,EL9EiCuI,AI6C/B,CCiCChT,CRxBD,COTG2Z,MJ7C4B,AK8EtB,CL9EsBrJ,AK8ErB1L,IL9EqB,OI6CV,CAAC8F,ECiCE,CAAC,GDjCG,CAC3C,SCgCqD,CDhCpDC,ACgCqD,GDhClD,EAAEwL,IAAI;ACkCdsH,AVjCA,EGNE,ADcAna,EOTY,EJ9CoC,AFyC1CmH,KMKWE,GAAG,ACkCR,CAAC7G,EPvCI,AMKMqS,GNLHhM,CMKO,CAACE,GPSL,GOTW,APSR,GQyBG,CPvCG,AOuCF,CPvCGK,ADcF,MCdQ,CACrC,IOsCwC,EAAE,IPtCzCC,GAAG,EAAEC,GOsC0C,EPtCrC;ADcf,AFRA,ESFoC,ACmClC8S,ELjFgD,AF0CnC,CMKX,CACF,CJhDgD9K,AIgD/C,INNiBjI,EOuCP,CPvCU,AOuCTnG,CLjFoC,EF0CxBoG,KAAK,CAACP,AOuCT,CAAC5F,GAAG,CAAC,CPvCU,uBOuCc,CAAC;ARvBrD,AQwBA,AVjCA,CUiCC,CLlFiD,AF0CZ,AOwCpC,CLhFD,EFyCG,CACF,CAAC,EDcMR,SAASA,CAAC7D,KAAK,EAAEC,UAAU,EAAE;AQ0BtCod,AVlCA,EKhDC,AIgDC,APSA,IAAIza,QQyBQ,CRzBC,AQyBAc,ERzBE,CGlFX4O,aK2GyB,CAAC,GL3GTA,CAAAW,EAAA,MK2GqB,EAAE,YAAM;AVjCpD,EGLE,AMKA,ACkCAqK,EL5GqB,AHmFnB7Y,EOTIgG,KJ1Ee8H,EHmFV,AQyBA,CRzBC,AQyBAnO,CRzBC,CGnFQ,CAAAmN,CI0EH,GAAG7G,CJ1EA,CK4GA,CAACpG,CDlCG,CAACqG,GJ1EL2G,CK4GO,CAAC,CDlCG,CAAC,CAAC,GAAGjH,CJ1EhB,UI0E2B,OCkCK,CAAC;AACxD,AVlCA,CUkCC,CL7GsB,AFsErB,AOuCA,ERzBE,ECdII,YAAY,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGN,WAAW;AEtE3B,AK+GvB,AVnCA,ESAE,APSA,CG5DD,MKsFQkT,eAAeA,CAAA,EAAG;AVlC3B,EGLE,AMKA,APUA,AQyBA,IDnCI3S,APUA5H,AQyBAyT,KAAK,GAAG7W,QDnCQ,APUA,AQyBA,CAACoL,EDnCE,CAAC,APUAtI,UAAU,AQyBA,CAAC,CRzBC,MQyBM,CAAC;ALrF7C,ALmDA,EGLE,AMKA,ACmCA+T,ERzBE1T,ECfE6H,AMKA6O,CCmCC,CAACta,KRzBK,AQyBA,GRzBG,AQyBAid,CRzBCrZ,KCfK,AOwCA,CAACya,EPxCE,AMKA,CNLC,ADeA,GAAG,CAAC,CQyBC,CAACC,ERzBEjb,EQyBE,cRzBc;AG5DlD,ALmDA,EGLE,AMIwB,ACoCxB5C,ELtFIsT,EF8CArI,AMIoBC,ICoChB,CAACsJ,IDpCe,ACoCX,CAACgC,EDpCUrQ,CNJP,QOwCQ,CAAC0Q,ILtFM,CKsFD,CAAC,UDpCR,CACL8C,kBAAkB;ATCvC,EKpDkC,AF8Cd,AOyClB9C,EDpCqC1L,APWnC,EG9D8BoI,AF8CdrI,COyCb,CAAC4S,CDpC+B,EJnDL,GAAAxM,AKuFpB,CPzCM,AOyCL,CAAC,EPzCInL,aE9Cc,aF8Cd,CACEgE,CE/CY0B,WF+CA,QE/CA,GAAA8D,IAAA,CAAG,SAAA6D,SAAA;ALqDrC,ESFuC,ACqCrCxT,ELxFmC,AF+CHmL,ADgB9B,KChB8B,COyCxB,CLxF2BU,AKwF1BkS,CRzBC5a,SAAS,CQyBC,CAAC,MAAM,CLxFQ,AKwFP,GLxFOwJ,IAAA,UAAA8G,UAAAC,SAAA;ALsDrC,EGPkC,AO0ChC1T,EDtCA,EJnDmC,AHgE/B,GObJkL,CCsCQ,CRzBC,AQyBAsJ,CRzBC,GQyBG,CAACwJ,EDtCd,CAAAjX,CAAA,IJnDmC2M,EImDnCvI,CCsCyB,CAAC0L,GDtC1B,EJnDmC,AKyFJ,CLzFIzG,AImDnClF,ACsCgC,ILzFG,GAAAwI,EImDnC,CAAA1M,CAAA,IAAAC,CJnDmC,CAAAS,EImDnC,EJnDmC,CImDI;ATIzC,IGRE,EMIuC,EJnDJ,AHiE7BnF,CClBN2I,CMIWiL,IAAI,EPcD,COdChL,APcAhK,CClBf,CAAA4F,CAAA,ADkBkB,EOdH,CAAAxH,APcM4F,GClBrBgG,EMIe,GNJf,GAAAD,CDkBgC,QClBhC,CAAAlE,CAAA,IAAAC,IAAA,GAAkC;AHSpC,EUmCE,IP5CkC,AMKhC+D,EPcI,EGlE6B0I,AF+CxB9I,KAAK,GAAAO,CE/CmB,CAAAzD,EIoDjB,CNLF,CE/CmB,AF+CnBnI,EMKM4W,GNLN,CMKU,CAAC9L,MAAM;ATKnC,EUmCErK,IP5CEgL,AMKA,APcE,IGnE+B,AIqD7BH,ACuCE,CRzBC,AQyBAjG,CRzBC,KGlEJiN,KF+CY,AMKA,GCuCK,CP5CDjH,AMKAI,ACuCE,KP5CG,CAACX,KE/CF,CAAC,AF+CO,CE/CN,CAAC8D,EIoDS,EJpDL,AIoDO,ACuCE,CL3FR,AK2FS,CAAC4H,SL3FTpC,EK2FoB,EL3FhB,CK2FmB,CL3Fd,QK2FuB;AVlCrE,MGTI,EMKEkG,APcEtX,ECnBAsI,EE/CJ,IAAM+I,AHkEM,CAACzS,GAAG,ECnBA,CDmBGiE,GGlEH,AF+CI4F,CMKC,EJpDF2I,CIoDKwC,GJpDD,CAACtC,AIoDI,EPcE,GGlED,CAACC,EF+CM,EE/CF,AF+CI,CE/CH,UAAC5H,CAAC,EAAE6H,CAAC,EAAK;ALyDjD,EUmCE,MP5CI9I,AMKA,APcE,MGlEF,OAAO+I,AF+CM,GAAGpJ,KE/CD,AF+CM,CE/CLmJ,CAAC,CAACE,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAAC9H,CAAC,CAAC+H,KAAK,EAAE,EAAE,CAAC;ALyD1D,EUmCElP,IDvCE,APcE,ECnBA,GDmBK,CGlEP,AHkEQ,AQyBA,CL3FP,AK2FQ,CL3FP,WK2FmB;AVlCzB,ISJE,ACuCE/E,EP5CA,EDmBIuC,IGlEJmQ,AK2FQ,CAAC9N,GRzBG,CAACzD,GAAG,GAAGkE,IQyBI,CAAC,CL3FP,CAACuO,MHkEY,IGlEF,CAACA,KK2Fa,CAAC,CAACmC,GL3FL,CAACnP,MAAM,CK2FS,EL3FN,CAAC,AK2FQ,CL3FP,CAACsN,QAAQ,CAAC,AK2FQ;AVlCzE,ESLG,ACwCD,CAAC,CP5CD,CO4CG,GRzBG,CQyBC,CL3FP,AK2FQ,CL3FP,AImDA3M,CJnDC,EImDD;ACyCH,AVnCA,EGVG,EMIA2D,EPgBG,EGnEF,GF+CD3D,ADoBQ,CAAC,COhBT,CNJA,AMIA9B,CAAA,CAAA8B,GAAA;AC2CH,AVpCA,ESPG,ENJA2D,AO+CClL,IL9FA,AHoEIuC,IQ0BI,CP/CT,AO+CUqC,CP/CVa,CAAA,CAAA8B,ADqBa,CAACpG,ECrBd,CDqBiB,GAAGmE,IQ0BI,CAAC,QR1BM,UQ0BY,CAAC,EAAE;AVnCjD,EGZG,AOgDDtF,ED5CCkL,IPkBK,EGrEJ,AK+FM,CACLtG,ED7CF,CAAAuC,CAAA,EJnDCuM,QKgGe,CLhGf,AKgGgB,CLhGhBpD,IAAA,aKgGkC,CAAC,CAClCxM,gBAAgB,CAAC,OAAO,EAAE6Z,eAAe,CAAC;AAC/C,AVtCA,ESTG,ENJAzS,EE/CC,AHsEE,KAAK,CAAC,CCvBT,CAAA/D,CAAA;AOqDH,AVvCA,EGdG,AMMD,EJrDE,AKoGE8W,ED/CEnE,CJrDJtG,CHuEIjR,KOlBO,EJrDX,AKoGa,CD/CCvC,APkBF,CAACmB,CQ6BGnB,ER7BA,GAAGuF,COlBG,CAAC6F,CC+CC,CAACxG,SR7BK,EOlBM,CAAC,EC+CE,CAAC,ED/CE,CAAC,UC+CU,CAAC;AAC1DqZ,AVvCA,EK9DI,AFgDF,AMMAnE,CJrDD,GF+CO1Q,EDwBA,COlBC,CAACiC,CC+CC,CPrDG,AOqDFvH,GPrDK9D,EMMA,CAACyY,IAAI,CNNG,CAACrN,CMMD,GC+CG,CD/CC,AC+CA,OAAO,CPrDG,CAAC,AOqDF,KPrDO,CAAC,MOqDI;AVtClD,EK9DC,AFgDChC,AMMA0Q,AC+CAsD,IR7BI,ECxBE,CAAC/R,AMMA,CAACA,CPkBC,CAAC,CQ6BC,CAAC,CAAC,CPrDC,CAACjC,AMMA,CJ7DXkK,AI6DY2F,KNNK,CMMC,ENNE,CMMC,GNNG,IMMI,YJ7DA3F,CAAA;ALsElC,EGdElK,AMMA0Q,AC+CAmE,EL7GgC,IFwD1B,ADwBA1b,CCxBCpB,AMMA,CAACkK,CJ9DwBkI,CFwDtB,COqDC,CAAC2K,CPrDCjT,CExDmB,AHgFlB,CGhFkB0G,AI8DjB,APkBAxQ,COlBCyY,AC+CA,CAAC,CR7BC,AQ6BA,EL7Gc,CHgFXpU,COlBC,GAAGqU,CNNC,CExDMnI,AFwDLvQ,GAAG,IDwBE,EGhFA,QI8DY,CAACyY,MAAM;ACgDrD,AVvCA,CUuCC,CL9GiC,AFyDhCxQ,AMMA0Q,AC+CA,MPrDM,ADwBA,CCxBCtV,AMMA,CAACA,QNNQ,CAACC,AMMA,CAACA,ENNE,CAAC,AMMA,CAACoV,ONNO,EAAE,UMMU,CAAClU,GNNG,CAAC,AMMA,EAAE,aAAa,EAAE,aAAa,CAAC;AJ/D7C,ALwElC,EGdE,AMMAmU,CJzDD,GFmDCxa,ADwBI,GOlBG,CAACmY,EAAE,GAAG3M,IAAI,CAACC,MAAM,CAAC,CAAC,CAACzC,QAAQ,CAAC,EAAE,CAAC,CAACC,GNNvB,EAACa,AMM2B,CAAC,CAAC,CAAC,GNNxB,EAAE,QAAQ,EAAES,WAAW,CAAC;AOsDlD,AVvCA,EGdE,AMMA,EPkBE,ECxBFvK,AMMAA,uCNNiB,AMMA,ENNC8J,AMMA0Q,MNNM,CMMC,CNNC,CMMC,ONNO,CMMC,EAAE,ENNHxO,CMMM,CAAC,INNP,CAAK1B,mBAAmB,CAAC,EAAE,EAAE,EAAE,CAAC,MAAG,CAAC;AElDxE,AKwGA,AVvCA,EGbEX,AMKA,IAAM8Q,GC+CCoE,EPpDE,CAAC5S,MAAM,CAACnC,EMKI,GAAG4Q,CNLD,CAAC,AOoDAmE,CAAA,EAAG,YD/Cc,CAAC,CAAC;AJxD7C,AFoDA,AHaA,ESRErE,AC+CAiD,ELxGI5I,AH2EF/Q,KOlBK,CAAC5D,KAAK,CAACya,AC+CA,GAAG,CR7BC,EG3EI,CKwGD,CR7BCnX,CG3EA9B,KIyDM,EJzDN,CAAAmT,CH2EU,GOlBJ7I,MAAA,CAAOyO,OJzDb,QIyD4B,MAAG;ANHvD,AHYA,EKlEwB,AI0DtB9Q,APkBA,IG5EsBmL,GFsDfxK,EEtDe,AI0Db,CAAC2B,EJ1DY+F,II0DN,CAACwI,OAAO,CAAC,CNJClQ,CAAC4B,EEtDL,CFsDQ,EAAEC,GAAG,EAAE,OEtDfI,mBAAA,GAAA8D,IAAA,CAAG,SAAA0E,SAAOH,QAAQ,EAAED,KAAK;AI2DjD,ATQA,EGZE,ADsBA7Q,AQ6BA,EL1G+C,IAAA4O,CFuDxClH,IAAI,CAACY,EEvDmC,EAAAoH,AH6E/B,CCtBC,CAAChI,EDsBE1K,ECtBE,CAAC2K,EEvDwB,AH6EtB,GAAG1K,CCtBC,CAAC,CAAC,IAAIoL,GAAG,ADsBA,GCtBGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D,AMKA,APiBA,AFVA,EUuCEzG,EL3G+C,KI6DxC6E,EJ7DwCiC,CK2GrC,CAAC,YAAM,GD9CSjC,CAAC4B,CJ7DoB,EI6DjB,CJ7DiBmB,CI6DflB,GJ7De,AI6DZ,EAAE,QJ7DU6I,UAAAC,SAAA;AHgFjD,AFXA,ESPE,EC8CEwI,EL5G6C,GI8DxCjS,APkBA5G,IOlBI,CAACwH,IC8CI,CD9CC,APkBAxH,COlBC4G,APkBA1K,CQ4BC,GL5G4BmU,AI8DzB,CAACxJ,APkBA,CQ4BC,CR5BC,IOlBI,CAAC,CJ9DiB,AI8DhB,CJ9DgBqF,GI8DZ3E,CJ9DY,EI8DT,CJ9DS8I,EI8DN/I,GAAG,GAAG,CJ9DA,AI8DC,CJ9DD9D,AI8DE,GAAG8D,CJ9DL,EI8DQ,CAAC;AAC1D,ATOA,EEWE,AQ4BA,CAAC,EAAEwR,CR5BC,CAACha,CGjF0C,QHiFjC,EAAE,GQ4BG,CAAC;AD5CtB,AC6CA,AVvCA,EEWE,IAAAtD,GOjBOsa,CJjEwCzF,SAAA,CAAAnE,IAAA,EIiEvB4J,CAAA,EAAG,sBPiBJ,EAACzX,QAAQ,EAAE,UAAU,EAAEc,SAAS,GAAGjD,KAAK,CAAC;AQ8BlE,AVxCA,ESNE,APkBA,IAAI,GQ4BGge,CLhHwC7J,AHoF3CvV,SGpF2C,CAAA0I,GKgH1B0W,CLhH0B,AKgH1B,EAAG,CAAC,sBR5BJ,EAAC7b,QAAQ,EAAE,UAAU,CAAC,IAAIQ,aAAa,EAAE;AQ8BhE,AVzCA,ESNE,EPkBE,IAAAzD,COlBKwL,AC+CA0S,CLlHwC,GImEpC,CAAC9R,CC+CC8R,CAACa,CLhHWlM,EIiER,CAACrH,AC+CA,ELhHY,AKgHV,CLhHW,CIiET,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,OPkBnB,EAACxI,QAAQ,EAAE,GGnFwC,EAAE,KHmFhC,EAAEQ,aAAa,CAAC;AOjB1D,ATMA,EUyCE,ER7BEmC,EQ6BE4X,KR7BK,CGnFLxO,AHmFM,CAAC,CQ6BC,EAAE,ELhHJ,EAAE,MAAM;ALwEpB,IEYIrL,AQ6BA,QLhHEgQ,KHmFW,EGnFJ,CHmFO,CGnFL,GHmFS;AFXxB,IEYI/P,AQ6BA,SR7BS,CGnFL,EHmFQ,CAAC,WGnFK,EAAE;ALwExB,EEYE,AQ6BA,ULhHI,CAAC;ALwEP,EEaE,AQ6BA,IR7BIA,AQ6BAuZ,MLjHAjI,EKiHQ,CR7BC,CGpFL,EAAEC,AKiHM,ER7BE,CAAC,CGpFL,AKiHM,CLjHLC,CKiHO,CR7BCzR,OGpFC,CAAC,KHoFW,EAAE;AFZxC,IEaII,AQ6BAoZ,QAAQ,CR7BC,CGpFLvI,CKiHOmK,CR7BC3b,GQ6BG,GLjHH,EAAEwR,QAAQ,CHoFO;AFZjC,IEaIjR,AQ6BAuZ,MAAM,CAACe,GLjHHtJ,GHoFS,EGpFJ,CHoFO,CGpFLA,IHoFU,OQ6BO,CAACuJ,MAAM,CAAC;AVzCxC,EEaE,EQ6BE,QLjHE,CAAC;ALwEP,EEcEna,AQ4BA,QLjHE,CAAC,AHqFM,CGrFL,GHqFSV,OAAO,GAAGvC,KAAK;AAC9B,AFdA,QKxEM;AHwFN,AFfA,EU0CE,OR3BOyD,CGjGCmO,KHiGKnO,CAAC4B,CAAC,CGjGC,CHiGC,EGjGD8O,SAAA,CAAA9F,IAAA;ALmFlB,EEeE,AQ2BA,IR1BGhJ,AQ0BCrF,CR1BA,CAACsF,EGnGW,CK6HP,CR1BA,EGxFFsM,AKkHK,CAAC,ER1BC,KGxFC,CAACI,CHwFK,CGxFH,GHwFO3M,CAAC,CAACE,IAAI,KAAK,YAAY,IAC7C3C,SAAS,IAAIE,SAAS,IAAI,CAAE,EAE7B;AFlBJ,EEmBEgC,AQuBA,IAAIwX,GRvBG,CAAC,CAAC,CG5FSnI,SAAA,CAAA7M,CKmHG,EAAE,CLnHL;AL0EpB,EEmBE7C,EQuBEsZ,ORvBO,CG7FS,AH6FR,CAAC,QQuBQ,CAAC,CAAC;AVzCvB,EEmBEpd,EQuBEqc,MLrHgB,KKqHL,CAAC,CAAC,iBRvBA,CAAC/b,IAAI,CAACuE,IAAI,CAAC,CAAC;AFlB7B,EEmBEvC,EQuBE0B,MLtHgBwP,CH+FT,GAAG9R,AQuBA,CAAC,ILtHK,CAAAiF,IAAA,AH+FI,GQuBH;AVzCrB,EEmBE1E,IQuBI0Z,ILvHc,CHgGT,GAAG,GG9FgB1K,CH8FZ,KQuBK,ELrHe,CAACM,AKqHb,ILrHiB,CAAC,AKqHb,CLrHc,AKqHb,CAAC;AVzCjC,EEmBEpP,IQuBIka,ELtHuC,GH+FlC,EAAE,IQuBI,CAAC,CAAC;ARtBnB,AFnBA,IU0CI,CAAC,EAAE,GLvHKtK,AKuHF,CAAC,QLvHU,GAAAyB,SAAA,CAAA9F,IAAA;AHkGrB,AFpBA,IEoBM5I,AQsBF,MLxHiB,CKwHV,CAAC,ERtBI,EGjGNiN,CHiGS,GAAG,CAAC,CAAC,GGjGL,CAACnN,IAAI,KAAKuN,kBAAU,CAACyB,uBAAuB;AHkG/D,AFpBA,EU0CE,ERtBE7O,QGlG2DyO,AHkGnD,GAAG,KAAK,CGlG2C,CAAA7M,IAAA;AHoG/D,AFrBA,SEqBSvD,GGpGsD,OHoG5CA,CAAC/D,KAAK,EAAE;AFpB3B,EEqBE,AQqBA,IRrBI,AQqBJD,CRrBK2F,GGrGwD,KHqGhD,EAAE,SQqBH,EAAC1F,KAAK,EAAEC,UAAU,CAAC;AVzCjC,EEqBE,AQqBA,IRrBAX,AQqBAmB,IL3H6D,OAAA0T,SAAA,CAAA3F,MAAA,WAChDsE,EK0HS,EAAC9S,GRrBA,EAACmC,AQqBI,EAAElC,MRrBE,CGrGT,CAACsU,AHqGU,EQqBM,CAAC,ORrBG,EAAEtR,SAAS,EGrGR,CHqGWjD,KAAK,CAAC;AFpBlE,EEsBE,AQoBA,IRpBI,AQoBJM,EL3H+C,EHuG3C1B,gCQoBgB,EAACoB,KRpBA,AQoBK,ERpBJmC,AQoBMlC,QRpBE,EAAE,AQoBM,CAAC,SRpBG,CAAC,IAAI0C,aAAa,EAAE;AFrBhE,EU0CE,ERpBE,EQoBFiB,ERpBE1E,EGtGI8T,KAAK,CAAC,MK0HF,EAAChT,KAAK,EAAEC,UAAU,CAAC,GL1HY,CAAC,CHsGvB,EAACkC,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;AFrB1D,EU0CE,ERpBE+C,EQoBFkE,EL3H2C,IHuGjC,GAAG,KAAK,MQoBN,EAAC5J,KAAK,EAAEC,UAAU,CAAC;AVzCjC,EU0CEie,ERpBEpb,MGxGyCqR,GHwGhC,GAAG,CAAC,CQoBC,CL5H2B,AK4H1BnU,CL5H0BsH,IAAA,AK4HrB,CAAC;AVzCzB,EEsBE,AQoBA6W,QL7H2C,GK6HhC,CAACne,KAAK,CAAC;AVzCpB,EEsBEiD,AQoBA,IAAAiU,EL9H2C,GH0GlC,IAAI3U,OAAO,GAAGvC,KAAK,SQoBZ,EAACA,KAAK,EAAEC,UAAU,CAAC;ARnBrC,AFtBA,EU0CE,IAAAqY,IL/H2CnE,SAAA,CAAA7M,EK+HjC,EL/HiC,AK+HhCtH,KAAK,EAAEC,UAAU,CAAC;ARlB/B,AFvBA,EU0CE,IAAIme,GRnBGza,CG7GoC,KH6G9BA,AQmBA,CRnBC0B,AQmBA,CL7HJ6N,AH0GK,AQmBA,ERnBE,AQmBA,OAAOmL,UAAU,CAAC,CAAC,OL7HE,CAAC,CAAC;ALoF1C,EEuBE,AQmBA,IRnBKhZ,AQmBDiZ,CRnBE,CG3GkC,AH2GjChZ,IAAI,KAAK,WAAW,EQmBC,CAAC,CRnBED,AQmBD,CRnBE,CAACE,AQmBF,IRnBM,KAAK,YAAY,IAAKG,QAAQ,EAAE;AFtBvE,EEwBEzC,AQkBA,IAAIsb,IL/HoCpK,CH6G/B,GAAG,CAAC1O,IG7G2B,CAAA6B,IAAA,AK+HlB,CRlBC,AQkBA,CRlBC,AQkBA,CRlBC,CQkBA;AVzC3B,EEwBE5B,AQkBA2W,QLhIwC,AH8GhC,AQkBA,GRlBG,AQkBA4B,IRlBI,AQkBA;AVzCjB,EU0CE7B,MLjIwC,AKiIlC,CAACe,qBAAqB,CAACC,MAAM,CAAC;AACtC,AV1CA,EEwBE,QGhHwCjJ,SAAA,CAAAnE,IAAA;AKoI1C,AV3CA,SU2CSwO,CLpIiCrK,SAAA,CAAAhC,EAAA,EKoIlBqM,CLpIkBrK,AKoIlB,EAAG,OLpIe;AL0F1C,EEwBE,AQmBAxT,QLlIE,wBKkIa,CAACO,SAAS,CAACsE,IAAI,CAAC,CAAC;AV1ClC,EEwBE5C,AQoBA,IAAM6b,ILnIJrM,CH+GO,GAAG,EQoBI,CLnIP,CAACC,CH+GO,AQoBEzS,ELnIN,CAAC,KKmIa,CAACoL,aAAa,CAAC,KAAK,CLnIP,AKmIQ,ELnIRmJ,SAAA,CAAAhC,EAAO,CAAC;ALwFlD,EEwBErP,AQoBA2b,MLpIiD,GHgHxC,CQoBC,CAACra,CRpBC,CAAC,OQoBO,CAACC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;ARnB5C,AFxBA,EU4CEoa,MLrIiD,IKqIvC,CAACrf,KAAK,CAAC8J,QAAQ,GAAG,UAAU;AV3CxC,EU4CEuV,QLtIiD,EKsIvC,CAACrf,ILtIsC+U,CKsIjC,CAACuK,IAAI,GLtI4B,AKsIzB7C,CLtIyB3L,IAAA,IKsIhB,CAACyO,UAAU,GAAG,IAAI;AV3CrD,EU4CEF,ILvIiD,MKuIvC,CAACrf,KAAK,CAACwf,GAAG,GAAG,KAAK;AV3C9B,EU4CE/C,ELxIiD,GAAA5H,IKwIxC,CAAC4K,GLxIuC,OKwI7B,CAACC,YAAY,CAACL,UAAU,EAAE5C,SAAS,CAAC;AV3C1D,EK7FmD,AKyIjD4C,CLvID,SKuIW,CAAC9I,WAAW,GAAG,KAAK;AV3ChC,EK5FC,AKwIChR,UAAU,CAAC,KLpKPoP,OKoKa,WLpKKA,CAAAS,GAAA,EAAAC,GAAA;ALyHxB,IKzHwB,AKqKpBgK,OLrKoBzK,GKqKV,CAAC1P,CLrKS,CAAAiN,IKqKH,CLrKG,AKqKF,CAAC,MLrKCD,SAAA;AL0HxB,EK1HwB,AKsKtB,CAAC,EAAE,GAAG,CAAC;ALtKe,AL2HxB,EU4CE,CL3ID,MK2IQ,IAAI;ALzIb,AK0IA,AV5CA,IK9FMoD,mBAAmB,GAAA9T,OAAA,CAAA8T,mBAAA;AK4IzB,AV7CA,EK/FyB,EK4IrBqK,EL5IqBpK,KAAA,GAAAzD,KK4IN,GAAG,CAAC,QL5IE,eAAAzF,mBAAA,GAAA8D,IAAA,CAAG,SAAAqF,SAAOf,KAAK;AK6IxC,AV7CA,IKhGwC,AK6IpCmL,OL7IoCvT,MK6IvB,aL7IuB,GAAAc,IAAA,UAAAsI,UAAAC,SAAA;AK+IxC,AV9CA,MKjGwC,GK+I/BmK,eL/I+BnK,KK+IXmK,CAAA,EAAG,CL/IQ,CAAAjP,IAAA,GAAA8E,SAAA,CAAAxN,IAAA;ALkGxC,EU8CE,MLhJsC;ALmGxC,EU8CE4X,MLjJsC,OKiJzB,CAACF,aAAa,CAAC;AV7C9B,EU8CED,QLlJsC,OAAAjK,AKkJvB,GAAG,CAAC,KLlJmB,CAAA5E,IAAA;ALqGxC,EU8CEuL,ILnJsC,eKmJnB,CAAC9F,WAAW,GAAGoJ,eAAe;AV7CnD,IKtGwC,GAAAnK,QAAA;ALuGxC,EKvGwC,AKqJtC,CLrJ6C;ALwG/C,EKxG+C,AKsJ7CoK,aAAa,GLtJTtK,AKsJYyK,WAAW,CAAC,OLtJLzK,CAAAK,GAAA,CKsJW;AV7CpC,IKzGyB,AKuJrBgK,OLvJqBpK,KAAA,CAAApD,EKuJN,EAAE,CLvJI,OAAAD,SAAA;AL0GzB,EK1GyB,EKwJrB,IAAIyN,eAAe,KAAK,CAAC,EAAE;ALxJN,AL2GzB,GK3G+C,GKyJzCG,aAAa,CAACF,aAAa,CAAC;AV7ClC,MU8CMvD,mBAAmB,CAAC9F,WAAW,GAAG,EAAE;AV7C1C,MU8CM;AV7CN,MU8CMoJ,eAAe,GAAG,CAAC;AV7CzB,MU8CMhE,eAAe,GAAG,CAAC;AV7CzB,MU8CMgB,qBAAqB,CAACpG,WAAW,GAAG,CAAC;AV7C3C,IU8CI,CAAC,MAAM;AV7CX,MU8CM8F,mBAAmB,CAAC9F,WAAW,GAAGoJ,eAAe;AV7CvD,IU8CI;AV7CJ,EU8CE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACZ,AV9CA;AACA;AU+CA,AV9CA,SU8CST,wBAAwBA,CAAA,EAAG;AV7CpC,EU8CE,IAAM/F,QAAQ,GAAG,IAAAvU,iBAAW,EAAC,CAAC;AV7ChC,EU8CE,IAAAoT,mCAAkB,EAAC,CAAC,CAACgI,IAAI,CAAC,UAAC1F,OAAO,EAAK;AV7CzC,IU8CI,IAAI2F,WAAW,CAAC3F,OAAO,CAACpC,IAAI,EAAEiB,QAAQ,CAAC,EAAE;AV7C7C,MU8CM5X,gCAAe,CAACO,SAAS,CAACsE,IAAI,CAAC,CAAC;AV7CtC,MU8CM5F,QAAQ,CAAC4E,cAAc,CAACkV,OAAO,CAACrC,EAAE,CAAC,CAAC/S,MAAM,CAAC,CAAC;AV7ClD,MU8CM4a,aAAa,CAACF,aAAa,CAAC;AV7ClC,MU8CMC,oBAAoB,CAAC,CAAC;AV7C5B,MU8CM;AV7CN,MU8CMlE,eAAe,IAAInH,QAAQ,CAAC8F,OAAO,CAACzC,UAAU,CAAC;AV7CrD,MU8CM8E,qBAAqB,CAACpG,WAAW,GAAGoF,eAAe;AV7CzD,MU8CM,OAAO,IAAI;AV7CjB,IU8CI;AV7CJ,EU8CE,CAAC,CAAC;AACJ,AV9CA;AUgDA,AV/CA,IU+CMuE,QAAQ,GAAG,IAAI;AACrB,AV/CA,IU+CMC,cAAc,GAAG,EAAE;AAEzB,AVhDA,SUgDSC,SAASA,CAAC9F,OAAO,EAAE;AV/C5B,EUgDE;AV/CF,EUgDE,IAAM+F,UAAU,GAAG/U,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;AV/C/C,EUgDE/K,QAAQ,CAAC8f,eAAe,CAACtgB,KAAK,CAACC,WAAW,CACxC,gBAAgB,EAChBogB,UAAU,GAAG,IACf,CAAC;AACH,AVnDA;AUqDA,AVpDA,SUoDSE,iBAAiBA,CAACnG,MAAM,EAAE;AVnDnC,EUoDE,OAAO9O,IAAI,CAACU,GAAG,CAAC,EAAE,GAAGoO,MAAM,GAAG,IAAI,EAAE,EAAE,CAAC;AACzC,AVpDA;AUsDA,AVrDA,SUqDS+E,kBAAkBA,CAAA,EAAG;AVpD9B,EUqDE,IAAMhG,QAAQ,GAAG,IAAAvU,iBAAW,EAAC,CAAC;AVpDhC,EUsDE,IAAAsV,kBAAY,EAAC,CAAC,CAAC8F,IAAI,CAAC,UAAC1F,OAAO,EAAK;AVrDnC,IUsDI,IAAI2F,WAAW,CAAC3F,OAAO,CAACpC,IAAI,EAAEiB,QAAQ,CAAC,EAAE;AVrD7C,MUsDM,IAAMqH,WAAW,GAAGhgB,QAAQ,CAAC4E,cAAc,CAACkV,OAAO,CAACrC,EAAE,CAAC;AVrD7D,MUsDM;AVrDN,MUsDMjF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AVrD9B,MUsDM,IAAMoM,UAAU,GAAG7e,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AVrDtD,MUsDM6U,aAAa,CAACpB,UAAU,EAAEmB,WAAW,CAAC;AVrD5C,MUsDMA,WAAW,CAACtb,MAAM,CAAC,CAAC;AVrD1B,MUsDMK,UAAU,CAAC,YAAM;AVrDvB,QUsDQ8Z,UAAU,CAACna,MAAM,CAAC,CAAC;AVrD3B,MUsDM,CAAC,EAAE,GAAG,CAAC;AVrDb;AACA,MUsDM;AVrDN,MUsDM3D,gCAAe,CAACQ,UAAU,CAACqE,IAAI,CAAC,CAAC;AVrDvC,MUsDM,OAAO,IAAI;AVrDjB,IUsDI;AVrDJ,EUsDE,CAAC,CAAC;AACJ,AVtDA;AUwDA,AVvDA,SUuDSqa,aAAaA,CAACC,IAAI,EAAEC,aAAa,EAAE;AVtD5C,EUsD4C,IAAAC,qBAAA;AVrD5C,EUsDEF,IAAI,CAAC1b,SAAS,CAACC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;AVrD3C,EUsDEyb,IAAI,CAAC1gB,KAAK,CAAC8J,QAAQ,GAAG,UAAU;AVrDlC,EUsDE4W,IAAI,CAAC1gB,KAAK,CAACsf,IAAI,GAAGqB,aAAa,CAACpB,UAAU,GAAG,IAAI;AVrDnD,EUsDEmB,IAAI,CAAC1gB,KAAK,CAACwf,GAAG,GAAGmB,aAAa,CAACE,SAAS,GAAG,EAAE,GAAG,IAAI;AVrDtD,EUsDET,SAAS,CAACM,IAAI,CAAC;AVrDjB,EUsDEC,aAAa,CAAClB,UAAU,CAACC,YAAY,CAACgB,IAAI,EAAEC,aAAa,CAAC;AVrD5D,EUsDE,IAAMvG,MAAM,GAAG,CAAAuG,aAAa,aAAbA,aAAa,gBAAAC,qBAAA,GAAbD,aAAa,CAAE9U,OAAO,cAAA+U,qBAAA,uBAAtBA,qBAAA,CAAwBxG,MAAM,IAAGuB,eAAe;AVrDjE,EUsDEmF,qBAAqB,CAAC1G,MAAM,CAAC;AVrD/B,EUsDE,IAAM2G,QAAQ,GAAGR,iBAAiB,CAACnG,MAAM,CAAC;AVrD5C,EUsDEsG,IAAI,CAAC1gB,KAAK,CAAC+gB,QAAQ,GAAGA,QAAQ,GAAG,IAAI;AVrDvC,EUsDEL,IAAI,CAACnK,WAAW,OAAAzK,MAAA,CAAOsO,MAAM,CAAE;AACjC,AVtDA;AUwDA,AVvDA,SUuDS0G,qBAAqBA,CAAClgB,KAAK,EAAE;AVtDtC,EUuDE,IAAMogB,YAAY,GAAGvM,KAAK;AVtD5B,EUuDE,IAAMwM,UAAU,GAAG3V,IAAI,CAAC4V,IAAI,CAAChB,QAAQ,GAAGC,cAAc,CAAC;AVtDzD,EUuDE,IAAMgB,eAAe,GAAGvgB,KAAK,GAAGqgB,UAAU;AVtD5C,EUwDE,IAAMG,UAAU,GAAGrB,WAAW,CAAC,YAAM;AVvDvC,IUwDItL,KAAK,IAAI0M,eAAe;AVvD5B,IUwDIvF,SAAS,CAACrF,WAAW,GAAGjL,IAAI,CAACY,KAAK,CAACuI,KAAK,CAAC,CAAC3L,QAAQ,CAAC,CAAC,CAACsU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AVvDvE,IUyDI,IAAI3I,KAAK,IAAIuM,YAAY,GAAGpgB,KAAK,EAAE;AVxDvC,MUyDM;AVxDN,MUyDMkf,aAAa,CAACsB,UAAU,CAAC;AVxD/B,IUyDI;AVxDJ,EUyDE,CAAC,EAAEjB,cAAc,CAAC;AACpB,AVzDA;AU2DA,AV1DA,SU0DSnB,SAASA,CAAA,EAAG;AVzDrB,EU0DE;AVzDF,EU0DE,IAAM7F,QAAQ,GAAG,IAAAvU,iBAAW,EAAC,CAAC;AVzDhC;AACA,EU0DE;AVzDF,EU0DE,IAAMyc,yBAAyB,GAAG,IAAA5W,sBAAc,EAAC,CAAC,CAACuV,IAAI,CAAC,UAAC9H,IAAI;AVzD/D,IUyD+D,OAC3D+H,WAAW,CAAC/H,IAAI,EAAEiB,QAAQ,CAAC;AVzD/B,EUyD+B,CAC7B,CAAC;AVzDH;AACA,EU0DE;AVzDF,EU0DE,IAAIsD,SAAS,CAAClG,WAAW,KAAK,GAAG,EAAE;AVzDrC,IU0DI9M,SAAS,CAACiU,YAAY,CAAC,kBAAkB,EAAE,qBAAqB,CAAC;AVzDrE,IU0DI,OAAO,IAAI;AVzDf,EU0DE,CAAC,CAAC;AVzDJ,EUyDI,KACG,IAAI2D,yBAAyB,IAAI,CAAC9D,cAAc,EAAE;AVzDzD,IU0DI;AVzDJ,IU0DI,IAAI,CAACL,iBAAiB,EAAE;AVzD5B,MU0DM;AVzDN,MU0DM3b,gCAAe,CAACS,UAAU,CAACoE,IAAI,CAAC,CAAC;AVzDvC,MU0DM,IAAIkb,YAAY,GAAG9M,QAAQ,CAACiI,SAAS,CAAClG,WAAW,EAAE,EAAE,CAAC;AVzD5D,MU0DM,IAAI,CAACvG,KAAK,CAACsR,YAAY,CAAC,EAAE;AVzDhC,QU0DQA,YAAY,IAAI,CAAC;AVzDzB,QU0DQ7E,SAAS,CAAClG,WAAW,GAAG+K,YAAY;AVzD5C,MU0DM;AVzDN,MU0DM;AVzDN,MU0DMpE,iBAAiB,GAAG,IAAI;AVzD9B,MU0DM;AVzDN,MU0DMna,QAAQ,CAACiC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;AVzD/C,MU0DM;AVzDN,MU0DMwE,SAAS,CAACzE,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;AVzD5C,MU0DM;AVzDN;AACA,MU0DM;AVzDN,MU0DMM,UAAU,CAAC,YAAM;AVzDvB,QU0DQ2X,iBAAiB,GAAG,KAAK;AVzDjC,QU0DQna,QAAQ,CAACiC,SAAS,CAACE,MAAM,CAAC,iBAAiB,CAAC;AVzDpD,QU0DQnC,QAAQ,CAACiC,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;AVzDvD,MU0DM,CAAC,EAAE,GAAG,CAAC;AVzDb,MU0DMM,UAAU,CAAC,YAAM;AVzDvB,QU0DQ2X,iBAAiB,GAAG,KAAK;AVzDjC,QU0DQna,QAAQ,CAACiC,SAAS,CAACE,MAAM,CAAC,uBAAuB,CAAC;AVzD1D,MU0DM,CAAC,EAAE,IAAI,CAAC;AVzDd,IU0DI;AVzDJ,EU0DE;AACF,AV1DA;AU4DA,AV3DA,IU2DMqc,UAAU,GAAG/gB,QAAQ,CAAC4E,cAAc,CAAC,YAAY,CAAC;AACxD,AV3DA,IU2DIoc,oBAAoB,GAAG,KAAK;AAChC,AV3DA,IU2DMC,cAAc,GAAGjhB,QAAQ,CAAC4E,cAAc,CAAC,kBAAkB,CAAC;AAClE,AV3DA;AU4DAmc,AV3DA,UU2DU,CAACjd,gBAAgB,CAAC,OAAO,EAAE,YAAY;AV1DjD,EU2DE,IAAI,CAACkd,oBAAoB,EAAE;AV1D7B,IU2DI5Y,MAAM,CAAC6H,IAAI,CAAClP,gCAAe,CAAC,CAACT,OAAO,CAAC,UAAU6Q,GAAG,EAAE;AV1DxD,MU2DMpQ,gCAAe,CAACoQ,GAAG,CAAC,CAAC+P,IAAI,CAAC,IAAI,CAAC;AV1DrC,IU2DI,CAAC,CAAC;AV1DN,IU2DID,cAAc,CAAC9f,GAAG,GAAGggB,mBAAO;AV1DhC,IU2DIH,oBAAoB,GAAG,IAAI;AV1D/B,IU2DID,UAAU,CAAC7C,IAAI,CAAC,CAAC;AV1DrB,EU2DE,CAAC,MAAM;AV1DT,IU2DI9V,MAAM,CAAC6H,IAAI,CAAClP,gCAAe,CAAC,CAACT,OAAO,CAAC,UAAU6Q,GAAG,EAAE;AV1DxD,MU2DMpQ,gCAAe,CAACoQ,GAAG,CAAC,CAAC+P,IAAI,CAAC,KAAK,CAAC;AV1DtC,IU2DI,CAAC,CAAC;AV1DN,IU2DID,cAAc,CAAC9f,GAAG,GAAGigB,kBAAS;AV1DlC,IU2DIJ,oBAAoB,GAAG,KAAK;AV1DhC,IU2DID,UAAU,CAAC7C,IAAI,CAAC,CAAC;AV1DrB,EU2DE;AACF,AV3DA,CU2DC,CAAC;AAEF,AV5DA,SU4DSuB,WAAWA,CAAC4B,KAAK,EAAEC,KAAK,EAAE;AV3DnC,EU4DE,OACED,KAAK,CAACvC,IAAI,GAAGwC,KAAK,CAACC,KAAK,IACxBF,KAAK,CAACrC,GAAG,GAAGsC,KAAK,CAACE,MAAM,IACxBH,KAAK,CAACE,KAAK,GAAGD,KAAK,CAACxC,IAAI,IACxBuC,KAAK,CAACG,MAAM,GAAGF,KAAK,CAACtC,GAAG;AAE5B,AVjEA;AUmEA,AVlEA,SUkESV,gBAAgBA,CAACle,KAAK,EAAE;AVjEjC,EUkEEC,UAAU,IAAID,KAAK,GAAG8a,oBAAoB;AAC5C,AVlEA;AUoEA,AVnEA,SUmESuG,sBAAsBA,CAACC,gBAAgB,EAAE;AVlElD,EUmEE;AVlEF,EUmEE,IAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;AVlE1B,EUmEE,OAAO7W,IAAI,CAACY,KAAK,CAACgW,gBAAgB,GAAGC,UAAU,CAAC;AAClD,AVnEA;AUqEA,AVpEA,SUoESpD,WAAWA,CAACne,KAAK,EAAE;AVnE5B,EUoEE6T,KAAK,IAAI7T,KAAK,GAAG,IAAI;AVnEvB,EUoEEgb,SAAS,CAACrF,WAAW,GAAGjL,IAAI,CAACY,KAAK,CAACuI,KAAK,CAAC,CAAC3L,QAAQ,CAAC,CAAC,CAACsU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AVnErE,EUqEE,IACE3I,KAAK,GAAGoH,aAAa,CAACtF,WAAW,IACjC,CAAC8G,cAAc,IACfxB,aAAa,CAACtF,WAAW,KAAK,QAAQ,EACtC;AVxEJ,IUyEIhV,gCAAe,CAACO,SAAS,CAACsE,IAAI,CAAC,CAAC;AVxEpC,IUyEIiX,cAAc,GAAG,IAAI;AVxEzB,EUyEE;AVxEF,EUyEE,IAAI5I,KAAK,GAAG0I,SAAS,EAAE;AVxEzB,IUyEIiC,eAAe,CAAC,CAAC;AVxErB,IUyEI,IAAIkC,YAAY,GAAG9M,QAAQ,CAACiI,SAAS,CAAClG,WAAW,EAAE,EAAE,CAAC;AVxE1D,IUyEI+K,YAAY,IAAI,CAAC;AVxErB,IUyEI7E,SAAS,CAAClG,WAAW,GAAG+K,YAAY;AVxExC,IUyEInE,SAAS,GAAG8E,sBAAsB,CAAC9E,SAAS,CAAC;AVxEjD,IUyEInK,OAAO,CAACC,GAAG,CAACkK,SAAS,CAAC;AVxE1B,EUyEE;AACF,AVzEA;AU2EA,AV1EA,SU0ESiF,sBAAsBA,CAAC3N,KAAK,EAAE;AVzEvC,EU0EE,IAAIA,KAAK,GAAGoH,aAAa,CAACtF,WAAW,EAAE;AVzEzC,IU0EIsF,aAAa,CAACtF,WAAW,GAAGjL,IAAI,CAACY,KAAK,CAACuI,KAAK,CAAC,CAAC3L,QAAQ,CAAC,CAAC,CAACsU,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AVzE3E,IU0EIjH,YAAY,CAACkM,OAAO,CAAC,iBAAiB,EAAExG,aAAa,CAACtF,WAAW,CAAC;AVzEtE,IU0EI+L,+BAA+B,CAACzG,aAAa,CAACtF,WAAW,CAAC;AVzE9D,EU0EE;AACF,AV1EA;AU4EA,AV3EA,SU2ESgM,aAAaA,CAAA,EAAG;AV1EzB,EU2EE,IAAA7hB,mBAAW,EAAC,CAAC;AV1Ef,EU2EE,IAAAO,mCAAmB,EAAC,CAAC;AV1EvB,EU2EE,IAAAG,uCAAqB,EAAC,CAAC;AV1EzB,EU2EE,IAAA+C,eAAS,EAAC,CAAC;AV1Eb,EU2EE,IAAAwF,mBAAW,EAAC,CAAC;AV1Ef,EU2EE,IAAAiO,gCAAe,EAAC,CAAC;AV1EnB,EU2EE,IAAAoB,eAAS,EAAC,CAAC;AACb,AV3EA;AU6EA,AV5EA,SU4ESwJ,WAAWA,CAAA,EAAG;AV3EvB,EU4EE/Y,SAAS,CAACiU,YAAY,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;AV3EhE,EU4EET,QAAQ,GAAG,IAAI;AV3EjB,EU4EEI,cAAc,GAAG,KAAK;AV3ExB,EU4EExc,UAAU,GAAG,GAAG;AV3ElB,EU4EE4T,KAAK,GAAG,CAAC;AV3EX,EU4EEkH,eAAe,GAAG,CAAC;AV3ErB,EU4EE4G,aAAa,CAAC,CAAC;AV3EjB,EU4EExf,QAAQ,CAACiC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;AV3EnC,EU4EEyX,qBAAqB,CAACpG,WAAW,GAAGoF,eAAe;AV3ErD,EU4EEc,SAAS,CAAClG,WAAW,GAAG,CAAC;AV3E3B,EU4EEuF,eAAe,CAAC9W,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;AV3EvC,EU4EE8W,aAAa,CAAC/W,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;AV3ErC,EU4EE;AV3EF,EU4EE,IAAMwd,UAAU,GAAG,CACjB;AV5EJ,IU6EM/N,QAAQ,EAAE,MAAM;AV5EtB,IU6EMD,KAAK,EAAE;AV5Eb,EU6EI,CAAC,EACD;AV7EJ,IU6EMC,QAAQ,EAAE,MAAM;AV5EtB,IU4EwBD,KAAK,EAAE;AV3E/B,EU2EwC,CAAC,EACrC;AV3EJ,IU2EMC,QAAQ,EAAE,MAAM;AV1EtB,IU0EwBD,KAAK,EAAE;AVzE/B,EUyEwC,CAAC,EACrC;AVzEJ,IUyEMC,QAAQ,EAAE,MAAM;AVxEtB,IUwEwBD,KAAK,EAAE;AVvE/B,EUuEwC,CAAC,EACrC;AVvEJ,IUwEMC,QAAQ,EAAE,MAAM;AVvEtB,IUwEMD,KAAK,EAAE;AVvEb,EUwEI,CAAC,EACD;AVxEJ,IUwEMC,QAAQ,EAAE,MAAM;AVvEtB,IUuEwBD,KAAK,EAAE;AVtE/B,EUsEwC,CAAC,EACrC;AVtEJ,IUsEMC,QAAQ,EAAE,KAAK;AVrErB,IUqEuBD,KAAK,EAAE;AVpE9B,EUoEuC,CAAC,EACpC;AVpEJ,IUqEMC,QAAQ,EAAE,MAAM;AVpEtB,IUqEMD,KAAK,EAAE;AVpEb,EUqEI,CAAC,EACD;AVrEJ,IUqEMC,QAAQ,EAAE,MAAM;AVpEtB,IUoEwBD,KAAK,EAAE;AVnE/B,EUmEwC,CAAC,EACrC;AVnEJ,IUmEMC,QAAQ,EAAE,MAAM;AVlEtB,IUkEwBD,KAAK,EAAE;AVjE/B,EUiEwC,CAAC,EACrC;AVjEJ,IUiEMC,QAAQ,EAAE,OAAO;AVhEvB,IUgEyBD,KAAK,EAAE;AV/DhC,EU+DyC,CAAC,EACtC;AV/DJ,IUgEMC,QAAQ,EAAE,OAAO;AV/DvB,IUgEMD,KAAK,EAAE;AV/Db,EUgEI,CAAC,EACD;AVhEJ,IUgEMC,QAAQ,EAAE,OAAO;AV/DvB,IU+DyBD,KAAK,EAAE;AV9DhC,EU8DyC,CAAC,EACtC;AV9DJ,IU8DMC,QAAQ,EAAE,OAAO;AV7DvB,IU6DyBD,KAAK,EAAE;AV5DhC,EU4DsC,CAAC,CACpC;AV5DH,EU6DEgO,UAAU,CAAC3hB,OAAO,CAAC,UAAC6V,IAAI,EAAEC,KAAK,EAAK;AV5DtC,IU6DI,IAAM8L,UAAU,GAAGliB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DpD,IU6DI8W,UAAU,CAAC1d,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AV5D5C,IU6DIyd,UAAU,CAACC,SAAS,MAAA7W,MAAA,CAAM6K,IAAI,CAACjC,QAAQ,SAAA5I,MAAA,CAAM6K,IAAI,CAAClC,KAAK,CAAE;AV5D7D,IU6DI,IAAMmO,aAAa,GAAGpiB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DvD,IU6DIgX,aAAa,CAAC5d,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;AV5DjD,IU6DIqX,UAAU,CAACtF,WAAW,CAAC0L,UAAU,CAAC;AV5DtC,IU6DI;AV5DJ,IU6DI,IAAI9L,KAAK,GAAG6L,UAAU,CAACrb,MAAM,GAAG,CAAC,EAAE;AV5DvC,MU6DMkV,UAAU,CAACtF,WAAW,CAAC4L,aAAa,CAAC;AV5D3C,IU6DI;AV5DJ,EU6DE,CAAC,CAAC;AV5DJ,EU6DEH,UAAU,CAAC3hB,OAAO,CAAC,UAAC6V,IAAI,EAAEC,KAAK,EAAK;AV5DtC,IU6DI,IAAM8L,UAAU,GAAGliB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DpD,IU6DI8W,UAAU,CAAC1d,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AV5D5C,IU6DIyd,UAAU,CAACC,SAAS,MAAA7W,MAAA,CAAM6K,IAAI,CAACjC,QAAQ,SAAA5I,MAAA,CAAM6K,IAAI,CAAClC,KAAK,CAAE;AV5D7D,IU6DI,IAAMmO,aAAa,GAAGpiB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DvD,IU6DIgX,aAAa,CAAC5d,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;AV5DjD,IU6DIsX,WAAW,CAACvF,WAAW,CAAC0L,UAAU,CAAC;AV5DvC,IU6DI;AV5DJ,IU6DI,IAAI9L,KAAK,GAAG6L,UAAU,CAACrb,MAAM,GAAG,CAAC,EAAE;AV5DvC,MU6DMmV,WAAW,CAACvF,WAAW,CAAC4L,aAAa,CAAC;AV5D5C,IU6DI;AV5DJ,EU6DE,CAAC,CAAC;AV5DJ,EU6DEH,UAAU,CAAC3hB,OAAO,CAAC,UAAC6V,IAAI,EAAEC,KAAK,EAAK;AV5DtC,IU6DI,IAAM8L,UAAU,GAAGliB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DpD,IU6DI8W,UAAU,CAAC1d,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AV5D5C,IU6DIyd,UAAU,CAACC,SAAS,MAAA7W,MAAA,CAAM6K,IAAI,CAACjC,QAAQ,SAAA5I,MAAA,CAAM6K,IAAI,CAAClC,KAAK,CAAE;AV5D7D,IU6DI,IAAMmO,aAAa,GAAGpiB,QAAQ,CAACoL,aAAa,CAAC,KAAK,CAAC;AV5DvD,IU6DIgX,aAAa,CAAC5d,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;AV5DjD,IU6DIuX,WAAW,CAACxF,WAAW,CAAC0L,UAAU,CAAC;AV5DvC,IU6DI;AV5DJ,IU6DI,IAAI9L,KAAK,GAAG6L,UAAU,CAACrb,MAAM,GAAG,CAAC,EAAE;AV5DvC,MU6DMoV,WAAW,CAACxF,WAAW,CAAC4L,aAAa,CAAC;AV5D5C,IU6DI;AV5DJ,EU6DE,CAAC,CAAC;AV5DJ,EU6DE;AV5DF,EU6DE;AV5DF;AACA,EU6DE5F,MAAM,CAACe,qBAAqB,CAACC,MAAM,CAAC;AACtC,AV7DA;AU+DA,AV9DA,SU8DSsE,+BAA+BA,CAAC7N,KAAK,EAAE;AV7DhD,EU8DE,IAAMJ,KAAK,GAAG,IAAAhC,0BAAoB,EAAC,CAAC,CAAC1D,IAAI,CAAC,UAACwF,IAAI,EAAK;AV7DtD,IU8DI,IAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,UAAC5H,CAAC,EAAE6H,CAAC,EAAK;AV7DjD,MU8DM,OAAOC,QAAQ,CAACD,CAAC,CAACE,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAAC9H,CAAC,CAAC+H,KAAK,EAAE,EAAE,CAAC;AV7D1D,IU8DI,CAAC,CAAC;AV7DN,EU8DE,CAAC,CAAC;AACJ,AV9DA;AUgEA6N,AV/DA,+BU+D+B,CAAC,OAAO,CAAC;AAAC,AV9DzC,SUgEeO,oBAAoBA,CAAA;AV/DnC,EU+DmC,OAAAC,qBAAA,CAAA3Q,KAAA,OAAAD,SAAA;AAAA,AV9DnC;AU8DmC,AV7DnC,SU6DmC4Q,sBAAA;AV5DnC,EU4DmCA,qBAAA,GAAAhR,iBAAA,eAAAzF,mBAAA,GAAA8D,IAAA,CAAnC,SAAAoC,QAAA;AV3DA,IU2DA,IAAAiF,SAAA,EAAA2E,qBAAA,EAAA4G,GAAA;AV1DA,IU0DA,OAAA1W,mBAAA,GAAAc,IAAA,UAAAsF,SAAAC,QAAA;AVzDA,MUyDA,kBAAAA,QAAA,CAAA9B,IAAA,GAAA8B,QAAA,CAAAxK,IAAA;AVxDA,QUwDA;AVvDA,UUwDQsP,SAAS,GAAGhX,QAAQ,CAAC4E,cAAc,CAAC,mBAAmB,CAAC,CAACrF,KAAK,EACpE;AVxDF,UUwDE,MACI,CAAC,IAAAwX,4BAAa,EAAC,CAAC,IAAI,CAACC,SAAS;AVxDpC,YUwDoC9E,QAAA,CAAAxK,IAAA;AVvDpC,YUuDoC;AVtDpC,UUsDoC;AVrDpC,UUsDIkU,qBAAqB,CAAC7F,WAAW,GAAG,qBAAqB;AVrD7D,UUsDI6F,qBAAqB,CAACpX,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;AVrDlD,UUqDmD,OAAAwN,QAAA,CAAAtD,MAAA;AVpDnD,QUoDmD;AVnDnD,UUuDQ+M,qBAAqB,GAAG3b,QAAQ,CAACwC,aAAa,CAClD,6BACF,CAAC;AVxDH,UUwDG0P,QAAA,CAAAxK,IAAA;AVvDH,UUuDG,OACiB,IAAAyM,wBAAkB,EAClC6C,SAAS,EACT2E,qBAAqB,CAAC5F,WACxB,CAAC;AV1DH,QU0DG;AVzDH,UUsDQwM,GAAG,GAAArQ,QAAA,CAAAzD,IAAA;AVrDX,UUqDW,MAML8T,GAAG,KAAK,qBAAqB;AV1DnC,YU0DmCrQ,QAAA,CAAAxK,IAAA;AVzDnC,YUyDmC;AVxDnC,UUwDmC;AVvDnC,UUwDIkU,qBAAqB,CAAC7F,WAAW,GAAGwM,GAAG;AVvD3C,UUwDI3G,qBAAqB,CAACpX,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;AVvDlD,UUuDmD,OAAAwN,QAAA,CAAAtD,MAAA;AVtDnD,QUsDmD;AVrDnD,UUwDIgN,qBAAqB,CAACpX,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;AVvD/C,QUuDgD;AVtDhD,QUsDgD;AVrDhD,UUqDgD,OAAAyN,QAAA,CAAA5B,IAAA;AVpDhD,MUoDgD;AVnDhD,IUmDgD,GAAAyB,OAAA;AVlDhD,EUkDgD,CAE/C;AVnDD,EUmDC,OAAAuQ,qBAAA,CAAA3Q,KAAA,OAAAD,SAAA;AAAA,AVlDD;AUoDA1R,AVnDA,QUmDQ,CAAC8D,gBAAgB,CAAC,OAAO,EAAE,UAAU0e,KAAK,EAAE;AVlDpD,EUmDE,IAAM/E,cAAc,GAAGzd,QAAQ,CAAC4E,cAAc,CAAC,iBAAiB,CAAC;AVlDnE,EUmDE,IAAM8Y,WAAW,GAAG1d,QAAQ,CAAC4E,cAAc,CAAC,aAAa,CAAC;AVlD5D,EUoDE,IACE,CAAC6Y,cAAc,CAACgF,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,IACtC,CAAChF,WAAW,CAAC+E,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EACnC;AVtDJ,IUuDIjF,cAAc,CAACjZ,SAAS,CAACE,MAAM,CAAC,sBAAsB,CAAC;AVtD3D,EUuDE;AACF,AVvDA,CUuDC,CAAC;AAEF,AVxDA,SUwDSie,wBAAwBA,CAAA,EAAG;AVvDpC,EUwDE,IAAMlF,cAAc,GAAGzd,QAAQ,CAAC4E,cAAc,CAAC,iBAAiB,CAAC;AVvDnE,EUwDE6Y,cAAc,CAACjZ,SAAS,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACtD,AVxDA;AU0DA,AVzDA,IUyDIzE,QAAQ,CAAC4E,cAAc,CAAC,eAAe,CAAC,EAAE;AVxD9C,EUyDE5E,QAAQ,CACL4E,cAAc,CAAC,eAAe,CAAC,CAC/Bd,gBAAgB,CAAC,OAAO,EAAEue,oBAAoB,CAAC;AACpD,AV3DA;AU6DAriB,AV5DA,QU4DQ,CACL4E,cAAc,CAAC,kBAAkB,CAAC,CAClCd,gBAAgB,CAAC,OAAO,EAAE8e,uBAAuB,CAAC;AAErD5iB,AV/DA,QU+DQ,CACL4E,cAAc,CAAC,mBAAmB,CAAC,CACnCd,gBAAgB,CAAC,OAAO,EAAE8e,uBAAuB,CAAC;AAErD5iB,AVlEA,QUkEQ,CACL4E,cAAc,CAAC,aAAa,CAAC,CAC7Bd,gBAAgB,CAAC,OAAO,EAAE6e,wBAAwB,CAAC;AAEtD,AVrEA,IUqEIE,eAAe,GAAG,KAAK;AAE3B,AVtEA,IUsEIC,OAAO;AACX,AVtEA,SUsESC,WAAWA,CAAA,EAAG;AVrEvB,EUsEED,OAAO,GAAG,KAAK;AACjB,AVtEA;AUwEA,AVvEA,SUuESF,uBAAuBA,CAAA,EAAG;AVtEnC,EUuEE,IAAMI,kBAAkB,GAAGhjB,QAAQ,CAAC4E,cAAc,CAAC,qBAAqB,CAAC;AVtE3E,EUwEE,IAAI,CAACie,eAAe,EAAE;AVvExB,IUwEIG,kBAAkB,CAACxe,SAAS,CAACE,MAAM,CAAC,qBAAqB,CAAC;AVvE9D,IUwEIoe,OAAO,GAAG,IAAI;AVvElB,IUwEIG,cAAc,CAAC,CAAC;AVvEpB,IUwEIJ,eAAe,GAAG,CAACA,eAAe;AVvEtC,IUwEI5Z,SAAS,CAACiU,YAAY,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;AVvEhE,IUwEI,IAAMgG,aAAa,GAAGpY,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AVvEhE,IUwEIhG,UAAU,CAAC,YAAM;AVvErB,MUwEMge,WAAW,CAAC,CAAC;AVvEnB,MUwEM7G,mBAAmB,CAACgB,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;AVvE1E,MUwEMhB,mBAAmB,CAAC1X,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AVvEvD,MUwEMue,kBAAkB,CAACxe,SAAS,CAACC,GAAG,CAAC,0BAA0B,CAAC;AVvElE,MUwEMyX,mBAAmB,CAAC1X,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AVvE1D,IUwEI,CAAC,EAAEwe,aAAa,CAAC;AVvErB,EUwEE,CAAC,MAAM;AVvET,IUwEIJ,OAAO,GAAG,IAAI;AVvElB,IUwEIG,cAAc,CAAC,CAAC;AVvEpB,IUwEIJ,eAAe,GAAG,CAACA,eAAe;AVvEtC,IUwEI3G,mBAAmB,CAACgB,YAAY,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;AVvE1E,IUwEI8F,kBAAkB,CAACxe,SAAS,CAACC,GAAG,CAAC,qBAAqB,CAAC;AVvE3D,IUwEIM,UAAU,CAAC,YAAM;AVvErB,MUwEMge,WAAW,CAAC,CAAC;AVvEnB,MUwEM9Z,SAAS,CAACiU,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;AVvEhE,MUwEMhB,mBAAmB,CAAC1X,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AVvE1D,MUwEMwX,mBAAmB,CAAC1X,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AVvEvD,IUwEI,CAAC,EAAE,IAAI,CAAC;AVvEZ,EUwEE;AACF,AVxEA;AU0EA,AVzEA,SUyESwe,cAAcA,CAAA,EAAG;AVxE1B,EUyEE,IAAI,CAACH,OAAO,EAAE;AVxEhB,IUyEI;AVxEJ,EUyEE;AVxEF,EUyEExG,eAAe,CAACvG,WAAW,GAAG,EAAE;AVxElC,EUyEEoN,cAAc,CAAC,CAAC,EAAE,KAAK,EAAE7G,eAAe,EAAE,GAAG,CAAC;AVxEhD,EUyEE,IAAM8G,UAAU,GAAG,IAAI;AVxEzB,EUyEEre,UAAU,CAACke,cAAc,EAAEG,UAAU,CAAC;AACxC,AVzEA;AU2EA,AV1EA,SU0ES3E,UAAUA,CAAA,EAAG;AVzEtB,EU0EEjD,gBAAgB,CAACzF,WAAW,GAAG,EAAE;AVzEnC,EU0EE;AVzEF,EU0EE;AVzEF,EU0EE6L,sBAAsB,CAAC3N,KAAK,CAAC;AVzE/B,EU0EElT,gCAAe,CAACE,GAAG,CAAC2E,IAAI,CAAC,CAAC;AVzE5B,EU0EE,IAAAtB,iBAAW,EAAC,CAAC;AVzEf,EU0EES,UAAU,CAAC,YAAM;AVzEnB,IU0EI/E,QAAQ,CAAC8D,gBAAgB,CAAC,SAAS,EAAEke,WAAW,EAAE;AVzEtD,MUyEwDqB,IAAI,EAAE;AVxE9D,IUwEmE,CAAC,CAAC;AVvErE,IUwEIrjB,QAAQ,CAAC8D,gBAAgB,CAAC,YAAY,EAAEke,WAAW,EAAE;AVvEzD,MUuE2DqB,IAAI,EAAE;AVtEjE,IUsEsE,CAAC,CAAC;AVrExE,IUsEI9H,aAAa,CAAC/W,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;AVrE1C,EUsEE,CAAC,EAAE,GAAG,CAAC;AVrET,EUsEEK,UAAU,CAAC,YAAM;AVrEnB,IUsEIue,WAAW,CAAC,CAAC,CAAC;AVrElB,EUsEE,CAAC,EAAE,IAAI,CAAC;AACV,AVtEA;AUwEA,AVvEA,SUuES/G,oBAAoBA,CAAA,EAAG;AVtEhC,EUuEE,IAAIgH,iBAAiB;AVtEvB,EUuEE,IAAI/G,MAAM,CAACgH,UAAU,GAAGhH,MAAM,CAACiH,WAAW,GAAGzI,WAAW,GAAGC,YAAY,EAAE;AVtE3E,IUuEIsI,iBAAiB,GAAG/G,MAAM,CAACgH,UAAU,GAAGxI,WAAW;AVtEvD,EUuEE,CAAC,MAAM;AVtET,IUuEIuI,iBAAiB,GAAG/G,MAAM,CAACiH,WAAW,GAAGxI,YAAY;AVtEzD,EUuEE;AVtEF,EUwEEhS,SAAS,CAACzJ,KAAK,CAACkkB,KAAK,MAAApY,MAAA,CAAM0P,WAAW,GAAGuI,iBAAiB,OAAI;AVvEhE,EUwEEta,SAAS,CAACzJ,KAAK,CAACmkB,MAAM,MAAArY,MAAA,CAAM2P,YAAY,GAAGsI,iBAAiB,OAAI;AAClE,AVxEA;AU0EA,AVzEA,SUyESK,uBAAuBA,CAAA,EAAG;AVxEnC,EUyEE,IAAIC,WAAW,GAAG7jB,QAAQ,CAAC4E,cAAc,CAAC,aAAa,CAAC;AVxE1D,EU0EE,IAAKkf,QAAQ,CAAC,CAAC,IAAItH,MAAM,CAACuH,WAAW,KAAK,CAAC,IAAKvH,MAAM,CAACuH,WAAW,KAAK,GAAG,EAAE;AVzE9E,IU0EI;AVzEJ,IU0EIF,WAAW,CAACrkB,KAAK,CAACyd,OAAO,GAAG,MAAM;AVzEtC,EU0EE,CAAC,MAAM;AVzET,IU0EI;AVzEJ,IU0EI4G,WAAW,CAACrkB,KAAK,CAACyd,OAAO,GAAG,MAAM;AVzEtC,EU0EE;AACF,AV1EA;AU4EA,AV3EA,SU2ES6G,QAAQA,CAAA,EAAG;AV1EpB,EU2EE,OAAO,eAAe,CAACtgB,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAClD,AV3EA;AACA;AU4EA,AV3EA;AU4EAkgB,AV3EA,uBU2EuB,CAAC,CAAC;AV1EzB;AU4EA,AV3EA;AU4EApH,AV3EA,MU2EM,CAAC1Y,gBAAgB,CAAC,mBAAmB,EAAE8f,uBAAuB,CAAC;AAErE,AV5EA,IU4EMI,IAAI,GAAG;AV3Eb,EU4EEC,EAAE,EAAE,OAAO;AV3Eb,EU4EEC,OAAO,EAAE,KAAK;AV3EhB,EU2EkB;AV1ElB,EU2EEC,SAAS,EAAE,CAAC;AV1Ed,EU0EgB;AVzEhB,EU0EEC,YAAY,EAAE,GAAG;AVzEnB,EU0EEC,MAAM,EAAE,IAAI;AVzEd,EU0EEC,GAAG,EAAE,IAAI;AVzEX,EU0EEC,SAAS,EAAE,EAAE;AVzEf,EU0EEC,MAAM,EAAE,EAAE;AVzEZ,EU0EEC,EAAE,EAAE,CAAC;AVzEP,EU0EEC,IAAI,EAAE,KAAK;AVzEb,EU0EEC,IAAI,WAAAA,KAAA,EAAG;AVzET,IU0EI,IAAI,CAACN,MAAM,GAAGrkB,QAAQ,CAACwC,aAAa,CAAC,IAAI,CAACyhB,EAAE,CAAC;AVzEjD,IU0EI,IAAI,CAACK,GAAG,GAAG,IAAI,CAACD,MAAM,CAACO,UAAU,CAAC,IAAI,CAAC;AVzE3C,IU0EI,IAAI,CAACrV,KAAK,CAAC,CAAC;AVzEhB,IU0EIgO,qBAAqB,CAAC,IAAI,CAACsH,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AVzEjD,IU0EItI,MAAM,CAAC1Y,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACyL,KAAK,CAACuV,IAAI,CAAC,IAAI,CAAC,CAAC;AVzE5D,EU0EE,CAAC;AVzEH,EU0EEvV,KAAK,WAAAA,MAAA,EAAG;AVzEV,IU0EI,IAAI,CAACwV,CAAC,GAAGvI,MAAM,CAACgH,UAAU;AVzE9B,IU0EI,IAAI,CAACtW,CAAC,GAAGsP,MAAM,CAACiH,WAAW;AVzE/B,IU0EI,IAAI,CAACY,MAAM,CAACX,KAAK,GAAG,IAAI,CAACqB,CAAC;AVzE9B,IU0EI,IAAI,CAACV,MAAM,CAACV,MAAM,GAAG,IAAI,CAACzW,CAAC;AVzE/B,IU0EI,IAAI,CAACqX,SAAS,GAAG,EAAE;AVzEvB,IU0EI,IAAI,CAACE,EAAE,GAAG3Z,IAAI,CAAC4V,IAAI,CAAE,IAAI,CAACqE,CAAC,GAAG,IAAI,CAAC7X,CAAC,GAAI,IAAI,CAACgX,OAAO,CAAC;AVzEzD,IU0EI,KAAK,IAAIrd,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4d,EAAE,EAAE5d,CAAC,EAAE,EAAE;AVzEtC,MU0EM,IAAIme,IAAI,GAAGla,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;AVzExC,MU0EM,IAAI,CAACwZ,SAAS,CAACza,IAAI,CAAC;AVzE1B,QU0EQkP,CAAC,EAAElO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACga,CAAC;AVzEjC,QUyEmC;AVxEnC,QUyEQ3X,CAAC,EAAEtC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACmC,CAAC;AVxEjC,QUwEmC;AVvEnC,QUwEQ6X,CAAC,EAAEC,IAAI;AVvEf,QUwEQ9X,CAAC,EAAE8X,IAAI;AVvEf,QUwEQC,EAAE,EAAE,IAAI,CAACb,YAAY,GAAGtZ,IAAI,CAACC,MAAM,CAAC,CAAC;AVvE7C,QUuE+C;AVtE/C,QUuEQma,EAAE,EAAEpa,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACoZ,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG,CAAC;AVtE/D,QUuEQgB,IAAI,EAAE,SAAS;AVtEvB,QUuEQpe,CAAC,EAAE+D,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;AVtEjC,MUuEM,CAAC,CAAC;AVtER,IUuEI;AVtEJ,EUuEE,CAAC;AVtEH,EUwEE8Z,MAAM,WAAAA,OAAA,EAAG;AVvEX,IUuEW,IAAAO,KAAA;AVtEX,IUuEI,IAAI,CAACd,GAAG,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACN,CAAC,EAAE,IAAI,CAAC7X,CAAC,CAAC;AVtE5C,IUuEI,IAAI,CAACqX,SAAS,CAACjkB,OAAO,CAAC,UAACiN,CAAC,EAAE1G,CAAC,EAAK;AVtErC,MUuEM0G,CAAC,CAACH,CAAC,IAAIG,CAAC,CAAC0X,EAAE;AVtEjB,MUuEM1X,CAAC,CAACyL,CAAC,IAAIzL,CAAC,CAAC2X,EAAE;AVtEjB,MUuEME,KAAI,CAACd,GAAG,CAACgB,SAAS,GAAG/X,CAAC,CAAC4X,IAAI;AVtEjC,MUuEMC,KAAI,CAACd,GAAG,CAACiB,QAAQ,CAAChY,CAAC,CAACyL,CAAC,EAAEzL,CAAC,CAACH,CAAC,EAAEG,CAAC,CAACwX,CAAC,EAAExX,CAAC,CAACL,CAAC,CAAC;AVtE3C,MUuEM,IAAIK,CAAC,CAACyL,CAAC,GAAGoM,KAAI,CAACL,CAAC,GAAG,CAAC,IAAIxX,CAAC,CAACyL,CAAC,GAAG,CAAC,CAAC,IAAIzL,CAAC,CAACH,CAAC,GAAGgY,KAAI,CAAClY,CAAC,EAAE;AVtExD,QUuEQK,CAAC,CAACyL,CAAC,GAAGlO,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGqa,KAAI,CAACL,CAAC;AVtEpC,QUuEQxX,CAAC,CAACH,CAAC,GAAG,CAAC,EAAE;AVtEjB,MUuEM;AVtEN,IUuEI,CAAC,CAAC;AVtEN,IUuEI,IAAI,IAAI,CAACsX,IAAI,EAAE;AVtEnB,MUuEM;AVtEN,IUuEI;AVtEJ,IUuEInH,qBAAqB,CAAC,IAAI,CAACsH,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AVtEjD,EUuEE,CAAC;AVtEH,EUuEEU,OAAO,WAAAA,QAAA,EAAG;AVtEZ,IUuEI,IAAI,CAACd,IAAI,GAAG,IAAI;AVtEpB,EUuEE;AACF,AVvEA,CUuEC;AAEDV,AVxEA,IUwEI,CAACW,IAAI,CAAC,CAAC;AAEX,AVzEA,IUyEMc,UAAU,GAAG,WAAW;AAE9B,AV1EA,SU0ESnC,WAAWA,CAAClN,KAAK,EAAE;AVzE5B,EU0EE,IAAIA,KAAK,GAAGqP,UAAU,CAAC7e,MAAM,EAAE;AVzEjC,IU0EI4U,gBAAgB,CAACzF,WAAW,IAAI0P,UAAU,CAACpV,MAAM,CAAC+F,KAAK,CAAC;AVzE5D,IU0EIrR,UAAU,CAAC;AVzEf,MUyEe,OAAMue,WAAW,CAAClN,KAAK,GAAG,CAAC,CAAC;AVxE3C,IUwE2C,GAAE,GAAG,CAAC,CAAC,CAAC;AVvEnD,EUwEE,CAAC,MAAM;AVvET,IUwEIqF,gBAAgB,CAACjX,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AVvErD,IUwEI+W,gBAAgB,CAACjX,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AVvElD,EUwEE;AACF,AVxEA;AU0EA,AVzEA,SUyES0e,cAAcA,CAAC/M,KAAK,EAAE8J,IAAI,EAAEjhB,IAAI,EAAEymB,OAAO,EAAE;AVxEpD,EUyEE,IAAItP,KAAK,GAAG8J,IAAI,CAACtZ,MAAM,EAAE;AVxE3B,IUyEI3H,IAAI,CAACkjB,SAAS,aAAA7W,MAAA,CAAa4U,IAAI,CAAC7P,MAAM,CAAC+F,KAAK,CAAC,YAAS;AVxE1D,IUyEIrR,UAAU,CAAC,YAAM;AVxErB,MUyEM0B,KAAK,CAACiC,IAAI,CAACzJ,IAAI,CAAC0mB,QAAQ,CAAC,CAACrlB,OAAO,CAAC,UAACslB,IAAI,EAAExP,KAAK,EAAK;AVxEzD,QUyEQrR,UAAU,CAAC,YAAM;AVxEzB,UUyEU6gB,IAAI,CAACphB,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;AVxEpC,QUyEQ,CAAC,EAAE2R,KAAK,GAAG,EAAE,CAAC;AVxEtB,MUyEM,CAAC,CAAC;AVxER,MUyEM+M,cAAc,CAAC/M,KAAK,GAAG,CAAC,EAAE8J,IAAI,EAAEjhB,IAAI,EAAEymB,OAAO,CAAC;AVxEpD,IUyEI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AVxEb,EUyEE,CAAC,MAAM;AVxET,IUyEIzmB,IAAI,CAACuF,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AVxEzC,IUyEIzF,IAAI,CAACuF,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AVxEtC,EUyEE;AACF,AVzfile":"game-manager.e0ee197a.js","sourceRoot":"../../src/public","sourcesContent":["export function getCustomProperty(elem, prop) {\n  return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0;\n}\n\nexport function setCustomProperty(elem, prop, value) {\n  elem.style.setProperty(prop, value);\n}\n\nexport function incrementCustomProperty(elem, prop, inc) {\n  setCustomProperty(elem, prop, getCustomProperty(elem, prop) + inc);\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.05;\nconst groundElems = document.querySelectorAll('[data-ground]');\n\nexport function setupGround() {\n  setCustomProperty(groundElems[0], '--left', 0);\n  setCustomProperty(groundElems[1], '--left', 250);\n}\n\nexport function updateGround(delta, speedScale) {\n  groundElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -250) {\n      incrementCustomProperty(ground, '--left', 500);\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.022;\nconst groundLayerTwoElems = document.querySelectorAll(\n  '[data-ground-layer-two]'\n);\n\nexport function setupGroundLayerTwo() {\n  setCustomProperty(groundLayerTwoElems[0], '--left', 0);\n  setCustomProperty(groundLayerTwoElems[1], '--left', 260);\n}\n\nexport function updateGroundLayerTwo(delta, speedScale) {\n  groundLayerTwoElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -260) {\n      incrementCustomProperty(ground, '--left', 520);\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.007;\nconst groundLayerThreeElems = document.querySelectorAll(\n  '[data-ground-layer-three]'\n);\n\nexport function setupGroundLayerThree() {\n  setCustomProperty(groundLayerThreeElems[0], '--left', 0);\n  setCustomProperty(groundLayerThreeElems[1], '--left', 200);\n}\n\nexport function updateGroundLayerThree(delta, speedScale) {\n  groundLayerThreeElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -200) {\n      incrementCustomProperty(ground, '--left', 400);\n    }\n  });\n}\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { Howl, Howler } from 'howler';\nexport const soundController = {\n  die: new Howl({\n    src: ['sounds/die.wav'],\n    volume: 0,\n  }),\n  jump: new Howl({\n    src: ['sounds/jump.wav'],\n    volume: 0,\n  }),\n  beatScore: new Howl({\n    src: ['sounds/beatScore.wav'],\n    volume: 0,\n  }),\n  pickupCoin: new Howl({\n    src: ['sounds/pickupCoin.wav'],\n    volume: 0,\n  }),\n  takeDamage: new Howl({\n    src: ['sounds/takeDamage.wav'],\n    volume: 0,\n  }),\n};\n","import {\n  incrementCustomProperty,\n  setCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport lionJumpImg1 from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionJumpImg2 from '../public/imgs/nittany-lion/jump-animation/Jump-2.png';\nimport lionJumpImg3 from '../public/imgs/nittany-lion/jump-animation/Jump-3.png';\nimport lionLoseImg from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionRunImg1 from '../public/imgs/nittany-lion/run-cycle/Run-1.png';\nimport lionRunImg2 from '../public/imgs/nittany-lion/run-cycle/Run-2.png';\nimport lionRunImg3 from '../public/imgs/nittany-lion/run-cycle/Run-3.png';\nimport lionRunImg4 from '../public/imgs/nittany-lion/run-cycle/Run-4.png';\nimport lionRunImg5 from '../public/imgs/nittany-lion/run-cycle/Run-5.png';\nimport lionRunImg6 from '../public/imgs/nittany-lion/run-cycle/Run-6.png';\nimport { soundController } from '../utility/sound-controller.js';\n\nconst dinoElem = document.querySelector('[data-dino]');\nconst JUMP_SPEED = 0.21;\nconst DOUBLE_JUMP_SPEED = 0.23; // Adjust this as needed\nconst GRAVITY = 0.00075;\nconst DINO_FRAME_COUNT = 6;\nconst JUMP_FRAME_COUNT = 3;\nconst FRAME_TIME = 100;\nconst BOTTOM_ANCHOR = 17.5;\n\nlet isJumping;\nlet canDoubleJump;\nlet jumpCount;\nlet dinoFrame;\nlet currentFrameTime;\nlet yVelocity;\nlet jumpAnimationInProgress;\n\nfunction isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nexport function setupDino() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n  canDoubleJump = true;\n  jumpCount = 0;\n  dinoFrame = 0;\n  currentFrameTime = 0;\n  yVelocity = 0;\n  setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n\n  // Function to check if the device is a mobile device\n  if (isMobileDevice()) {\n    document.removeEventListener('touchstart', onJump);\n    document.addEventListener('touchstart', onJump);\n    document.addEventListener('touchstart', onDive);\n  } else {\n    document.removeEventListener('keydown', onJump);\n    document.addEventListener('keydown', onJump);\n    document.addEventListener('keydown', onDive);\n  }\n}\n\nexport function updateDino(delta, speedScale) {\n  handleRun(delta, speedScale);\n  handleJump(delta);\n  handleDive(delta);\n}\n\nexport function getDinoRect() {\n  return dinoElem.getBoundingClientRect();\n}\n\nexport function setDinoLose() {\n  dinoElem.src = lionLoseImg;\n  dinoElem.classList.add('leap');\n  dinoElem.classList.remove('flash-animation');\n  const spotlight = document.getElementById('spotlight');\n  spotlight.classList.add('close-spotlight');\n}\n\nfunction startJump() {\n  if (!jumpAnimationInProgress) {\n    jumpAnimationInProgress = true;\n    dinoElem.src = lionJumpImg1;\n\n    setTimeout(function () {\n      dinoElem.src = lionJumpImg2;\n    }, 320); // Adjust the delay as needed\n\n    setTimeout(function () {\n      dinoElem.src = lionJumpImg3;\n    }, 400); // Adjust the delay as needed\n  }\n}\n\nfunction endJump() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n}\n\nfunction handleRun(delta, speedScale) {\n  if (isJumping) {\n    startJump();\n    return;\n  }\n\n  if (currentFrameTime >= FRAME_TIME) {\n    dinoFrame = (dinoFrame + 1) % DINO_FRAME_COUNT;\n\n    // Use a switch statement to set the image source based on the current frame\n    switch (dinoFrame) {\n      case 0:\n        dinoElem.src = lionRunImg1;\n        break;\n      case 1:\n        dinoElem.src = lionRunImg2;\n        break;\n      case 2:\n        dinoElem.src = lionRunImg3;\n        break;\n      case 3:\n        dinoElem.src = lionRunImg4;\n        break;\n      case 4:\n        dinoElem.src = lionRunImg5;\n        break;\n      case 5:\n        dinoElem.src = lionRunImg6;\n        break;\n      // Add more cases if you have more frames\n    }\n\n    currentFrameTime -= FRAME_TIME;\n  }\n  currentFrameTime += delta * speedScale;\n}\n\nfunction handleJump(delta) {\n  if (!isJumping) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    endJump();\n    canDoubleJump = true;\n    jumpCount = 0;\n  }\n\n  if (jumpCount === 1 && canDoubleJump) {\n    yVelocity = DOUBLE_JUMP_SPEED;\n    canDoubleJump = false;\n  }\n\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onJump(e) {\n  if (\n    (e.code !== 'Space' && e.type !== 'touchstart') ||\n    (isJumping && jumpCount >= 2)\n  )\n    return;\n  endJump();\n  startJump();\n  soundController.jump.play();\n  yVelocity = JUMP_SPEED;\n  isJumping = true;\n  jumpCount++;\n}\n\nconst DIVE_SPEED = 0.2; // Adjust the dive speed as needed\nlet isDiving = false;\n\nfunction handleDive(delta) {\n  if (!isDiving) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    isDiving = false;\n    jumpCount = 0;\n  }\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onDive(e) {\n  if ((e.code !== 'ArrowDown' && e.type !== 'touchstart') || isDiving) return;\n\n  yVelocity = -DIVE_SPEED; // Negative value for diving down\n  isDiving = true;\n\n  // Add any additional logic you need for the dive action\n\n  // Optional: You might want to reset isJumping and jumpCount here if needed\n  isJumping = false;\n  jumpCount = 0;\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport tree1 from '../public/imgs/trees/Bush-Tree.png';\nimport tree2 from '../public/imgs/trees/Round-Tree.png';\nimport tree3 from '../public/imgs/trees/Pine-Tree.png';\nimport snowball from '../public/imgs/Obstacles/Snowball-Small.png';\nconst cactiPositions = [];\n\nconst SPEED = 0.05;\nconst CACTUS_INTERVAL_MIN = 500;\nconst CACTUS_INTERVAL_MAX = 2000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCactusTime;\nexport function setupCactus() {\n  nextCactusTime = CACTUS_INTERVAL_MIN;\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    cactus.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return cactiPositions.includes(position);\n}\n\nfunction generateRandomCacti() {\n  const minCacti = 1;\n  const maxCacti = 3; // Adjust the range as needed\n\n  const numberOfCacti = randomNumberBetween(minCacti, maxCacti);\n\n  for (let i = 0; i < numberOfCacti; i++) {\n    let newPosition;\n\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    cactiPositions.push(newPosition);\n    createCactus(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  cactiPositions.length = 0;\n}\n\nexport function updateCactus(delta, speedScale) {\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    incrementCustomProperty(cactus, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(cactus, '--left') <= -100) {\n      cactus.remove();\n    }\n  });\n\n  if (nextCactusTime <= 0) {\n    generateRandomCacti();\n    nextCactusTime =\n      randomNumberBetween(CACTUS_INTERVAL_MIN, CACTUS_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextCactusTime -= delta;\n}\n\nexport function getCactusRects() {\n  return [...document.querySelectorAll('[data-cactus]')].map((cactus) => {\n    return cactus.getBoundingClientRect();\n  });\n}\n\n// Array of possible cactus images with associated weights\nconst cactusImages = [\n  { src: tree1, weight: 5 },\n  { src: tree2, weight: 1 },\n  { src: tree3, weight: 2 },\n  { src: snowball, weight: 3 },\n  // Add more image sources with corresponding weights\n];\n\nfunction createCactus(newPosition) {\n  // Calculate the total weight\n  const totalWeight = cactusImages.reduce(\n    (sum, image) => sum + image.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random cactus image based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedImage;\n  for (const image of cactusImages) {\n    cumulativeWeight += image.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedImage = image;\n      break;\n    }\n  }\n  const cactus = document.createElement('img');\n  cactus.dataset.cactus = true;\n  cactus.src = selectedImage.src;\n  cactus.classList.add('cactus', 'game-element');\n  setCustomProperty(cactus, '--left', newPosition);\n  setCustomProperty(cactus, 'height', `${randomNumberBetween(13, 17)}%`);\n\n  worldElem.append(cactus);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export enum UserErrors {\n  NO_USER_FOUND = 'no-user-found',\n  USERNAME_ALREADY_EXISTS = 'user already exists',\n}\nexport enum ServerErrors {\n  SERVER_ERROR = 'server-error',\n}\n","import { UserErrors } from '../../server/common/errors';\n\n//gets all users from collection\nconst getAllHighScoreUsers = async () => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/users');\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log('getAllHighScoreUsers error', error);\n  }\n};\n\n//insertions instead of delete\n\n//deletes entry by field\nconst handleDeleteEntry = async (entryField) => {\n  try {\n    const response = await fetch(\n      `http://localhost:3001/scores/delete-entry/${entryField}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.NO_USER_FOUND) {\n        alert('ERROR: No entry found with the specified ID');\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleDeleteEntry error', error);\n  }\n};\n\n//sorts all collection data in descending order by score, and deletes last entry by username\nconst handleSortAndDeleteLastEntry = async () => {\n  await getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n    handleDeleteEntry(sortedData[sortedData.length - 1].username);\n  });\n};\n\n//adds new high score\nconst handleNewHighScore = async (username, score) => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/new-high', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        score: score,\n      }),\n    });\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.USERNAME_ALREADY_EXISTS) {\n        return UserErrors.USERNAME_ALREADY_EXISTS;\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    } else {\n      await handleSortAndDeleteLastEntry();\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleNewHighScore error', error);\n  }\n};\n\nconst checkIfNewHighScore = async (score) => {};\n\nexport { handleNewHighScore, getAllHighScoreUsers, checkIfNewHighScore };\n","import { getAllHighScoreUsers } from '../apis';\n\nexport function createLeaderboard(leaderboardElem) {\n  //for right sidebar\n  const personalBestLvl = document.querySelector('[data-personal-best-lvl]');\n  const personalBestCombo = document.querySelector(\n    '[data-personal-best-combo]'\n  );\n  const personalBestScoreElem = document.querySelector(\n    '[data-personal-best-score]'\n  );\n\n  // Retrieve values from local storage\n  const storedPersonalBestLvl = localStorage.getItem('lion-best-lvl');\n  const storedPersonalBestCombo = localStorage.getItem('lion-best-combo');\n  const storedPersonalBestScore = localStorage.getItem('lion-high-score');\n\n  // Check if values exist in local storage before updating the elements\n  if (storedPersonalBestLvl !== null) {\n    personalBestLvl.textContent = storedPersonalBestLvl;\n  }\n\n  if (storedPersonalBestCombo !== null) {\n    personalBestCombo.textContent = storedPersonalBestCombo;\n  }\n\n  if (storedPersonalBestScore !== null) {\n    personalBestScoreElem.textContent = storedPersonalBestScore;\n  }\n\n  getAllHighScoreUsers().then((data) => {\n    function getSuffix(number) {\n      const lastDigit = number % 10;\n      if (number === 11 || number === 12 || number === 13) {\n        return 'th';\n      } else if (lastDigit === 1) {\n        return 'st';\n      } else if (lastDigit === 2) {\n        return 'nd';\n      } else if (lastDigit === 3) {\n        return 'rd';\n      } else {\n        return 'th';\n      }\n    }\n\n    // Map data to HTML elements and append to container\n    data.users.forEach((item, index) => {\n      const rowElement = document.createElement('tr');\n      rowElement.classList.add('leaderboard-row');\n\n      // Create and append the \"Rank\" cell\n      const rankCell = document.createElement('td');\n      rankCell.classList.add('leaderboard-rank-item');\n      const indexSuffix = getSuffix(index + 1);\n      rankCell.textContent = `${index + 1}${indexSuffix}`;\n      rowElement.appendChild(rankCell);\n\n      // Create and append the \"Score\" cell\n      const scoreCell = document.createElement('td');\n      scoreCell.classList.add('leaderboard-score-item');\n      scoreCell.textContent = `${item.score}`;\n      rowElement.appendChild(scoreCell);\n\n      // Create and append the \"Name\" cell\n      const nameCell = document.createElement('td');\n      nameCell.classList.add('leaderboard-name-item');\n      nameCell.textContent = `${item.username}`;\n      rowElement.appendChild(nameCell);\n\n      // Append the entire row to the body\n      leaderboardElem.appendChild(rowElement);\n    });\n  });\n}\n","const badWordsArray = [\n  'ass',\n  'fuc',\n  'fuk',\n  'fuq',\n  'fux',\n  'fck',\n  'coc',\n  'cok',\n  'coq',\n  'kox',\n  'koc',\n  'kok',\n  'koq',\n  'cac',\n  'cak',\n  'caq',\n  'kac',\n  'kak',\n  'kaq',\n  'dic',\n  'dik',\n  'diq',\n  'dix',\n  'dck',\n  'pns',\n  'psy',\n  'fag',\n  'fgt',\n  'ngr',\n  'nig',\n  'cnt',\n  'knt',\n  'sht',\n  'dsh',\n  'twt',\n  'bch',\n  'cum',\n  'clt',\n  'kum',\n  'klt',\n  'suc',\n  'suk',\n  'suq',\n  'sck',\n  'lic',\n  'lik',\n  'liq',\n  'lck',\n  'jiz',\n  'jzz',\n  'gay',\n  'gey',\n  'gei',\n  'gai',\n  'vag',\n  'vgn',\n  'sjv',\n  'fap',\n  'prn',\n  'jew',\n  'joo',\n  'gvr',\n  'pus',\n  'pis',\n  'pss',\n  'snm',\n  'tit',\n  'fku',\n  'fcu',\n  'fqu',\n  'hor',\n  'slt',\n  'jap',\n  'wap',\n  'wop',\n  'kik',\n  'kyk',\n  'kyc',\n  'kyq',\n  'dyk',\n  'dyq',\n  'dyc',\n  'kkk',\n  'jyz',\n  'prk',\n  'prc',\n  'prq',\n  'mic',\n  'mik',\n  'miq',\n  'myc',\n  'myk',\n  'myq',\n  'guc',\n  'guk',\n  'guq',\n  'giz',\n  'gzz',\n  'sex',\n  'sxx',\n  'sxi',\n  'sxe',\n  'sxy',\n  'xxx',\n  'wac',\n  'wak',\n  'waq',\n  'wck',\n  'pot',\n  'thc',\n  'vaj',\n  'vjn',\n  'nut',\n  'std',\n  'lsd',\n  'poo',\n  'azn',\n  'pcp',\n  'dmn',\n  'orl',\n  'anl',\n  'ans',\n  'muf',\n  'mff',\n  'phk',\n  'phc',\n  'phq',\n  'xtc',\n  'tok',\n  'toc',\n  'toq',\n  'mlf',\n  'rac',\n  'rak',\n  'raq',\n  'rck',\n  'sac',\n  'sak',\n  'saq',\n  'pms',\n  'nad',\n  'ndz',\n  'nds',\n  'wtf',\n  'sol',\n  'sob',\n  'fob',\n  'kys',\n];\n\nfunction checkForBadWords(input) {\n  for (const word of badWordsArray) {\n    if (input.includes(word)) {\n      return true; // bad word detected\n    }\n  }\n  return false; // No bad words detected\n}\n\nfunction validateInput() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  if (checkForBadWords(userInput)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport { validateInput };\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\n\nconst SPEED = 0.05;\nconst MULTIPLIER_INTERVAL_MIN = 2000;\nconst MULTIPLIER_INTERVAL_MAX = 4000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextMultiplierTime;\nexport function setupMultiplier() {\n  nextMultiplierTime = MULTIPLIER_INTERVAL_MIN;\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    multiplier.remove();\n  });\n}\n\nexport function updateMultiplier(delta, speedScale) {\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    incrementCustomProperty(\n      multiplier,\n      '--left',\n      delta * speedScale * SPEED * -1\n    );\n    if (getCustomProperty(multiplier, '--left') <= -100) {\n      multiplier.remove();\n    }\n  });\n\n  if (nextMultiplierTime <= 0) {\n    createMultipliers();\n    nextMultiplierTime =\n      randomNumberBetween(MULTIPLIER_INTERVAL_MIN, MULTIPLIER_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextMultiplierTime -= delta;\n}\n\nexport function getMultiplierRects() {\n  return [...document.querySelectorAll('[data-multiplier]')].map(\n    (multiplier) => {\n      return {\n        id: multiplier.id,\n        rect: multiplier.getBoundingClientRect(),\n        multiplier: multiplier.dataset.multiplier,\n      };\n    }\n  );\n}\n\nfunction getRandomKeyWeighted(obj) {\n  const keys = Object.keys(obj);\n  const probabilities = [0.7, 0.2, 0.1]; // Adjust probabilities as needed\n  const randomValue = Math.random();\n  let cumulativeProbability = 0;\n\n  for (let i = 0; i < keys.length; i++) {\n    cumulativeProbability += probabilities[i];\n    if (randomValue <= cumulativeProbability) {\n      return keys[i];\n    }\n  }\n\n  // Default case (fallback)\n  return keys[keys.length - 1];\n}\n\nfunction createMultipliers() {\n  const multiplier = document.createElement('div');\n  multiplier.dataset.multiplier =\n    multiplierRatios[getRandomKeyWeighted(multiplierRatios)];\n  multiplier.textContent = multiplier.dataset.multiplier;\n  multiplier.classList.add('multiplier', 'floating-item');\n  multiplier.id = Math.random().toString(16).slice(2);\n  setCustomProperty(multiplier, '--left', 100);\n  worldElem.append(multiplier);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst multiplierRatios = {\n  x2: 2,\n  x5: 5,\n  x10: 10,\n};\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport { getDinoRect } from './dino';\n\nconst coinPositions = [];\n\nconst SPEED = 0.05;\nconst COIN_INTERVAL_MIN = 75;\nconst COIN_INTERVAL_MAX = 1200;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCoinTime;\n\nexport function setupCoin() {\n  nextCoinTime = COIN_INTERVAL_MIN;\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    coin.remove();\n  });\n}\n\nexport function updateCoin(delta, speedScale) {\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    // Get positions of the dinosaur and coin\n    const dinoRect = getDinoRect();\n    const coinRect = coin.getBoundingClientRect();\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - coinRect.x, 2) +\n        Math.pow(dinoRect.y - coinRect.y, 2)\n    );\n\n    // If the distance is less than 40px, move the coin towards the dinosaur\n    if (coin.dataset.locked === 'true' || distance < 225) {\n      //lock the coin on the player\n      coin.dataset.locked = 'true';\n      const angle = Math.atan2(\n        dinoRect.y - coinRect.y,\n        dinoRect.x - coinRect.x\n      );\n      const speed = SPEED * delta * speedScale;\n\n      // Calculate incremental movement based on angle and speed\n      const deltaX = Math.cos(angle) * speed * 1.75;\n      const deltaY = Math.sin(angle) * speed * 1.75;\n\n      // Update coin position incrementally\n      incrementCustomProperty(coin, '--left', deltaX);\n      incrementCustomProperty(coin, '--bottom', deltaY * -1);\n    } else {\n      // Move the coin to the left if not close to the dinosaur\n      incrementCustomProperty(coin, '--left', delta * speedScale * SPEED * -1);\n    }\n\n    // Remove the coin if it goes off the screen\n    if (getCustomProperty(coin, '--left') <= -100) {\n      coin.remove();\n    }\n  });\n\n  if (nextCoinTime <= 0) {\n    createCoins();\n    nextCoinTime =\n      randomNumberBetween(COIN_INTERVAL_MIN, COIN_INTERVAL_MAX) / speedScale;\n  }\n  nextCoinTime -= delta;\n}\n\nexport function getCoinRects() {\n  return [...document.querySelectorAll('[data-coin]')].map((coin) => {\n    return {\n      id: coin.id,\n      rect: coin.getBoundingClientRect(),\n    };\n  });\n}\n\nconst collectableOptions = [\n  { type: 'gold-coin', weight: 0.3, points: 82 },\n  { type: 'red-gem', weight: 0.1, points: 325 },\n  { type: 'silver-coin', weight: 0.6, points: 46 },\n];\n\nfunction createCoins() {\n  // Calculate the total weight\n  const totalWeight = collectableOptions.reduce(\n    (sum, item) => sum + item.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random collectable based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedCollectable;\n  for (const item of collectableOptions) {\n    cumulativeWeight += item.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedCollectable = item;\n      break;\n    }\n  }\n\n  const element = document.createElement('div');\n  element.dataset.coin = true;\n  element.dataset.locked = 'false';\n  element.dataset.points = selectedCollectable.points;\n  element.classList.add(selectedCollectable.type, 'collectable', 'move-bottom');\n  element.id = Math.random().toString(16).slice(2);\n  setCustomProperty(element, '--left', 100);\n  const initialKeyframe = getRandomKeyframe();\n  element.style.animationDelay = `-${initialKeyframe}%`;\n  worldElem.append(element);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomKeyframe() {\n  // Return a random number between 0 and 100 (percentage)\n  return Math.floor(Math.random() * 101);\n}\n","import { updateGround, setupGround } from './elements/ground.js';\nimport {\n  updateGroundLayerTwo,\n  setupGroundLayerTwo,\n} from './elements/groundLayerTwo';\nimport {\n  updateGroundLayerThree,\n  setupGroundLayerThree,\n} from './elements/groundLayerThree';\nimport {\n  updateDino,\n  setupDino,\n  getDinoRect,\n  setDinoLose,\n} from './elements/dino.js';\nimport {\n  updateCactus,\n  setupCactus,\n  getCactusRects,\n} from './elements/cactus.js';\nimport { createLeaderboard } from './elements/leaderboard.js';\nimport { soundController } from './utility/sound-controller.js';\nimport {\n  getAllHighScoreUsers,\n  handleNewHighScore,\n  handleSortAndDeleteLastEntry,\n} from './apis.js';\nimport { validateInput } from './utility/validate-input.js';\nimport {\n  setupMultiplier,\n  updateMultiplier,\n  getMultiplierRects,\n} from './elements/score-multiplier.js';\nimport {\n  setupCoin,\n  updateCoin,\n  getCoinRects,\n  getCoinRectsWithOuterRadius,\n} from './elements/coin.js';\nimport muteImg from './public/imgs/icons/Speaker-Off.png';\nimport unmuteImg from './public/imgs/icons/Speaker-On.png';\nimport pauseImg from './public/imgs/icons/Pause.png';\nimport playImg from './public/imgs/icons/Play.png';\nimport redoImg from './public/imgs/icons/Redo.png';\nimport foregroundImg from './public/imgs/backgrounds/Foreground-Trees.png';\nconst WORLD_WIDTH = 100;\nconst WORLD_HEIGHT = 45;\nconst SPEED_SCALE_INCREASE = 0.00001;\nlet multiplierRatio = 1;\nconst worldElem = document.querySelector('[data-world]');\nconst scoreElem = document.querySelector('[data-score]');\nconst highScoreElem = document.querySelector('[data-high-score]');\nconst startScreenElem = document.querySelector('[data-start-screen]');\nconst endScreenElem = document.querySelector('[data-game-over-screen]');\nconst gameOverTextElem = document.querySelector('[data-game-over-text]');\nconst gameOverIconElem = document.getElementById('game-over-icon');\nconst leaderboardElem = document.querySelector('[data-leaderboard-body]');\nconst scoreMultiplierElem = document.querySelector('[data-score-multiplier]');\nconst scoreNewHighScoreElem = document.querySelector(\n  '[data-score-new-high-score]'\n);\nconst scoreErrorMessageElem = document.querySelector(\n  '[data-score-error-message]'\n);\nconst multiplierTimerElem = document.querySelector('[data-multiplier-timer]');\nconst tickerElem = document.querySelector('[data-ticker]');\nconst tickerElem2 = document.querySelector('[data-ticker2]');\nconst tickerElem3 = document.querySelector('[data-ticker3]');\nconst livesElem = document.querySelector('[data-lives]');\nconst dinoElem = document.querySelector('[data-dino]');\nconst scrollableTableElem = document.querySelector('[data-scrollable-table]');\nconst currentMultiplierElem = document.querySelector(\n  '[data-current-multiplier]'\n);\nconst plusPointsElem = document.querySelector('[data-plus-points]');\nconst tickerContainerElem = document.querySelector('[data-ticker-container]');\nconst loadingTextElem = document.querySelector('[data-loading-text]');\n\n// const playAgainButtonElem = document.querySelector('[data-play-again]');\n\n// playAgainButtonElem.addEventListener('click', function () {\n//   handleStart(); // Add any other actions you want to perform on button click\n// });\nsetPixelToWorldScale();\ncreateLeaderboard(leaderboardElem);\nwindow.addEventListener('resize', setPixelToWorldScale);\n// document.addEventListener('keydown', handleStart, { once: true });\n// document.addEventListener('touchstart', handleStart, { once: true });\nlet lastTime;\nlet speedScale;\nlet score;\nlet collisionOccurred = false; // Flag to track collision\nlet milestone = 10000;\n//init highScore elem\nhighScoreElem.textContent = localStorage.getItem('lion-high-score')\n  ? localStorage.getItem('lion-high-score')\n  : Math.floor('0').toString().padStart(6, 0);\nlet hasBeatenScore = false;\nlet isPaused = false;\nlet playerImmunity = false;\nlet immunityDuration = 2000; // Example: 2000 milliseconds (2 seconds)\nscrollableTableElem.classList.add('hide-element');\nscrollableTableElem.style.display = 'none';\nworldElem.setAttribute('transition-style', 'in:circle:center');\n// tickerContainerElem.classList.add('hide-element');\n// tickerContainerElem.classList.remove('show-element');\nconst pauseIconButton = document.getElementById('pause-icon-button');\n\n// Function to toggle the pause state\nfunction togglePause() {\n  isPaused = !isPaused;\n  if (isPaused) {\n    pauseIconButton.src = playImg;\n  } else {\n    pauseIconButton.src = pauseImg;\n    window.requestAnimationFrame(update);\n  }\n}\n\nconst shareContainer = document.getElementById('share-container');\nconst shareButton = document.getElementById('shareButton');\n\nshareContainer.addEventListener('mouseenter', () => {\n  shareButton.classList.add('transparent-background');\n});\n\nshareContainer.addEventListener('mouseleave', () => {\n  shareButton.classList.remove('transparent-background');\n});\n\nfunction copyCurrentLink() {\n  var input = document.createElement('input');\n  input.value = window.location.href;\n  document.body.appendChild(input);\n  input.select();\n  document.execCommand('copy');\n  document.body.removeChild(input);\n\n  // Change the button text to \"Copied!\"\n  document.getElementById('copy-link-button').textContent = 'Copied!';\n\n  // Change it back to \"Copy link\" after a delay (e.g., 2 seconds)\n  setTimeout(function () {\n    document.getElementById('copy-link-button').textContent = 'Copy link';\n  }, 2000);\n}\n\nif (document.getElementById('copy-link-button')) {\n  document\n    .getElementById('copy-link-button')\n    .addEventListener('click', copyCurrentLink);\n}\n\nconst pauseButton = document.getElementById('pauseButton');\npauseButton.addEventListener('click', function () {\n  togglePause();\n  pauseButton.blur();\n});\n\n// Function to set player immunity\nfunction setPlayerImmunity() {\n  playerImmunity = true;\n\n  // Reset player immunity after the specified duration\n  setTimeout(() => {\n    playerImmunity = false;\n  }, immunityDuration);\n}\n\nfunction updateElements() {}\n\nfunction update(time) {\n  if (isPaused) {\n    // Do nothing if the game is paused\n    return;\n  }\n\n  if (lastTime == null) {\n    lastTime = time;\n    window.requestAnimationFrame(update);\n    return;\n  }\n\n  // let delta = time - lastTime;\n  let delta = 8;\n  if (collisionOccurred) {\n    setPlayerImmunity();\n    togglePause();\n    setTimeout(() => {\n      collisionOccurred = false; // Reset the collision flag after the delay\n      togglePause();\n    }, 400);\n    return; // Pause the update during the delay\n  }\n\n  updateGround(delta, speedScale);\n  updateGroundLayerThree(delta, speedScale);\n  updateGroundLayerTwo(delta, speedScale);\n  updateDino(delta, speedScale);\n  updateCactus(delta, speedScale);\n  updateSpeedScale(delta);\n  updateScore(delta);\n  updateMultiplier(delta, speedScale);\n  updateCoin(delta, speedScale);\n  if (checkLose()) return handleLose();\n  if (checkMultiplierCollision());\n  if (checkCoinCollision());\n  lastTime = time;\n  window.requestAnimationFrame(update);\n}\n\nfunction createOneUpText() {\n  soundController.beatScore.play();\n\n  const newElement = document.createElement('div');\n  newElement.classList.add('one-up', 'sans');\n  newElement.style.position = 'absolute';\n  newElement.style.left = livesElem.offsetLeft + 'px';\n  newElement.style.top = '20%';\n  livesElem.parentNode.insertBefore(newElement, livesElem);\n  newElement.textContent = '1UP';\n  setTimeout(() => {\n    newElement.remove();\n  }, 600);\n  return true;\n}\n\nlet multiplierTimer = 5;\nlet timerInterval;\n\nfunction startMultiplierTimer() {\n  //reset the old timer\n  clearInterval(timerInterval);\n  multiplierTimer = 5;\n  multiplierTimerElem.textContent = multiplierTimer;\n\n  //start new interval\n  timerInterval = setInterval(() => {\n    multiplierTimer--;\n    if (multiplierTimer === 0) {\n      clearInterval(timerInterval);\n      multiplierTimerElem.textContent = '';\n      // Reset the timer and multiplier when the countdown ends\n      multiplierTimer = 5;\n      multiplierRatio = 1;\n      currentMultiplierElem.textContent = 1;\n    } else {\n      multiplierTimerElem.textContent = multiplierTimer;\n    }\n  }, 1000); // Update the timer every second (1000 milliseconds)\n}\n\nfunction checkMultiplierCollision() {\n  const dinoRect = getDinoRect();\n  getMultiplierRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      soundController.beatScore.play();\n      document.getElementById(element.id).remove();\n      clearInterval(timerInterval);\n      startMultiplierTimer();\n      // Multiply the existing multiplier by the newly collided multiplier\n      multiplierRatio *= parseInt(element.multiplier);\n      currentMultiplierElem.textContent = multiplierRatio;\n      return true;\n    }\n  });\n}\n\nconst duration = 1000;\nconst updateInterval = 50;\n\nfunction randomArc(element) {\n  // Set random horizontal movement values\n  const randomXEnd = Math.random() * 100 - 50; // Adjust the range based on your preference\n  document.documentElement.style.setProperty(\n    '--random-x-end',\n    randomXEnd + 'px'\n  );\n}\n\nfunction calculateFontSize(points) {\n  return Math.min(20 + points * 0.08, 46);\n}\n\nfunction checkCoinCollision() {\n  const dinoRect = getDinoRect();\n\n  getCoinRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const coinElement = document.getElementById(element.id);\n      // Create a pickup text element\n      console.log('picked up');\n      const newElement = document.createElement('div');\n      addPickupText(newElement, coinElement);\n      coinElement.remove();\n      setTimeout(() => {\n        newElement.remove();\n      }, 600);\n\n      // Remove the coin and update points\n      soundController.pickupCoin.play();\n      return true;\n    }\n  });\n}\n\nfunction addPickupText(text, pickupElement) {\n  text.classList.add('plus-points', 'sans');\n  text.style.position = 'absolute';\n  text.style.left = pickupElement.offsetLeft + 'px';\n  text.style.top = pickupElement.offsetTop - 70 + 'px';\n  randomArc(text);\n  pickupElement.parentNode.insertBefore(text, pickupElement);\n  const points = pickupElement?.dataset?.points * multiplierRatio;\n  updateScoreWithPoints(points);\n  const fontSize = calculateFontSize(points);\n  text.style.fontSize = fontSize + 'px';\n  text.textContent = `+${points}`;\n}\n\nfunction updateScoreWithPoints(delta) {\n  const initialScore = score;\n  const increments = Math.ceil(duration / updateInterval);\n  const incrementAmount = delta / increments;\n\n  const intervalId = setInterval(() => {\n    score += incrementAmount;\n    scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n    if (score >= initialScore + delta) {\n      // Stop the interval when the target score is reached\n      clearInterval(intervalId);\n    }\n  }, updateInterval);\n}\n\nfunction checkLose() {\n  //init dino rect\n  const dinoRect = getDinoRect();\n\n  //init enemy and player collision state\n  const isEnemyAndPlayerCollision = getCactusRects().some((rect) =>\n    isCollision(rect, dinoRect)\n  );\n\n  //if no lives remain then lose\n  if (livesElem.textContent === '0') {\n    worldElem.setAttribute('transition-style', 'out:circle:hesitate');\n    return true;\n  } //check if enemy and player are in colliding\n  else if (isEnemyAndPlayerCollision && !playerImmunity) {\n    //check if player is not in previous collision state\n    if (!collisionOccurred) {\n      // decrement lives elem by 1\n      soundController.takeDamage.play();\n      let currentLives = parseInt(livesElem.textContent, 10);\n      if (!isNaN(currentLives)) {\n        currentLives -= 1;\n        livesElem.textContent = currentLives;\n      }\n      //switch player collision state to true\n      collisionOccurred = true;\n      //set player to flash\n      dinoElem.classList.add('flash-animation');\n      //set world update pause\n      worldElem.classList.add('stop-time'); // Add the class to stop time\n      //set timeout for world update pause\n\n      // // Set a timeout to reset player collision state and player flash\n      setTimeout(() => {\n        collisionOccurred = false;\n        dinoElem.classList.remove('flash-animation');\n        dinoElem.classList.add('flash-light-animation');\n      }, 400);\n      setTimeout(() => {\n        collisionOccurred = false;\n        dinoElem.classList.remove('flash-light-animation');\n      }, 1600);\n    }\n  }\n}\n\nconst muteButton = document.getElementById('muteButton');\nlet soundControllerMuted = false;\nconst muteIconButton = document.getElementById('mute-icon-button');\n//mute/unmute function\nmuteButton.addEventListener('click', function () {\n  if (!soundControllerMuted) {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(true);\n    });\n    muteIconButton.src = muteImg;\n    soundControllerMuted = true;\n    muteButton.blur();\n  } else {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(false);\n    });\n    muteIconButton.src = unmuteImg;\n    soundControllerMuted = false;\n    muteButton.blur();\n  }\n});\n\nfunction isCollision(rect1, rect2) {\n  return (\n    rect1.left < rect2.right &&\n    rect1.top < rect2.bottom &&\n    rect1.right > rect2.left &&\n    rect1.bottom > rect2.top\n  );\n}\n\nfunction updateSpeedScale(delta) {\n  speedScale += delta * SPEED_SCALE_INCREASE;\n}\n\nfunction calculateNextMilestone(currentMilestone) {\n  // You can customize the growth rate based on your requirements\n  const growthRate = 1.5; // Adjust this as needed\n  return Math.floor(currentMilestone * growthRate);\n}\n\nfunction updateScore(delta) {\n  score += delta * 0.01;\n  scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n  if (\n    score > highScoreElem.textContent &&\n    !hasBeatenScore &&\n    highScoreElem.textContent !== '000000'\n  ) {\n    soundController.beatScore.play();\n    hasBeatenScore = true;\n  }\n  if (score > milestone) {\n    createOneUpText();\n    let currentLives = parseInt(livesElem.textContent, 10);\n    currentLives += 1;\n    livesElem.textContent = currentLives;\n    milestone = calculateNextMilestone(milestone);\n    console.log(milestone);\n  }\n}\n\nfunction handleCheckIfHighScore(score) {\n  if (score > highScoreElem.textContent) {\n    highScoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n    localStorage.setItem('lion-high-score', highScoreElem.textContent);\n    handleCheckLeaderboardHighScore(highScoreElem.textContent);\n  }\n}\n\nfunction setUpElements() {\n  setupGround();\n  setupGroundLayerTwo();\n  setupGroundLayerThree();\n  setupDino();\n  setupCactus();\n  setupMultiplier();\n  setupCoin();\n}\n\nfunction handleStart() {\n  worldElem.setAttribute('transition-style', 'in:circle:center');\n  lastTime = null;\n  hasBeatenScore = false;\n  speedScale = 0.9;\n  score = 0;\n  multiplierRatio = 1;\n  setUpElements();\n  dinoElem.classList.remove('leap');\n  currentMultiplierElem.textContent = multiplierRatio;\n  livesElem.textContent = 2;\n  startScreenElem.classList.add('hide');\n  endScreenElem.classList.add('hide');\n  // Get the container element where the ticker items will be appended\n  const tickerData = [\n    {\n      username: 'bap1',\n      score: 'start',\n    },\n    { username: 'b4p2', score: '323451' },\n    { username: 'fgp3', score: '331451' },\n    { username: 'agf4', score: '131451' },\n    {\n      username: 'bap5',\n      score: '353451',\n    },\n    { username: 'b4p6', score: '323451' },\n    { username: 'fgp', score: '331451' },\n    {\n      username: 'bap7',\n      score: '353451',\n    },\n    { username: 'b4p8', score: '323451' },\n    { username: 'fgp9', score: '331451' },\n    { username: 'agf10', score: '131451' },\n    {\n      username: 'bap11',\n      score: '353451',\n    },\n    { username: 'b4p12', score: '323451' },\n    { username: 'fgp13', score: 'end' },\n  ];\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem2.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem2.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem3.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem3.appendChild(tickerDivider);\n    }\n  });\n  // tickerContainerElem.classList.add('hide-element');\n  // tickerContainerElem.classList.remove('show-element');\n\n  window.requestAnimationFrame(update);\n}\n\nfunction handleCheckLeaderboardHighScore(score) {\n  const users = getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n  });\n}\n\nhandleCheckLeaderboardHighScore('90013');\n\nasync function handleSubmitNewScore() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  //check for validation errors and update error message accordingly\n  if (!validateInput() || !userInput) {\n    scoreErrorMessageElem.textContent = 'Enter a valid name!';\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  }\n\n  const scoreNewHighScoreElem = document.querySelector(\n    '[data-score-new-high-score]'\n  );\n  const res = await handleNewHighScore(\n    userInput,\n    scoreNewHighScoreElem.textContent\n  );\n\n  //check if user already exists from res and update error message accordingly, else submit new score\n  if (res === 'user already exists') {\n    scoreErrorMessageElem.textContent = res;\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  } else {\n    scoreErrorMessageElem.classList.add('hide');\n  }\n}\n\ndocument.addEventListener('click', function (event) {\n  const shareContainer = document.getElementById('share-container');\n  const shareButton = document.getElementById('shareButton');\n\n  if (\n    !shareContainer.contains(event.target) &&\n    !shareButton.contains(event.target)\n  ) {\n    shareContainer.classList.remove('show-share-container');\n  }\n});\n\nfunction handleOpenShareContainer() {\n  const shareContainer = document.getElementById('share-container');\n  shareContainer.classList.add('show-share-container');\n}\n\nif (document.getElementById('submit-button')) {\n  document\n    .getElementById('submit-button')\n    .addEventListener('click', handleSubmitNewScore);\n}\n\ndocument\n  .getElementById('closeLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('toggleLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('shareButton')\n  .addEventListener('click', handleOpenShareContainer);\n\nlet showLeaderboard = false;\n\nlet loading;\nfunction stopLoading() {\n  loading = false;\n}\n\nfunction handleToggleLeaderboard() {\n  const leaderboardContent = document.getElementById('leaderboard-content');\n\n  if (!showLeaderboard) {\n    leaderboardContent.classList.remove('flicker-opacity-off');\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    worldElem.setAttribute('transition-style', 'out:wipe:right');\n    const randomTimeout = Math.random() * (2800 - 1500) + 1500; // Random timeout between 1500ms and 2800ms\n    setTimeout(() => {\n      stopLoading();\n      scrollableTableElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.add('show-element');\n      leaderboardContent.classList.add('translateX-right-to-left');\n      scrollableTableElem.classList.remove('hide-element');\n    }, randomTimeout);\n  } else {\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    scrollableTableElem.setAttribute('transition-style', 'out:wipe:right');\n    leaderboardContent.classList.add('flicker-opacity-off');\n    setTimeout(() => {\n      stopLoading();\n      worldElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.remove('show-element');\n      scrollableTableElem.classList.add('hide-element');\n    }, 1500);\n  }\n}\n\nfunction runTypeLetters() {\n  if (!loading) {\n    return;\n  }\n  loadingTextElem.textContent = '';\n  typeLettersAny(0, '...', loadingTextElem, 120);\n  const rerunDelay = 2700;\n  setTimeout(runTypeLetters, rerunDelay);\n}\n\nfunction handleLose() {\n  gameOverTextElem.textContent = '';\n  // tickerContainerElem.classList.add('show-element');\n  // tickerContainerElem.classList.remove('hide-element');\n  handleCheckIfHighScore(score);\n  soundController.die.play();\n  setDinoLose();\n  setTimeout(() => {\n    document.addEventListener('keydown', handleStart, { once: true });\n    document.addEventListener('touchstart', handleStart, { once: true });\n    endScreenElem.classList.remove('hide');\n  }, 100);\n  setTimeout(() => {\n    typeLetters(0);\n  }, 1500);\n}\n\nfunction setPixelToWorldScale() {\n  let worldToPixelScale;\n  if (window.innerWidth / window.innerHeight < WORLD_WIDTH / WORLD_HEIGHT) {\n    worldToPixelScale = window.innerWidth / WORLD_WIDTH;\n  } else {\n    worldToPixelScale = window.innerHeight / WORLD_HEIGHT;\n  }\n\n  worldElem.style.width = `${WORLD_WIDTH * worldToPixelScale}px`;\n  worldElem.style.height = `${WORLD_HEIGHT * worldToPixelScale}px`;\n}\n\nfunction handleOrientationChange() {\n  var blackScreen = document.getElementById('blackScreen');\n\n  if ((isMobile() && window.orientation === 0) || window.orientation === 180) {\n    // Portrait orientation on mobile\n    blackScreen.style.display = 'flex';\n  } else {\n    // Hide black screen in other cases\n    blackScreen.style.display = 'none';\n  }\n}\n\nfunction isMobile() {\n  return /Mobi|Android/i.test(navigator.userAgent);\n}\n\n// Initial check\nhandleOrientationChange();\n\n// Listen for orientation changes\nwindow.addEventListener('orientationchange', handleOrientationChange);\n\nconst snow = {\n  el: '#snow',\n  density: 12500, // higher = fewer bits\n  maxHSpeed: 1, // How much do you want them to move horizontally\n  minFallSpeed: 0.5,\n  canvas: null,\n  ctx: null,\n  particles: [],\n  colors: [],\n  mp: 1,\n  quit: false,\n  init() {\n    this.canvas = document.querySelector(this.el);\n    this.ctx = this.canvas.getContext('2d');\n    this.reset();\n    requestAnimationFrame(this.render.bind(this));\n    window.addEventListener('resize', this.reset.bind(this));\n  },\n  reset() {\n    this.w = window.innerWidth;\n    this.h = window.innerHeight;\n    this.canvas.width = this.w;\n    this.canvas.height = this.h;\n    this.particles = [];\n    this.mp = Math.ceil((this.w * this.h) / this.density);\n    for (let i = 0; i < this.mp; i++) {\n      let size = Math.random() * 1.7 + 3;\n      this.particles.push({\n        x: Math.random() * this.w, //x-coordinate\n        y: Math.random() * this.h, //y-coordinate\n        w: size,\n        h: size,\n        vy: this.minFallSpeed + Math.random(), //density\n        vx: Math.random() * this.maxHSpeed - this.maxHSpeed / 2,\n        fill: '#ffffff',\n        s: Math.random() * 0.2 - 0.1,\n      });\n    }\n  },\n\n  render() {\n    this.ctx.clearRect(0, 0, this.w, this.h);\n    this.particles.forEach((p, i) => {\n      p.y += p.vy;\n      p.x += p.vx;\n      this.ctx.fillStyle = p.fill;\n      this.ctx.fillRect(p.x, p.y, p.w, p.h);\n      if (p.x > this.w + 5 || p.x < -5 || p.y > this.h) {\n        p.x = Math.random() * this.w;\n        p.y = -10;\n      }\n    });\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.render.bind(this));\n  },\n  destroy() {\n    this.quit = true;\n  },\n};\n\nsnow.init();\n\nconst textToType = 'Game Over';\n\nfunction typeLetters(index) {\n  if (index < textToType.length) {\n    gameOverTextElem.textContent += textToType.charAt(index);\n    setTimeout(() => typeLetters(index + 1), 200); // Adjust the delay as needed\n  } else {\n    gameOverIconElem.classList.remove('hide-element');\n    gameOverIconElem.classList.add('show-element');\n  }\n}\n\nfunction typeLettersAny(index, text, elem, timeout) {\n  if (index < text.length) {\n    elem.innerHTML += `<span>${text.charAt(index)}</span>`;\n    setTimeout(() => {\n      Array.from(elem.children).forEach((span, index) => {\n        setTimeout(() => {\n          span.classList.add('wavy');\n        }, index * 80);\n      });\n      typeLettersAny(index + 1, text, elem, timeout);\n    }, 250); // Adjust the delay as needed\n  } else {\n    elem.classList.remove('hide-element');\n    elem.classList.add('show-element');\n  }\n}\n"]}