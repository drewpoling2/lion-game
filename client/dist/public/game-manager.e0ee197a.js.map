{"version":3,"sources":["../utility/updateCustomProperty.js","../elements/ground.js","../elements/groundLayerTwo.js","../elements/groundLayerThree.js","../node_modules/howler/dist/howler.js","../utility/sound-controller.js","../elements/dino.js","../elements/cactus.js","../../../server/common/errors.ts","../apis.js","../elements/leaderboard.js","../utility/validate-input.js","../elements/score-multiplier.js","../elements/coin.js","../game-manager.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["getCustomProperty","elem","prop","parseFloat","getComputedStyle","getPropertyValue","setCustomProperty","value","style","setProperty","incrementCustomProperty","inc","_updateCustomProperty","require","SPEED","groundElems","document","querySelectorAll","setupGround","updateGround","delta","speedScale","forEach","ground","groundLayerTwoElems","setupGroundLayerTwo","updateGroundLayerTwo","groundLayerThreeElems","setupGroundLayerThree","updateGroundLayerThree","_howler","soundController","exports","die","Howl","src","volume","jump","beatScore","pickupCoin","takeDamage","_Jump","_interopRequireDefault","_Jump2","_Jump3","_Run","_Run2","_Run3","_Run4","_Run5","_Run6","_soundController","obj","__esModule","default","dinoElem","querySelector","JUMP_SPEED","DOUBLE_JUMP_SPEED","GRAVITY","DINO_FRAME_COUNT","JUMP_FRAME_COUNT","FRAME_TIME","BOTTOM_ANCHOR","isJumping","canDoubleJump","jumpCount","dinoFrame","currentFrameTime","yVelocity","jumpAnimationInProgress","isMobileDevice","test","navigator","userAgent","setupDino","removeEventListener","onJump","addEventListener","onDive","updateDino","handleRun","handleJump","handleDive","getDinoRect","getBoundingClientRect","setDinoLose","lionLoseImg","classList","add","remove","spotlight","getElementById","startJump","lionJumpImg1","setTimeout","lionJumpImg2","lionJumpImg3","endJump","lionRunImg1","lionRunImg2","lionRunImg3","lionRunImg4","lionRunImg5","lionRunImg6","e","code","type","play","DIVE_SPEED","isDiving","_BushTree","_RoundTree","_PineTree","_SnowballSmall","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","iter","len","arr2","cactiPositions","CACTUS_INTERVAL_MIN","CACTUS_INTERVAL_MAX","worldElem","nextCactusTime","setupCactus","cactus","isPositionOccupied","position","includes","generateRandomCacti","minCacti","maxCacti","numberOfCacti","randomNumberBetween","newPosition","push","createCactus","updateCactus","getCactusRects","map","cactusImages","tree1","weight","tree2","tree3","snowball","totalWeight","reduce","sum","image","randomWeight","Math","random","cumulativeWeight","selectedImage","_iterator","_step","createElement","dataset","concat","append","min","max","floor","_errors","_typeof","_regeneratorRuntime","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","getAllHighScoreUsers","_ref","_callee","response","_callee$","_context","fetch","ok","status","json","t0","console","log","handleDeleteEntry","_ref2","_callee2","entryField","errorData","_callee2$","_context2","headers","UserErrors","NO_USER_FOUND","alert","_x","handleSortAndDeleteLastEntry","_ref3","_callee3","_callee3$","_context3","data","sortedData","users","sort","b","parseInt","score","username","handleNewHighScore","_ref4","_callee4","_callee4$","_context4","body","JSON","stringify","USERNAME_ALREADY_EXISTS","_x2","_x3","checkIfNewHighScore","_ref5","_callee5","_callee5$","_context5","_x4","_apis","createLeaderboard","leaderboardElem","personalBestLvl","personalBestCombo","personalBestScoreElem","storedPersonalBestLvl","localStorage","getItem","storedPersonalBestCombo","storedPersonalBestScore","textContent","getSuffix","number","lastDigit","item","index","rowElement","rankCell","indexSuffix","appendChild","scoreCell","nameCell","badWordsArray","checkForBadWords","input","word","validateInput","userInput","MULTIPLIER_INTERVAL_MIN","MULTIPLIER_INTERVAL_MAX","nextMultiplierTime","setupMultiplier","multiplier","updateMultiplier","createMultipliers","getMultiplierRects","id","rect","getRandomKeyWeighted","probabilities","randomValue","cumulativeProbability","multiplierRatios","x2","x5","x10","_dino","coinPositions","COIN_INTERVAL_MIN","COIN_INTERVAL_MAX","nextCoinTime","setupCoin","coin","updateCoin","dinoRect","coinRect","distance","sqrt","pow","x","locked","angle","atan2","speed","deltaX","cos","deltaY","sin","createCoins","getCoinRects","collectableOptions","points","selectedCollectable","element","initialKeyframe","getRandomKeyframe","animationDelay","_ground","_groundLayerTwo","_groundLayerThree","_cactus","_leaderboard","_validateInput","_scoreMultiplier","_coin","_SpeakerOff","_SpeakerOn","_Pause","_Play","_Redo","_ForegroundTrees","WORLD_WIDTH","WORLD_HEIGHT","SPEED_SCALE_INCREASE","multiplierRatio","scoreElem","highScoreElem","startScreenElem","endScreenElem","gameOverTextElem","gameOverIconElem","scoreMultiplierElem","scoreNewHighScoreElem","scoreErrorMessageElem","multiplierTimerElem","tickerElem","tickerElem2","tickerElem3","livesElem","scrollableTableElem","currentMultiplierElem","plusPointsElem","tickerContainerElem","loadingTextElem","setPixelToWorldScale","window","lastTime","collisionOccurred","milestone","padStart","hasBeatenScore","isPaused","playerImmunity","immunityDuration","pauseIconButton","togglePause","playImg","pauseImg","requestAnimationFrame","update","shareContainer","shareButton","copyCurrentLink","location","href","select","execCommand","removeChild","pauseButton","blur","setPlayerImmunity","updateElements","time","updateSpeedScale","updateScore","checkLose","handleLose","checkMultiplierCollision","checkCoinCollision","createOneUpText","newElement","left","offsetLeft","top","parentNode","insertBefore","multiplierTimer","timerInterval","startMultiplierTimer","clearInterval","setInterval","some","isCollision","duration","updateInterval","randomArc","randomXEnd","documentElement","calculateFontSize","coinElement","addPickupText","text","pickupElement","_pickupElement$datase","offsetTop","updateScoreWithPoints","fontSize","initialScore","increments","ceil","incrementAmount","intervalId","isEnemyAndPlayerCollision","setAttribute","currentLives","muteButton","soundControllerMuted","muteIconButton","mute","muteImg","unmuteImg","rect1","rect2","right","bottom","calculateNextMilestone","currentMilestone","growthRate","handleCheckIfHighScore","setItem","handleCheckLeaderboardHighScore","setUpElements","handleStart","tickerData","tickerItem","innerHTML","tickerDivider","handleSubmitNewScore","_handleSubmitNewScore","res","event","contains","target","handleOpenShareContainer","currentPage","handleOpenWiki","underlineCurrentPageButton","handleOpenControls","handleOpenLeaderboard","page","oldPage","currentButton","pageButtons","newPage","newButton","handleToggleLeaderboard","showLeaderboard","loading","stopLoading","leaderboardContent","runTypeLetters","randomTimeout","typeLettersAny","rerunDelay","once","typeLetters","worldToPixelScale","innerWidth","innerHeight","width","height","handleOrientationChange","blackScreen","isMobile","orientation","display","snow","el","density","maxHSpeed","minFallSpeed","canvas","ctx","particles","colors","mp","quit","init","getContext","render","bind","w","size","vy","vx","fill","_this","clearRect","fillStyle","fillRect","destroy","textToType","timeout","children","span","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","k","dep","Function","deps","cached","cache","cb"],"mappings":"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","file":"game-manager.e0ee197a.js","sourceRoot":"../../src/public","sourcesContent":["export function getCustomProperty(elem, prop) {\n  return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0;\n}\n\nexport function setCustomProperty(elem, prop, value) {\n  elem.style.setProperty(prop, value);\n}\n\nexport function incrementCustomProperty(elem, prop, inc) {\n  setCustomProperty(elem, prop, getCustomProperty(elem, prop) + inc);\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.05;\nconst groundElems = document.querySelectorAll('[data-ground]');\n\nexport function setupGround() {\n  setCustomProperty(groundElems[0], '--left', 0);\n  setCustomProperty(groundElems[1], '--left', 250);\n}\n\nexport function updateGround(delta, speedScale) {\n  groundElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -250) {\n      incrementCustomProperty(ground, '--left', 500);\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.022;\nconst groundLayerTwoElems = document.querySelectorAll(\n  '[data-ground-layer-two]'\n);\n\nexport function setupGroundLayerTwo() {\n  setCustomProperty(groundLayerTwoElems[0], '--left', 0);\n  setCustomProperty(groundLayerTwoElems[1], '--left', 260);\n}\n\nexport function updateGroundLayerTwo(delta, speedScale) {\n  groundLayerTwoElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -260) {\n      incrementCustomProperty(ground, '--left', 520);\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.007;\nconst groundLayerThreeElems = document.querySelectorAll(\n  '[data-ground-layer-three]'\n);\n\nexport function setupGroundLayerThree() {\n  setCustomProperty(groundLayerThreeElems[0], '--left', 0);\n  setCustomProperty(groundLayerThreeElems[1], '--left', 200);\n}\n\nexport function updateGroundLayerThree(delta, speedScale) {\n  groundLayerThreeElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -200) {\n      incrementCustomProperty(ground, '--left', 400);\n    }\n  });\n}\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { Howl, Howler } from 'howler';\nexport const soundController = {\n  die: new Howl({\n    src: ['sounds/die.wav'],\n    volume: 0,\n  }),\n  jump: new Howl({\n    src: ['sounds/jump.wav'],\n    volume: 0,\n  }),\n  beatScore: new Howl({\n    src: ['sounds/beatScore.wav'],\n    volume: 0,\n  }),\n  pickupCoin: new Howl({\n    src: ['sounds/pickupCoin.wav'],\n    volume: 0,\n  }),\n  takeDamage: new Howl({\n    src: ['sounds/takeDamage.wav'],\n    volume: 0,\n  }),\n};\n","import {\n  incrementCustomProperty,\n  setCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport lionJumpImg1 from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionJumpImg2 from '../public/imgs/nittany-lion/jump-animation/Jump-2.png';\nimport lionJumpImg3 from '../public/imgs/nittany-lion/jump-animation/Jump-3.png';\nimport lionLoseImg from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionRunImg1 from '../public/imgs/nittany-lion/run-cycle/Run-1.png';\nimport lionRunImg2 from '../public/imgs/nittany-lion/run-cycle/Run-2.png';\nimport lionRunImg3 from '../public/imgs/nittany-lion/run-cycle/Run-3.png';\nimport lionRunImg4 from '../public/imgs/nittany-lion/run-cycle/Run-4.png';\nimport lionRunImg5 from '../public/imgs/nittany-lion/run-cycle/Run-5.png';\nimport lionRunImg6 from '../public/imgs/nittany-lion/run-cycle/Run-6.png';\nimport { soundController } from '../utility/sound-controller.js';\n\nconst dinoElem = document.querySelector('[data-dino]');\nconst JUMP_SPEED = 0.21;\nconst DOUBLE_JUMP_SPEED = 0.23; // Adjust this as needed\nconst GRAVITY = 0.00075;\nconst DINO_FRAME_COUNT = 6;\nconst JUMP_FRAME_COUNT = 3;\nconst FRAME_TIME = 100;\nconst BOTTOM_ANCHOR = 17.5;\n\nlet isJumping;\nlet canDoubleJump;\nlet jumpCount;\nlet dinoFrame;\nlet currentFrameTime;\nlet yVelocity;\nlet jumpAnimationInProgress;\n\nfunction isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nexport function setupDino() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n  canDoubleJump = true;\n  jumpCount = 0;\n  dinoFrame = 0;\n  currentFrameTime = 0;\n  yVelocity = 0;\n  setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n\n  // Function to check if the device is a mobile device\n  if (isMobileDevice()) {\n    document.removeEventListener('touchstart', onJump);\n    document.addEventListener('touchstart', onJump);\n    document.addEventListener('touchstart', onDive);\n  } else {\n    document.removeEventListener('keydown', onJump);\n    document.addEventListener('keydown', onJump);\n    document.addEventListener('keydown', onDive);\n  }\n}\n\nexport function updateDino(delta, speedScale) {\n  handleRun(delta, speedScale);\n  handleJump(delta);\n  handleDive(delta);\n}\n\nexport function getDinoRect() {\n  return dinoElem.getBoundingClientRect();\n}\n\nexport function setDinoLose() {\n  dinoElem.src = lionLoseImg;\n  dinoElem.classList.add('leap');\n  dinoElem.classList.remove('flash-animation');\n  const spotlight = document.getElementById('spotlight');\n  spotlight.classList.add('close-spotlight');\n}\n\nfunction startJump() {\n  if (!jumpAnimationInProgress) {\n    jumpAnimationInProgress = true;\n    dinoElem.src = lionJumpImg1;\n\n    setTimeout(function () {\n      dinoElem.src = lionJumpImg2;\n    }, 320); // Adjust the delay as needed\n\n    setTimeout(function () {\n      dinoElem.src = lionJumpImg3;\n    }, 400); // Adjust the delay as needed\n  }\n}\n\nfunction endJump() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n}\n\nfunction handleRun(delta, speedScale) {\n  if (isJumping) {\n    startJump();\n    return;\n  }\n\n  if (currentFrameTime >= FRAME_TIME) {\n    dinoFrame = (dinoFrame + 1) % DINO_FRAME_COUNT;\n\n    // Use a switch statement to set the image source based on the current frame\n    switch (dinoFrame) {\n      case 0:\n        dinoElem.src = lionRunImg1;\n        break;\n      case 1:\n        dinoElem.src = lionRunImg2;\n        break;\n      case 2:\n        dinoElem.src = lionRunImg3;\n        break;\n      case 3:\n        dinoElem.src = lionRunImg4;\n        break;\n      case 4:\n        dinoElem.src = lionRunImg5;\n        break;\n      case 5:\n        dinoElem.src = lionRunImg6;\n        break;\n      // Add more cases if you have more frames\n    }\n\n    currentFrameTime -= FRAME_TIME;\n  }\n  currentFrameTime += delta * speedScale;\n}\n\nfunction handleJump(delta) {\n  if (!isJumping) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    endJump();\n    canDoubleJump = true;\n    jumpCount = 0;\n  }\n\n  if (jumpCount === 1 && canDoubleJump) {\n    yVelocity = DOUBLE_JUMP_SPEED;\n    canDoubleJump = false;\n  }\n\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onJump(e) {\n  if (\n    (e.code !== 'Space' && e.type !== 'touchstart') ||\n    (isJumping && jumpCount >= 2)\n  )\n    return;\n  endJump();\n  startJump();\n  soundController.jump.play();\n  yVelocity = JUMP_SPEED;\n  isJumping = true;\n  jumpCount++;\n}\n\nconst DIVE_SPEED = 0.2; // Adjust the dive speed as needed\nlet isDiving = false;\n\nfunction handleDive(delta) {\n  if (!isDiving) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    isDiving = false;\n    jumpCount = 0;\n  }\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onDive(e) {\n  if ((e.code !== 'ArrowDown' && e.type !== 'touchstart') || isDiving) return;\n\n  yVelocity = -DIVE_SPEED; // Negative value for diving down\n  isDiving = true;\n\n  // Add any additional logic you need for the dive action\n\n  // Optional: You might want to reset isJumping and jumpCount here if needed\n  isJumping = false;\n  jumpCount = 0;\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport tree1 from '../public/imgs/trees/Bush-Tree.png';\nimport tree2 from '../public/imgs/trees/Round-Tree.png';\nimport tree3 from '../public/imgs/trees/Pine-Tree.png';\nimport snowball from '../public/imgs/Obstacles/Snowball-Small.png';\nconst cactiPositions = [];\n\nconst SPEED = 0.05;\nconst CACTUS_INTERVAL_MIN = 500;\nconst CACTUS_INTERVAL_MAX = 2000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCactusTime;\nexport function setupCactus() {\n  nextCactusTime = CACTUS_INTERVAL_MIN;\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    cactus.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return cactiPositions.includes(position);\n}\n\nfunction generateRandomCacti() {\n  const minCacti = 1;\n  const maxCacti = 3; // Adjust the range as needed\n\n  const numberOfCacti = randomNumberBetween(minCacti, maxCacti);\n\n  for (let i = 0; i < numberOfCacti; i++) {\n    let newPosition;\n\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    cactiPositions.push(newPosition);\n    createCactus(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  cactiPositions.length = 0;\n}\n\nexport function updateCactus(delta, speedScale) {\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    incrementCustomProperty(cactus, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(cactus, '--left') <= -100) {\n      cactus.remove();\n    }\n  });\n\n  if (nextCactusTime <= 0) {\n    generateRandomCacti();\n    nextCactusTime =\n      randomNumberBetween(CACTUS_INTERVAL_MIN, CACTUS_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextCactusTime -= delta;\n}\n\nexport function getCactusRects() {\n  return [...document.querySelectorAll('[data-cactus]')].map((cactus) => {\n    return cactus.getBoundingClientRect();\n  });\n}\n\n// Array of possible cactus images with associated weights\nconst cactusImages = [\n  { src: tree1, weight: 5 },\n  { src: tree2, weight: 1 },\n  { src: tree3, weight: 2 },\n  { src: snowball, weight: 3 },\n  // Add more image sources with corresponding weights\n];\n\nfunction createCactus(newPosition) {\n  // Calculate the total weight\n  const totalWeight = cactusImages.reduce(\n    (sum, image) => sum + image.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random cactus image based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedImage;\n  for (const image of cactusImages) {\n    cumulativeWeight += image.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedImage = image;\n      break;\n    }\n  }\n  const cactus = document.createElement('img');\n  cactus.dataset.cactus = true;\n  cactus.src = selectedImage.src;\n  cactus.classList.add('cactus', 'game-element');\n  setCustomProperty(cactus, '--left', newPosition);\n  setCustomProperty(cactus, 'height', `${randomNumberBetween(13, 17)}%`);\n\n  worldElem.append(cactus);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export enum UserErrors {\n  NO_USER_FOUND = 'no-user-found',\n  USERNAME_ALREADY_EXISTS = 'user already exists',\n}\nexport enum ServerErrors {\n  SERVER_ERROR = 'server-error',\n}\n","import { UserErrors } from '../../server/common/errors';\n\n//gets all users from collection\nconst getAllHighScoreUsers = async () => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/users');\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log('getAllHighScoreUsers error', error);\n  }\n};\n\n//insertions instead of delete\n\n//deletes entry by field\nconst handleDeleteEntry = async (entryField) => {\n  try {\n    const response = await fetch(\n      `http://localhost:3001/scores/delete-entry/${entryField}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.NO_USER_FOUND) {\n        alert('ERROR: No entry found with the specified ID');\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleDeleteEntry error', error);\n  }\n};\n\n//sorts all collection data in descending order by score, and deletes last entry by username\nconst handleSortAndDeleteLastEntry = async () => {\n  await getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n    handleDeleteEntry(sortedData[sortedData.length - 1].username);\n  });\n};\n\n//adds new high score\nconst handleNewHighScore = async (username, score) => {\n  try {\n    const response = await fetch('http://localhost:3001/scores/new-high', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        score: score,\n      }),\n    });\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === UserErrors.USERNAME_ALREADY_EXISTS) {\n        return UserErrors.USERNAME_ALREADY_EXISTS;\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    } else {\n      await handleSortAndDeleteLastEntry();\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleNewHighScore error', error);\n  }\n};\n\nconst checkIfNewHighScore = async (score) => {};\n\nexport { handleNewHighScore, getAllHighScoreUsers, checkIfNewHighScore };\n","import { getAllHighScoreUsers } from '../apis';\n\nexport function createLeaderboard(leaderboardElem) {\n  //for right sidebar\n  const personalBestLvl = document.querySelector('[data-personal-best-lvl]');\n  const personalBestCombo = document.querySelector(\n    '[data-personal-best-combo]'\n  );\n  const personalBestScoreElem = document.querySelector(\n    '[data-personal-best-score]'\n  );\n\n  // Retrieve values from local storage\n  const storedPersonalBestLvl = localStorage.getItem('lion-best-lvl');\n  const storedPersonalBestCombo = localStorage.getItem('lion-best-combo');\n  const storedPersonalBestScore = localStorage.getItem('lion-high-score');\n\n  // Check if values exist in local storage before updating the elements\n  if (storedPersonalBestLvl !== null) {\n    personalBestLvl.textContent = storedPersonalBestLvl;\n  }\n\n  if (storedPersonalBestCombo !== null) {\n    personalBestCombo.textContent = storedPersonalBestCombo;\n  }\n\n  if (storedPersonalBestScore !== null) {\n    personalBestScoreElem.textContent = storedPersonalBestScore;\n  }\n\n  getAllHighScoreUsers().then((data) => {\n    function getSuffix(number) {\n      const lastDigit = number % 10;\n      if (number === 11 || number === 12 || number === 13) {\n        return 'th';\n      } else if (lastDigit === 1) {\n        return 'st';\n      } else if (lastDigit === 2) {\n        return 'nd';\n      } else if (lastDigit === 3) {\n        return 'rd';\n      } else {\n        return 'th';\n      }\n    }\n\n    // Map data to HTML elements and append to container\n    data.users.forEach((item, index) => {\n      const rowElement = document.createElement('tr');\n      rowElement.classList.add('leaderboard-row');\n\n      // Create and append the \"Rank\" cell\n      const rankCell = document.createElement('td');\n      rankCell.classList.add('leaderboard-rank-item');\n      const indexSuffix = getSuffix(index + 1);\n      rankCell.textContent = `${index + 1}${indexSuffix}`;\n      rowElement.appendChild(rankCell);\n\n      // Create and append the \"Score\" cell\n      const scoreCell = document.createElement('td');\n      scoreCell.classList.add('leaderboard-score-item');\n      scoreCell.textContent = `${item.score}`;\n      rowElement.appendChild(scoreCell);\n\n      // Create and append the \"Name\" cell\n      const nameCell = document.createElement('td');\n      nameCell.classList.add('leaderboard-name-item');\n      nameCell.textContent = `${item.username}`;\n      rowElement.appendChild(nameCell);\n\n      // Append the entire row to the body\n      leaderboardElem.appendChild(rowElement);\n    });\n  });\n}\n","const badWordsArray = [\n  'ass',\n  'fuc',\n  'fuk',\n  'fuq',\n  'fux',\n  'fck',\n  'coc',\n  'cok',\n  'coq',\n  'kox',\n  'koc',\n  'kok',\n  'koq',\n  'cac',\n  'cak',\n  'caq',\n  'kac',\n  'kak',\n  'kaq',\n  'dic',\n  'dik',\n  'diq',\n  'dix',\n  'dck',\n  'pns',\n  'psy',\n  'fag',\n  'fgt',\n  'ngr',\n  'nig',\n  'cnt',\n  'knt',\n  'sht',\n  'dsh',\n  'twt',\n  'bch',\n  'cum',\n  'clt',\n  'kum',\n  'klt',\n  'suc',\n  'suk',\n  'suq',\n  'sck',\n  'lic',\n  'lik',\n  'liq',\n  'lck',\n  'jiz',\n  'jzz',\n  'gay',\n  'gey',\n  'gei',\n  'gai',\n  'vag',\n  'vgn',\n  'sjv',\n  'fap',\n  'prn',\n  'jew',\n  'joo',\n  'gvr',\n  'pus',\n  'pis',\n  'pss',\n  'snm',\n  'tit',\n  'fku',\n  'fcu',\n  'fqu',\n  'hor',\n  'slt',\n  'jap',\n  'wap',\n  'wop',\n  'kik',\n  'kyk',\n  'kyc',\n  'kyq',\n  'dyk',\n  'dyq',\n  'dyc',\n  'kkk',\n  'jyz',\n  'prk',\n  'prc',\n  'prq',\n  'mic',\n  'mik',\n  'miq',\n  'myc',\n  'myk',\n  'myq',\n  'guc',\n  'guk',\n  'guq',\n  'giz',\n  'gzz',\n  'sex',\n  'sxx',\n  'sxi',\n  'sxe',\n  'sxy',\n  'xxx',\n  'wac',\n  'wak',\n  'waq',\n  'wck',\n  'pot',\n  'thc',\n  'vaj',\n  'vjn',\n  'nut',\n  'std',\n  'lsd',\n  'poo',\n  'azn',\n  'pcp',\n  'dmn',\n  'orl',\n  'anl',\n  'ans',\n  'muf',\n  'mff',\n  'phk',\n  'phc',\n  'phq',\n  'xtc',\n  'tok',\n  'toc',\n  'toq',\n  'mlf',\n  'rac',\n  'rak',\n  'raq',\n  'rck',\n  'sac',\n  'sak',\n  'saq',\n  'pms',\n  'nad',\n  'ndz',\n  'nds',\n  'wtf',\n  'sol',\n  'sob',\n  'fob',\n  'kys',\n];\n\nfunction checkForBadWords(input) {\n  for (const word of badWordsArray) {\n    if (input.includes(word)) {\n      return true; // bad word detected\n    }\n  }\n  return false; // No bad words detected\n}\n\nfunction validateInput() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  if (checkForBadWords(userInput)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport { validateInput };\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\n\nconst SPEED = 0.05;\nconst MULTIPLIER_INTERVAL_MIN = 2000;\nconst MULTIPLIER_INTERVAL_MAX = 4000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextMultiplierTime;\nexport function setupMultiplier() {\n  nextMultiplierTime = MULTIPLIER_INTERVAL_MIN;\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    multiplier.remove();\n  });\n}\n\nexport function updateMultiplier(delta, speedScale) {\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    incrementCustomProperty(\n      multiplier,\n      '--left',\n      delta * speedScale * SPEED * -1\n    );\n    if (getCustomProperty(multiplier, '--left') <= -100) {\n      multiplier.remove();\n    }\n  });\n\n  if (nextMultiplierTime <= 0) {\n    createMultipliers();\n    nextMultiplierTime =\n      randomNumberBetween(MULTIPLIER_INTERVAL_MIN, MULTIPLIER_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextMultiplierTime -= delta;\n}\n\nexport function getMultiplierRects() {\n  return [...document.querySelectorAll('[data-multiplier]')].map(\n    (multiplier) => {\n      return {\n        id: multiplier.id,\n        rect: multiplier.getBoundingClientRect(),\n        multiplier: multiplier.dataset.multiplier,\n      };\n    }\n  );\n}\n\nfunction getRandomKeyWeighted(obj) {\n  const keys = Object.keys(obj);\n  const probabilities = [0.7, 0.2, 0.1]; // Adjust probabilities as needed\n  const randomValue = Math.random();\n  let cumulativeProbability = 0;\n\n  for (let i = 0; i < keys.length; i++) {\n    cumulativeProbability += probabilities[i];\n    if (randomValue <= cumulativeProbability) {\n      return keys[i];\n    }\n  }\n\n  // Default case (fallback)\n  return keys[keys.length - 1];\n}\n\nfunction createMultipliers() {\n  const multiplier = document.createElement('div');\n  multiplier.dataset.multiplier =\n    multiplierRatios[getRandomKeyWeighted(multiplierRatios)];\n  multiplier.textContent = multiplier.dataset.multiplier;\n  multiplier.classList.add('multiplier', 'floating-item');\n  multiplier.id = Math.random().toString(16).slice(2);\n  setCustomProperty(multiplier, '--left', 100);\n  worldElem.append(multiplier);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst multiplierRatios = {\n  x2: 2,\n  x5: 5,\n  x10: 10,\n};\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport { getDinoRect } from './dino';\n\nconst coinPositions = [];\n\nconst SPEED = 0.05;\nconst COIN_INTERVAL_MIN = 75;\nconst COIN_INTERVAL_MAX = 1200;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCoinTime;\n\nexport function setupCoin() {\n  nextCoinTime = COIN_INTERVAL_MIN;\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    coin.remove();\n  });\n}\n\nexport function updateCoin(delta, speedScale) {\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    // Get positions of the dinosaur and coin\n    const dinoRect = getDinoRect();\n    const coinRect = coin.getBoundingClientRect();\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - coinRect.x, 2) +\n        Math.pow(dinoRect.y - coinRect.y, 2)\n    );\n\n    // If the distance is less than 40px, move the coin towards the dinosaur\n    if (coin.dataset.locked === 'true' || distance < 225) {\n      //lock the coin on the player\n      coin.dataset.locked = 'true';\n      const angle = Math.atan2(\n        dinoRect.y - coinRect.y,\n        dinoRect.x - coinRect.x\n      );\n      const speed = SPEED * delta * speedScale;\n\n      // Calculate incremental movement based on angle and speed\n      const deltaX = Math.cos(angle) * speed * 1.75;\n      const deltaY = Math.sin(angle) * speed * 1.75;\n\n      // Update coin position incrementally\n      incrementCustomProperty(coin, '--left', deltaX);\n      incrementCustomProperty(coin, '--bottom', deltaY * -1);\n    } else {\n      // Move the coin to the left if not close to the dinosaur\n      incrementCustomProperty(coin, '--left', delta * speedScale * SPEED * -1);\n    }\n\n    // Remove the coin if it goes off the screen\n    if (getCustomProperty(coin, '--left') <= -100) {\n      coin.remove();\n    }\n  });\n\n  if (nextCoinTime <= 0) {\n    createCoins();\n    nextCoinTime =\n      randomNumberBetween(COIN_INTERVAL_MIN, COIN_INTERVAL_MAX) / speedScale;\n  }\n  nextCoinTime -= delta;\n}\n\nexport function getCoinRects() {\n  return [...document.querySelectorAll('[data-coin]')].map((coin) => {\n    return {\n      id: coin.id,\n      rect: coin.getBoundingClientRect(),\n    };\n  });\n}\n\nconst collectableOptions = [\n  { type: 'gold-coin', weight: 0.3, points: 82 },\n  { type: 'red-gem', weight: 0.1, points: 325 },\n  { type: 'silver-coin', weight: 0.6, points: 46 },\n];\n\nfunction createCoins() {\n  // Calculate the total weight\n  const totalWeight = collectableOptions.reduce(\n    (sum, item) => sum + item.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random collectable based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedCollectable;\n  for (const item of collectableOptions) {\n    cumulativeWeight += item.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedCollectable = item;\n      break;\n    }\n  }\n\n  const element = document.createElement('div');\n  element.dataset.coin = true;\n  element.dataset.locked = 'false';\n  element.dataset.points = selectedCollectable.points;\n  element.classList.add(selectedCollectable.type, 'collectable', 'move-bottom');\n  element.id = Math.random().toString(16).slice(2);\n  setCustomProperty(element, '--left', 100);\n  const initialKeyframe = getRandomKeyframe();\n  element.style.animationDelay = `-${initialKeyframe}%`;\n  worldElem.append(element);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getRandomKeyframe() {\n  // Return a random number between 0 and 100 (percentage)\n  return Math.floor(Math.random() * 101);\n}\n","import { updateGround, setupGround } from './elements/ground.js';\nimport {\n  updateGroundLayerTwo,\n  setupGroundLayerTwo,\n} from './elements/groundLayerTwo';\nimport {\n  updateGroundLayerThree,\n  setupGroundLayerThree,\n} from './elements/groundLayerThree';\nimport {\n  updateDino,\n  setupDino,\n  getDinoRect,\n  setDinoLose,\n} from './elements/dino.js';\nimport {\n  updateCactus,\n  setupCactus,\n  getCactusRects,\n} from './elements/cactus.js';\nimport { createLeaderboard } from './elements/leaderboard.js';\nimport { soundController } from './utility/sound-controller.js';\nimport {\n  getAllHighScoreUsers,\n  handleNewHighScore,\n  handleSortAndDeleteLastEntry,\n} from './apis.js';\nimport { validateInput } from './utility/validate-input.js';\nimport {\n  setupMultiplier,\n  updateMultiplier,\n  getMultiplierRects,\n} from './elements/score-multiplier.js';\nimport {\n  setupCoin,\n  updateCoin,\n  getCoinRects,\n  getCoinRectsWithOuterRadius,\n} from './elements/coin.js';\nimport muteImg from './public/imgs/icons/Speaker-Off.png';\nimport unmuteImg from './public/imgs/icons/Speaker-On.png';\nimport pauseImg from './public/imgs/icons/Pause.png';\nimport playImg from './public/imgs/icons/Play.png';\nimport redoImg from './public/imgs/icons/Redo.png';\nimport foregroundImg from './public/imgs/backgrounds/Foreground-Trees.png';\nconst WORLD_WIDTH = 100;\nconst WORLD_HEIGHT = 45;\nconst SPEED_SCALE_INCREASE = 0.00001;\nlet multiplierRatio = 1;\nconst worldElem = document.querySelector('[data-world]');\nconst scoreElem = document.querySelector('[data-score]');\nconst highScoreElem = document.querySelector('[data-high-score]');\nconst startScreenElem = document.querySelector('[data-start-screen]');\nconst endScreenElem = document.querySelector('[data-game-over-screen]');\nconst gameOverTextElem = document.querySelector('[data-game-over-text]');\nconst gameOverIconElem = document.getElementById('game-over-icon');\nconst leaderboardElem = document.querySelector('[data-leaderboard-body]');\nconst scoreMultiplierElem = document.querySelector('[data-score-multiplier]');\nconst scoreNewHighScoreElem = document.querySelector(\n  '[data-score-new-high-score]'\n);\nconst scoreErrorMessageElem = document.querySelector(\n  '[data-score-error-message]'\n);\nconst multiplierTimerElem = document.querySelector('[data-multiplier-timer]');\nconst tickerElem = document.querySelector('[data-ticker]');\nconst tickerElem2 = document.querySelector('[data-ticker2]');\nconst tickerElem3 = document.querySelector('[data-ticker3]');\nconst livesElem = document.querySelector('[data-lives]');\nconst dinoElem = document.querySelector('[data-dino]');\nconst scrollableTableElem = document.querySelector('[data-scrollable-table]');\nconst currentMultiplierElem = document.querySelector(\n  '[data-current-multiplier]'\n);\nconst plusPointsElem = document.querySelector('[data-plus-points]');\nconst tickerContainerElem = document.querySelector('[data-ticker-container]');\nconst loadingTextElem = document.querySelector('[data-loading-text]');\n\n// const playAgainButtonElem = document.querySelector('[data-play-again]');\n\n// playAgainButtonElem.addEventListener('click', function () {\n//   handleStart(); // Add any other actions you want to perform on button click\n// });\nsetPixelToWorldScale();\ncreateLeaderboard(leaderboardElem);\n\nwindow.addEventListener('resize', setPixelToWorldScale);\n// document.addEventListener('keydown', handleStart, { once: true });\n// document.addEventListener('touchstart', handleStart, { once: true });\nlet lastTime;\nlet speedScale;\nlet score;\nlet collisionOccurred = false; // Flag to track collision\nlet milestone = 10000;\n//init highScore elem\nhighScoreElem.textContent = localStorage.getItem('lion-high-score')\n  ? localStorage.getItem('lion-high-score')\n  : Math.floor('0').toString().padStart(6, 0);\nlet hasBeatenScore = false;\nlet isPaused = false;\nlet playerImmunity = false;\nlet immunityDuration = 2000; // Example: 2000 milliseconds (2 seconds)\n// scrollableTableElem.classList.add('hide-element');\n// scrollableTableElem.style.display = 'none';\n// worldElem.setAttribute('transition-style', 'in:circle:center');\n// tickerContainerElem.classList.add('hide-element');\n// tickerContainerElem.classList.remove('show-element');\nconst pauseIconButton = document.getElementById('pause-icon-button');\n\n// Function to toggle the pause state\nfunction togglePause() {\n  isPaused = !isPaused;\n  if (isPaused) {\n    pauseIconButton.src = playImg;\n  } else {\n    pauseIconButton.src = pauseImg;\n    window.requestAnimationFrame(update);\n  }\n}\n\nconst shareContainer = document.getElementById('share-container');\nconst shareButton = document.getElementById('shareButton');\n\nshareContainer.addEventListener('mouseenter', () => {\n  shareButton.classList.add('transparent-background');\n});\n\nshareContainer.addEventListener('mouseleave', () => {\n  shareButton.classList.remove('transparent-background');\n});\n\nfunction copyCurrentLink() {\n  var input = document.createElement('input');\n  input.value = window.location.href;\n  document.body.appendChild(input);\n  input.select();\n  document.execCommand('copy');\n  document.body.removeChild(input);\n\n  // Change the button text to \"Copied!\"\n  document.getElementById('copy-link-button').textContent = 'Copied!';\n\n  // Change it back to \"Copy link\" after a delay (e.g., 2 seconds)\n  setTimeout(function () {\n    document.getElementById('copy-link-button').textContent = 'Copy link';\n  }, 2000);\n}\n\nif (document.getElementById('copy-link-button')) {\n  document\n    .getElementById('copy-link-button')\n    .addEventListener('click', copyCurrentLink);\n}\n\nconst pauseButton = document.getElementById('pauseButton');\npauseButton.addEventListener('click', function () {\n  togglePause();\n  pauseButton.blur();\n});\n\n// Function to set player immunity\nfunction setPlayerImmunity() {\n  playerImmunity = true;\n\n  // Reset player immunity after the specified duration\n  setTimeout(() => {\n    playerImmunity = false;\n  }, immunityDuration);\n}\n\nfunction updateElements() {}\n\nfunction update(time) {\n  if (isPaused) {\n    // Do nothing if the game is paused\n    return;\n  }\n\n  if (lastTime == null) {\n    lastTime = time;\n    window.requestAnimationFrame(update);\n    return;\n  }\n\n  // let delta = time - lastTime;\n  let delta = 30;\n  if (collisionOccurred) {\n    setPlayerImmunity();\n    togglePause();\n    setTimeout(() => {\n      collisionOccurred = false; // Reset the collision flag after the delay\n      togglePause();\n    }, 400);\n    return; // Pause the update during the delay\n  }\n\n  updateGround(delta, speedScale);\n  updateGroundLayerThree(delta, speedScale);\n  updateGroundLayerTwo(delta, speedScale);\n  updateDino(delta, speedScale);\n  updateCactus(delta, speedScale);\n  updateSpeedScale(delta);\n  updateScore(delta);\n  updateMultiplier(delta, speedScale);\n  updateCoin(delta, speedScale);\n  if (checkLose()) return handleLose();\n  if (checkMultiplierCollision());\n  if (checkCoinCollision());\n  lastTime = time;\n  window.requestAnimationFrame(update);\n}\n\nfunction createOneUpText() {\n  soundController.beatScore.play();\n\n  const newElement = document.createElement('div');\n  newElement.classList.add('one-up', 'sans');\n  newElement.style.position = 'absolute';\n  newElement.style.left = livesElem.offsetLeft + 'px';\n  newElement.style.top = '20%';\n  livesElem.parentNode.insertBefore(newElement, livesElem);\n  newElement.textContent = '1UP';\n  setTimeout(() => {\n    newElement.remove();\n  }, 600);\n  return true;\n}\n\nlet multiplierTimer = 5;\nlet timerInterval;\n\nfunction startMultiplierTimer() {\n  //reset the old timer\n  clearInterval(timerInterval);\n  multiplierTimer = 5;\n  multiplierTimerElem.textContent = multiplierTimer;\n\n  //start new interval\n  timerInterval = setInterval(() => {\n    multiplierTimer--;\n    if (multiplierTimer === 0) {\n      clearInterval(timerInterval);\n      multiplierTimerElem.textContent = '';\n      // Reset the timer and multiplier when the countdown ends\n      multiplierTimer = 5;\n      multiplierRatio = 1;\n      currentMultiplierElem.textContent = 1;\n    } else {\n      multiplierTimerElem.textContent = multiplierTimer;\n    }\n  }, 1000); // Update the timer every second (1000 milliseconds)\n}\n\nfunction checkMultiplierCollision() {\n  const dinoRect = getDinoRect();\n  getMultiplierRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      soundController.beatScore.play();\n      document.getElementById(element.id).remove();\n      clearInterval(timerInterval);\n      startMultiplierTimer();\n      // Multiply the existing multiplier by the newly collided multiplier\n      multiplierRatio *= parseInt(element.multiplier);\n      currentMultiplierElem.textContent = multiplierRatio;\n      return true;\n    }\n  });\n}\n\nconst duration = 1000;\nconst updateInterval = 50;\n\nfunction randomArc(element) {\n  // Set random horizontal movement values\n  const randomXEnd = Math.random() * 100 - 50; // Adjust the range based on your preference\n  document.documentElement.style.setProperty(\n    '--random-x-end',\n    randomXEnd + 'px'\n  );\n}\n\nfunction calculateFontSize(points) {\n  return Math.min(20 + points * 0.08, 46);\n}\n\nfunction checkCoinCollision() {\n  const dinoRect = getDinoRect();\n\n  getCoinRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const coinElement = document.getElementById(element.id);\n      // Create a pickup text element\n      console.log('picked up');\n      const newElement = document.createElement('div');\n      addPickupText(newElement, coinElement);\n      coinElement.remove();\n      setTimeout(() => {\n        newElement.remove();\n      }, 600);\n\n      // Remove the coin and update points\n      soundController.pickupCoin.play();\n      return true;\n    }\n  });\n}\n\nfunction addPickupText(text, pickupElement) {\n  text.classList.add('plus-points', 'sans');\n  text.style.position = 'absolute';\n  text.style.left = pickupElement.offsetLeft + 'px';\n  text.style.top = pickupElement.offsetTop - 70 + 'px';\n  randomArc(text);\n  pickupElement.parentNode.insertBefore(text, pickupElement);\n  const points = pickupElement?.dataset?.points * multiplierRatio;\n  updateScoreWithPoints(points);\n  const fontSize = calculateFontSize(points);\n  text.style.fontSize = fontSize + 'px';\n  text.textContent = `+${points}`;\n}\n\nfunction updateScoreWithPoints(delta) {\n  const initialScore = score;\n  const increments = Math.ceil(duration / updateInterval);\n  const incrementAmount = delta / increments;\n\n  const intervalId = setInterval(() => {\n    score += incrementAmount;\n    scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n    if (score >= initialScore + delta) {\n      // Stop the interval when the target score is reached\n      clearInterval(intervalId);\n    }\n  }, updateInterval);\n}\n\nfunction checkLose() {\n  //init dino rect\n  const dinoRect = getDinoRect();\n\n  //init enemy and player collision state\n  const isEnemyAndPlayerCollision = getCactusRects().some((rect) =>\n    isCollision(rect, dinoRect)\n  );\n\n  //if no lives remain then lose\n  if (livesElem.textContent === '0') {\n    worldElem.setAttribute('transition-style', 'out:circle:hesitate');\n    return true;\n  } //check if enemy and player are in colliding\n  else if (isEnemyAndPlayerCollision && !playerImmunity) {\n    //check if player is not in previous collision state\n    if (!collisionOccurred) {\n      // decrement lives elem by 1\n      soundController.takeDamage.play();\n      let currentLives = parseInt(livesElem.textContent, 10);\n      if (!isNaN(currentLives)) {\n        currentLives -= 1;\n        livesElem.textContent = currentLives;\n      }\n      //switch player collision state to true\n      collisionOccurred = true;\n      //set player to flash\n      dinoElem.classList.add('flash-animation');\n      //set world update pause\n      worldElem.classList.add('stop-time'); // Add the class to stop time\n      //set timeout for world update pause\n\n      // // Set a timeout to reset player collision state and player flash\n      setTimeout(() => {\n        collisionOccurred = false;\n        dinoElem.classList.remove('flash-animation');\n        dinoElem.classList.add('flash-light-animation');\n      }, 400);\n      setTimeout(() => {\n        collisionOccurred = false;\n        dinoElem.classList.remove('flash-light-animation');\n      }, 1600);\n    }\n  }\n}\n\nconst muteButton = document.getElementById('muteButton');\nlet soundControllerMuted = false;\nconst muteIconButton = document.getElementById('mute-icon-button');\n//mute/unmute function\nmuteButton.addEventListener('click', function () {\n  if (!soundControllerMuted) {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(true);\n    });\n    muteIconButton.src = muteImg;\n    soundControllerMuted = true;\n    muteButton.blur();\n  } else {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(false);\n    });\n    muteIconButton.src = unmuteImg;\n    soundControllerMuted = false;\n    muteButton.blur();\n  }\n});\n\nfunction isCollision(rect1, rect2) {\n  return (\n    rect1.left < rect2.right &&\n    rect1.top < rect2.bottom &&\n    rect1.right > rect2.left &&\n    rect1.bottom > rect2.top\n  );\n}\n\nfunction updateSpeedScale(delta) {\n  speedScale += delta * SPEED_SCALE_INCREASE;\n}\n\nfunction calculateNextMilestone(currentMilestone) {\n  // You can customize the growth rate based on your requirements\n  const growthRate = 1.5; // Adjust this as needed\n  return Math.floor(currentMilestone * growthRate);\n}\n\nfunction updateScore(delta) {\n  score += delta * 0.01;\n  scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n  if (\n    score > highScoreElem.textContent &&\n    !hasBeatenScore &&\n    highScoreElem.textContent !== '000000'\n  ) {\n    soundController.beatScore.play();\n    hasBeatenScore = true;\n  }\n  if (score > milestone) {\n    createOneUpText();\n    let currentLives = parseInt(livesElem.textContent, 10);\n    currentLives += 1;\n    livesElem.textContent = currentLives;\n    milestone = calculateNextMilestone(milestone);\n    console.log(milestone);\n  }\n}\n\nfunction handleCheckIfHighScore(score) {\n  if (score > highScoreElem.textContent) {\n    highScoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n    localStorage.setItem('lion-high-score', highScoreElem.textContent);\n    handleCheckLeaderboardHighScore(highScoreElem.textContent);\n  }\n}\n\nfunction setUpElements() {\n  setupGround();\n  setupGroundLayerTwo();\n  setupGroundLayerThree();\n  setupDino();\n  setupCactus();\n  setupMultiplier();\n  setupCoin();\n}\n\nfunction handleStart() {\n  worldElem.setAttribute('transition-style', 'in:circle:center');\n  lastTime = null;\n  hasBeatenScore = false;\n  speedScale = 0.9;\n  score = 0;\n  multiplierRatio = 1;\n  setUpElements();\n  dinoElem.classList.remove('leap');\n  currentMultiplierElem.textContent = multiplierRatio;\n  livesElem.textContent = 2;\n  startScreenElem.classList.add('hide');\n  endScreenElem.classList.add('hide');\n  // Get the container element where the ticker items will be appended\n  const tickerData = [\n    {\n      username: 'bap1',\n      score: 'start',\n    },\n    { username: 'b4p2', score: '323451' },\n    { username: 'fgp3', score: '331451' },\n    { username: 'agf4', score: '131451' },\n    {\n      username: 'bap5',\n      score: '353451',\n    },\n    { username: 'b4p6', score: '323451' },\n    { username: 'fgp', score: '331451' },\n    {\n      username: 'bap7',\n      score: '353451',\n    },\n    { username: 'b4p8', score: '323451' },\n    { username: 'fgp9', score: '331451' },\n    { username: 'agf10', score: '131451' },\n    {\n      username: 'bap11',\n      score: '353451',\n    },\n    { username: 'b4p12', score: '323451' },\n    { username: 'fgp13', score: 'end' },\n  ];\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem2.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem2.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem3.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem3.appendChild(tickerDivider);\n    }\n  });\n  // tickerContainerElem.classList.add('hide-element');\n  // tickerContainerElem.classList.remove('show-element');\n\n  window.requestAnimationFrame(update);\n}\n\nfunction handleCheckLeaderboardHighScore(score) {\n  const users = getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n  });\n}\n\nhandleCheckLeaderboardHighScore('90013');\n\nasync function handleSubmitNewScore() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  //check for validation errors and update error message accordingly\n  if (!validateInput() || !userInput) {\n    scoreErrorMessageElem.textContent = 'Enter a valid name!';\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  }\n\n  const scoreNewHighScoreElem = document.querySelector(\n    '[data-score-new-high-score]'\n  );\n  const res = await handleNewHighScore(\n    userInput,\n    scoreNewHighScoreElem.textContent\n  );\n\n  //check if user already exists from res and update error message accordingly, else submit new score\n  if (res === 'user already exists') {\n    scoreErrorMessageElem.textContent = res;\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  } else {\n    scoreErrorMessageElem.classList.add('hide');\n  }\n}\n\ndocument.addEventListener('click', function (event) {\n  const shareContainer = document.getElementById('share-container');\n  const shareButton = document.getElementById('shareButton');\n\n  if (\n    !shareContainer.contains(event.target) &&\n    !shareButton.contains(event.target)\n  ) {\n    shareContainer.classList.remove('show-share-container');\n  }\n});\n\nfunction handleOpenShareContainer() {\n  const shareContainer = document.getElementById('share-container');\n  shareContainer.classList.add('show-share-container');\n}\n\nif (document.getElementById('submit-button')) {\n  document\n    .getElementById('submit-button')\n    .addEventListener('click', handleSubmitNewScore);\n}\n\nlet currentPage = 'leaderboard-page';\n\nfunction handleOpenWiki() {\n  underlineCurrentPageButton('wiki-page');\n}\nfunction handleOpenControls() {\n  underlineCurrentPageButton('controls-page');\n}\nfunction handleOpenLeaderboard() {\n  underlineCurrentPageButton('leaderboard-page');\n}\n\nfunction underlineCurrentPageButton(page) {\n  const oldPage = document.getElementById(currentPage);\n  oldPage.classList.add('hide-page');\n  oldPage.classList.remove('show-page');\n  const currentButton = document.getElementById(pageButtons[currentPage]);\n  currentButton.classList.remove('sidebar-button-selected');\n  currentPage = page;\n  const newPage = document.getElementById(currentPage);\n  newPage.classList.add('show-page');\n  newPage.classList.remove('hide-page');\n  const newButton = document.getElementById(pageButtons[newPage.id]);\n  newButton.classList.add('sidebar-button-selected');\n}\n\ndocument\n  .getElementById('closeLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('toggleLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('shareButton')\n  .addEventListener('click', handleOpenShareContainer);\n\ndocument\n  .getElementById('show-wiki-page-button')\n  .addEventListener('click', handleOpenWiki);\n\ndocument\n  .getElementById('show-controls-page-button')\n  .addEventListener('click', handleOpenControls);\n\ndocument\n  .getElementById('show-leaderboard-page-button')\n  .addEventListener('click', handleOpenLeaderboard);\n\nconst pageButtons = {\n  'wiki-page': 'show-wiki-page-button',\n  'leaderboard-page': 'show-leaderboard-page-button',\n  'controls-page': 'show-controls-page-button',\n};\n\nunderlineCurrentPageButton('leaderboard-page');\n\nlet showLeaderboard = false;\n\nlet loading;\nfunction stopLoading() {\n  loading = false;\n}\n\nfunction handleToggleLeaderboard() {\n  const leaderboardContent = document.getElementById('leaderboard-content');\n\n  if (!showLeaderboard) {\n    leaderboardContent.classList.remove('flicker-opacity-off');\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    worldElem.setAttribute('transition-style', 'out:wipe:right');\n    const randomTimeout = Math.random() * (2800 - 1500) + 1500; // Random timeout between 1500ms and 2800ms\n    setTimeout(() => {\n      stopLoading();\n      scrollableTableElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.add('show-element');\n      leaderboardContent.classList.add('translateX-right-to-left');\n      scrollableTableElem.classList.remove('hide-element');\n    }, randomTimeout);\n  } else {\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    scrollableTableElem.setAttribute('transition-style', 'out:wipe:right');\n    leaderboardContent.classList.add('flicker-opacity-off');\n    setTimeout(() => {\n      stopLoading();\n      worldElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.remove('show-element');\n      scrollableTableElem.classList.add('hide-element');\n    }, 1500);\n  }\n}\n\nfunction runTypeLetters() {\n  if (!loading) {\n    return;\n  }\n  loadingTextElem.textContent = '';\n  typeLettersAny(0, '...', loadingTextElem, 120);\n  const rerunDelay = 2700;\n  setTimeout(runTypeLetters, rerunDelay);\n}\n\nfunction handleLose() {\n  gameOverTextElem.textContent = '';\n  // tickerContainerElem.classList.add('show-element');\n  // tickerContainerElem.classList.remove('hide-element');\n  handleCheckIfHighScore(score);\n  soundController.die.play();\n  setDinoLose();\n  setTimeout(() => {\n    document.addEventListener('keydown', handleStart, { once: true });\n    document.addEventListener('touchstart', handleStart, { once: true });\n    endScreenElem.classList.remove('hide');\n  }, 100);\n  setTimeout(() => {\n    typeLetters(0);\n  }, 1500);\n}\n\nfunction setPixelToWorldScale() {\n  let worldToPixelScale;\n  if (window.innerWidth / window.innerHeight < WORLD_WIDTH / WORLD_HEIGHT) {\n    worldToPixelScale = window.innerWidth / WORLD_WIDTH;\n  } else {\n    worldToPixelScale = window.innerHeight / WORLD_HEIGHT;\n  }\n\n  worldElem.style.width = `${WORLD_WIDTH * worldToPixelScale}px`;\n  worldElem.style.height = `${WORLD_HEIGHT * worldToPixelScale}px`;\n}\n\nfunction handleOrientationChange() {\n  var blackScreen = document.getElementById('blackScreen');\n\n  if ((isMobile() && window.orientation === 0) || window.orientation === 180) {\n    // Portrait orientation on mobile\n    blackScreen.style.display = 'flex';\n  } else {\n    // Hide black screen in other cases\n    blackScreen.style.display = 'none';\n  }\n}\n\nfunction isMobile() {\n  return /Mobi|Android/i.test(navigator.userAgent);\n}\n\n// Initial check\nhandleOrientationChange();\n\n// Listen for orientation changes\nwindow.addEventListener('orientationchange', handleOrientationChange);\n\nconst snow = {\n  el: '#snow',\n  density: 12500, // higher = fewer bits\n  maxHSpeed: 1, // How much do you want them to move horizontally\n  minFallSpeed: 0.5,\n  canvas: null,\n  ctx: null,\n  particles: [],\n  colors: [],\n  mp: 1,\n  quit: false,\n  init() {\n    this.canvas = document.querySelector(this.el);\n    this.ctx = this.canvas.getContext('2d');\n    this.reset();\n    requestAnimationFrame(this.render.bind(this));\n    window.addEventListener('resize', this.reset.bind(this));\n  },\n  reset() {\n    this.w = window.innerWidth;\n    this.h = window.innerHeight;\n    this.canvas.width = this.w;\n    this.canvas.height = this.h;\n    this.particles = [];\n    this.mp = Math.ceil((this.w * this.h) / this.density);\n    for (let i = 0; i < this.mp; i++) {\n      let size = Math.random() * 1.7 + 3;\n      this.particles.push({\n        x: Math.random() * this.w, //x-coordinate\n        y: Math.random() * this.h, //y-coordinate\n        w: size,\n        h: size,\n        vy: this.minFallSpeed + Math.random(), //density\n        vx: Math.random() * this.maxHSpeed - this.maxHSpeed / 2,\n        fill: '#ffffff',\n        s: Math.random() * 0.2 - 0.1,\n      });\n    }\n  },\n\n  render() {\n    this.ctx.clearRect(0, 0, this.w, this.h);\n    this.particles.forEach((p, i) => {\n      p.y += p.vy;\n      p.x += p.vx;\n      this.ctx.fillStyle = p.fill;\n      this.ctx.fillRect(p.x, p.y, p.w, p.h);\n      if (p.x > this.w + 5 || p.x < -5 || p.y > this.h) {\n        p.x = Math.random() * this.w;\n        p.y = -10;\n      }\n    });\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.render.bind(this));\n  },\n  destroy() {\n    this.quit = true;\n  },\n};\n\nsnow.init();\n\nconst textToType = 'Game Over';\n\nfunction typeLetters(index) {\n  if (index < textToType.length) {\n    gameOverTextElem.textContent += textToType.charAt(index);\n    setTimeout(() => typeLetters(index + 1), 200); // Adjust the delay as needed\n  } else {\n    gameOverIconElem.classList.remove('hide-element');\n    gameOverIconElem.classList.add('show-element');\n  }\n}\n\nfunction typeLettersAny(index, text, elem, timeout) {\n  if (index < text.length) {\n    elem.innerHTML += `<span>${text.charAt(index)}</span>`;\n    setTimeout(() => {\n      Array.from(elem.children).forEach((span, index) => {\n        setTimeout(() => {\n          span.classList.add('wavy');\n        }, index * 80);\n      });\n      typeLettersAny(index + 1, text, elem, timeout);\n    }, 250); // Adjust the delay as needed\n  } else {\n    elem.classList.remove('hide-element');\n    elem.classList.add('show-element');\n  }\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}