{"version":3,"sources":["../utility/updateCustomProperty.js","../game-state.js","../elements/ground.js","../elements/groundLayerTwo.js","../elements/groundLayerTwoTwo.js","../elements/groundLayerThree.js","../node_modules/howler/dist/howler.js","../utility/sound-controller.js","../elements/player-controller.js","../elements-refs.js","../utility/toggle-element.js","../elements/coin.js","../elements/groundQue.js","../elements/cactus.js","../item-drop-state.js","../utility/child-items.js","../elements/platform.js","../elements/ground-enemy.js","../elements/bird.js","../apis.js","../elements/leaderboard.js","../utility/validate-input.js","../elements/score-multiplier.js","../elements/magnet.js","../elements/heart.js","../elements/leaf.js","../elements/star.js","../elements/particle-systems.js","../elements/buff.js","../phases/phase-properties.js","../phases/phase1.js","../phases/phase2.js","../phases/bonus-phase.js","../elements/bonus-layer.js","../interface-text-elems-state.js","../utility/update-interface-text.js","../utility/crate-items.js","../elements/crate.js","../elements/gem-collection.js","../game-manager.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["getCustomProperty","elem","prop","parseFloat","getComputedStyle","getPropertyValue","setCustomProperty","value","style","setProperty","incrementCustomProperty","inc","StateSingleton","_ref","state","multiplierRatio","timerInterval","phaseTimerInterval","multiplierTimer","currentPhase","speedScale","speedScaleIncrease","jumpCountLimit","obstaclePoints","lastPhase","gravityFallAdjustment","selectedStarter","isCoinsRunning","isPlatformRunning","isCactusRunning","isBirdRunning","isGroundEnemyRunning","isCrateRunning","isGroundRunning","isGroundLayer2Running","isGroundLayer3Running","groundSpeed","groundEnemySpeedFactor","isFlagCreated","platformSpeed","platformCoinIntervalMax","platformCoinIntervalMin","groundCoinIntervalMin","groundCoinIntervalMax","cactusIntervalMin","cactusIntervalMax","isMultiplierRunning","isMagnetRunning","isStarRunning","starDuration","playerImmunity","hasStar","hasLeaf","leafDuration","isMagnetItem","isStarColliding","isMagnetColliding","isLeafColliding","isHeartColliding","groundSpawnReady","nextGroundSpawnType","getGroundSpawnReady","setGroundSpawnReady","newGroundSpawnReady","getCactusIntervalMin","setCactusIntervalMin","newCactusIntervalMin","getCactusIntervalMax","setCactusIntervalMax","newCactusIntervalMax","getNextGroundSpawnType","setNextGroundSpawnType","newNextGroundSpawnType","getPlatformCoinIntervalMin","setPlatformCoinIntervalMax","newPlatformCoinIntervalMax","getGroundCoinMinInterval","setGroundCoinMinInterval","newGroundCoinMinInterval","getGroundCoinMaxInterval","setGroundCoinMaxInterval","newGroundCoinMaxInterval","getIsHeartColliding","setIsHeartColliding","newIsHeartColliding","getIsLeafColliding","setIsLeafColliding","newIsLeafColliding","getIsStarColliding","setIsStarColliding","newIsStarColliding","getIsMagnetColliding","setIsMagnetColliding","newIsMagnetColliding","getIsCrateRunning","setIsCrateRunning","newIsCrateRunning","getIsGroundEnemyRunning","setIsGroundEnemyRunning","newIsGroundEnemyRunning","getLeafDuration","setLeafDuration","newLeafDuration","getHasLeaf","setHasLeaf","newHasLeaf","getJumpCountLimit","setJumpCountLimit","newJumpCountLimit","getPlatformSpeed","setPlatformSpeed","newPlatformSpeed","getIsFlagCreated","setIsFlagCreated","newIsFlagCreated","getGroundSpeed","setGroundSpeed","newGroundSpeed","getGroundEnemySpeedFactor","setGroundEnemySpeedFactor","newGroundEnemySpeedFactor","getIsMultiplierRunning","setIsMultiplierRunning","newIsMultiplierRunning","getIsMagnetRunning","setIsMagnetRunning","newIsMagnetRunning","getIsStarRunning","setIsStarRunning","newIsStarRunning","getIsGroundRunning","setIsGroundRunning","newIsGroundRunning","getIsGroundLayer2Running","setIsGroundLayer2Running","newIsGroundLayer2Running","getIsGroundLayer3Running","setIsGroundLayer3Running","newIsGroundLayer3Running","getIsPlatformRunning","setIsPlatformRunning","newIsPlatformRunning","getIsCactusRunning","setIsCactusRunning","newIsCactusRunning","getIsBirdRunning","setIsBirdRunning","newIsBirdRunning","getIsCoinsRunning","setIsCoinsRunning","newIsCoinsRunning","getSelectedStarter","setSelectedStarter","newSelectedStarter","getGravityFallAdjustment","setGravityFallAdjustment","newGravityFallAdjustment","getLastPhase","setLastPhase","newLastPhase","getIsMagnetItem","setIsMagnetItem","newBoolean","getObstaclePoints","setObstaclePoints","newPoints","_defineProperty","getStarDuration","setStarDuration","newDuration","getHasStar","setHasStar","newHasStar","getPlayerImmunity","setPlayerImmunity","newImmunity","getMultiplierRatio","setMultiplierRatio","newRatio","getTimerInterval","setTimerInterval","newInterval","getPhaseTimerInterval","setPhaseTimerInterval","getMultiplierTimer","setMultiplierTimer","newTimer","getCurrentPhase","setCurrentPhase","newPhase","getSpeedScale","setSpeedScale","newSpeedScale","getSpeedScaleIncrease","setSpeedScaleIncrease","newSpeedScaleIncrease","updateState","newValues","Object","assign","_default","exports","default","_updateCustomProperty","require","_gameState","_interopRequireDefault","obj","__esModule","SPEED","groundElems","document","querySelectorAll","setupGround","updateGround","delta","forEach","ground","groundLayerTwoElems","setupGroundLayerTwo","updateGroundLayerTwo","setupGroundLayerTwoTwo","updateGroundLayerTwoTwo","zIndex","groundLayerThreeElems","setupGroundLayerThree","updateGroundLayerThree","_howler","soundController","die","Howl","src","volume","jump","beatScore","pickupCoin","takeDamage","_Jump","_Jump2","_Run","_Run2","_Run3","_Run4","_Rest","_Rest2","_Rest3","_soundController","_gameManager","dinoElem","querySelector","dinoImg","JUMP_SPEED","DOUBLE_JUMP_SPEED","GRAVITY","DINO_FRAME_COUNT","FRAME_TIME","BOTTOM_ANCHOR","isJumping","canDoubleJump","jumpCount","dinoFrame","currentFrameTime","yVelocity","jumpAnimationInProgress","isMobileDevice","test","navigator","userAgent","setupDino","removeEventListener","onJump","onJumpEnd","addEventListener","onDive","updateDino","handleRun","handleJump","handleDive","getDinoRect","getBoundingClientRect","setDinoLose","lionLoseImg","classList","add","remove","spotlight","getElementById","startJump","lionJumpImg1","createCoinAboveDino","setTimeout","lionJumpImg2","endJump","isFalling","dropOffPlatform","currentIdleImageIndex","imagePaths","lionIdleImg1","lionIdleImg2","lionIdleImg3","handleIdle","length","collisionDetected","currentPlatformId","currentPlatform","currentPlatformRect","dinoRect","left","right","currentBottom","lionRunImg1","lionRunImg2","lionRunImg3","lionRunImg4","isCollidingWithPlatforms","platforms","platform","platformRect","bottom","top","id","jumpStartTime","maxJumpTime","minJumpTime","arguments","undefined","e","code","type","Date","now","play","jumpTime","Math","max","jumpStrength","min","pow","jumpVelocity","DIVE_SPEED","isDiving","coinElement","createElement","selectedCollectable","collectableOptions","dataset","coin","locked","points","random","toString","slice","position","offsetTop","offsetLeft","worldElem","appendChild","scoreElem","highScoreElem","startScreenElem","endScreenElem","gameOverTextElem","gameOverIconElem","leaderboardElem","scoreMultiplierElem","scoreNewHighScoreElem","scoreErrorMessageElem","multiplierTimerElem","tickerElem","tickerElem2","tickerElem3","livesElem","scrollableTableElem","currentMultiplierElem","plusPointsElem","tickerContainerElem","loadingTextElem","submitNewScoreFormElem","interfaceComboContainer","currentMultiplierScoreElem","currentComboScoreContainer","timerProgress","currentGameTimerElem","gameLoadingScreenElem","gameLoadingTextElem","bonusElem","gameNotificationElem","pausedScreenElem","toggleElemOn","toggleElemOff","_playerController","_groundQue","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","prototype","constructor","name","from","iter","len","arr2","getMagnetSpeedFactor","nextCoinTime","isCoinSpawned","setupCoin","moveItemToPlayer","item","itemRect","distance","extraFactor","isLocking","angle","atan2","y","x","distanceFactor","speed","oppositeDirectionX","cos","oppositeDirectionY","sin","isLockingDuration","magneticSpeedFactor","isMagnetLocked","isMagnetSpeedFactor","deltaX","deltaY","updateCoin","coinRect","sqrt","cloudChild","addToSpawnQueue","randomNumberBetween","getCoinRects","map","rect","createCoins","totalWeight","reduce","sum","weight","randomWeight","cumulativeWeight","_iterator","_step","element","gem","initialKeyframe","getRandomKeyframe","animationDelay","concat","append","floor","_coin","_cactus","spawnFunctions","cactus","generateRandomCacti","spawnQueue","spawnDelay","lastTypeSpawned","spawnType","push","spawnNextItem","nextSpawnType","shift","updateGroundQue","_Bush","_Rock","_Rock2","_elementsRefs","_toggleElement","cactiPositions","nextCactusTime","setupCactus","isPositionOccupied","includes","groupIdCounter","isCactusSpawned","console","log","minCacti","maxCacti","groupId","numberOfCacti","newPosition","createCactus","distanceThreshold","cactusGroups","Map","updateCactus","comboIncremented","cactusRect","collision","isCollision","isGrouped","groupFlags","isDinoNearCactus","hadCollision","hasPassedDino","has","set","isDinoNear","get","currentMultiplierRatio","updateMultiplierInterface","scoreUpdated","text","parentNode","insertBefore","textContent","updateScoreWithPoints","getCactusRects","cactusImages","bush1","rock1","rock2","image","selectedImage","transform","ItemDropStateSingleton","star","colliderSetter","heart","getItemDropState","createChildItems","elementName","parent","_Cloud","_Cloud2","_itemDropState","_childItems","platformPositions","platform_INTERVAL_MIN","platform_INTERVAL_MAX","nextPlatformTime","setupPlatform","generateRandomPlatforms","minPlatforms","maxPlatforms","numberOfPlatforms","createPlatform","updatePlatform","isDinoNearPlatform","platformContainer","getPlatformRects","platformObj","createCloud","platformElem","isFirstChild","cloud","cloud1Img","cloudClass","marginLeft","normalizedPlatformItemWeights","normalizeWeights","createItemCloud","cloud2Img","numberOfClouds","getRandomWeighted","normalizedPlatformWeights","parentContainer","createCoinsOnPlatform","keys","weights","key","sumOfWeights","normalizedWeights","index","probabilities","randomValue","cumulativeProbability","_platform","enemyPositions","GROUND_ENEMY_INTERVAL_MIN","GROUND_ENEMY_INTERVAL_MAX","nextGroundEnemyTime","setupGroundEnemy","groundEnemy","generateRandomEnemy","minEnemy","maxEnemy","numberOfEnemy","createGroundEnemy","groundEnemyGroups","updateGroundEnemy","groundEnemyRect","isDinoNearGroundEnemy","extraSpeedFactor","groundEnemyExtraSpeedFactor","getGroundEnemyRects","groundEnemyObj","rollingPenguin","class","speedFactor","spinningPenguin","walkingPenguin","normalizedGroundEnemyWeights","randomBuffKey","groundEnemyType","BIRD_INTERVAL_MIN","BIRD_INTERVAL_MAX","nextBirdTime","setupBird","bird","createBird","birdGroups","updateBird","birdRect","isDinoNearBird","getBirdRects","birdObj","penguin","normalizedBirdWeights","_regeneratorRuntime","t","r","hasOwnProperty","defineProperty","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","apply","getAllHighScoreUsers","_callee","response","_callee$","_context","fetch","ok","status","json","t0","handleDeleteEntry","_ref2","_callee2","entryField","errorData","_callee2$","_context2","headers","alert","_x","handleSortAndDeleteLastEntry","_ref3","_callee3","_callee3$","_context3","data","sortedData","users","sort","b","parseInt","score","username","handleNewHighScore","_ref4","_callee4","_callee4$","_context4","body","JSON","stringify","_x2","_x3","checkIfNewHighScore","_ref5","_callee5","_callee5$","_context5","_x4","_apis","sortLeaderboard","getSuffix","number","lastDigit","createLeaderboard","personalBestLvl","personalBestCombo","personalBestScoreElem","storedPersonalBestLvl","localStorage","getItem","storedPersonalBestCombo","storedPersonalBestScore","rowElement","rankCell","indexSuffix","scoreCell","nameCell","badWordsArray","checkForBadWords","input","word","validateInput","userInput","MULTIPLIER_INTERVAL_MIN","MULTIPLIER_INTERVAL_MAX","nextMultiplierTime","setupMultiplier","multiplier","updateMultiplier","createMultipliers","getMultiplierRects","getRandomKeyWeighted","multiplierRatios","x2","x5","x10","MAGNET_INTERVAL_MIN","MAGNET_INTERVAL_MAX","nextMagnetTime","setupMagnet","magnet","updateMagnet","createMagnet","getMagnetRects","getHeartRects","getLeafRects","leaf","STARS_INTERVAL_MIN","STARS_INTERVAL_MAX","nextStarTime","setupStar","updateStar","createStars","getStarRects","snow","el","density","maxHSpeed","minFallSpeed","canvas","ctx","particles","colors","mp","quit","paused","init","getContext","requestAnimationFrame","render","bind","window","w","innerWidth","innerHeight","width","height","ceil","size","vy","vx","fill","_this","clearRect","fillStyle","fillRect","togglePause","destroy","confetti","initialFall","heightMultiplier","widthTransition","rotationSpeed","_this2","maxOpacity","minOpacity","opacityRange","normalizedY","opacity","maxWidth","minWidth","save","translate","rotate","PI","globalAlpha","restore","_icecream","_mittens","_stopwatch","_book","_sneakers","_coffee","_backpack","_cowbell","_particleSystems","buffOptionsContainer","modal","applyBuff","buffName","buffs","effect","display","innerHTML","applyStarterBuff","powerUpDivs","lastEmptyPowerUp","find","powerUpDiv","starterBuffs","icon","alt","createStarterBuffs","buffContainer","flexContainer","iconWrapper","title","description","buffContainerTop","createBuffs","Stopwatch","stopwatch","filetMignonEffect","coffee","Backpack","backpack","sackOfCoinsEffect","Sundae","iceCream","Cowbell","cowbell","sneakers","book","booksSmartEffect","mittens","phases","bonus","totalTime","_phaseProperties","updatePhase1","timer","isCoinRunning","updatePhase2","updateBonusPhase","incrementPhase","updateNotification","bonusLayerElems","setupBonusLayer","isBonusLayerMovedBack","isBonusLayerSetup","updateBonusLayer","InterfaceTextElemsSingleton","interfaceTextElemsState","getInterfaceTextElemsState","addInterfaceTextElem","removeInterfaceTextElem","indexOf","splice","_interfaceTextElemsState","updateInterfaceText","interfaceTextElems","createCrateItems","createCrateItemsAboveCrate","crateItem","itemLocked","_Crate","_Crate2","_crateItems","crate_INTERVAL_MIN","crate_INTERVAL_MAX","nextCrateTime","setupCrate","crate","updateCrate","crateContainer","crateContainerRect","didCollide","crate2Img","normalizedCrateItemWeights","crateItems","crateItemRect","createCrate","getCrateRects","crate1Img","_redGem","_blueGem","_greenGem","applyGem","gemName","existingPowerUp","existingRank","existingRankValue","collectableGems","rank","redGem","blueGem","greenGem","_ground","_groundLayerTwo","_groundLayerTwoTwo","_groundLayerThree","_groundEnemy","_bird","_leaderboard","_validateInput","_scoreMultiplier","_magnet","_heart","_leaf","_star","_SpeakerOff","_SpeakerOn","_Pause","_Play","_Redo","_ForegroundTrees","_buff","_phase","_phase2","_bonusPhase","_bonusLayer","_updateInterfaceText","_crate","_gemCollection","WORLD_WIDTH","WORLD_HEIGHT","SPEED_SCALE_INCREASE","showLeaderboard","setPixelToWorldScale","handleStart","once","lastTime","idleIntervalId","collisionOccurred","milestone","padStart","hasBeatenScore","isPaused","immunityDuration","setAttribute","pauseIconButton","shareContainer","shareButton","copyCurrentLink","location","href","select","execCommand","removeChild","pauseButton","blur","immunityTimeout","setTimedPlayerImmunity","duration","clearTimeout","setInterval","updateElements","deltaAdjustment","currentSpeedScale","isUpdatedSpeedScale","decelerationFactor","deleteLetters","timeout","substring","notification","deleteLettersDelay","typeLettersDelay","typeLettersWithoutSpaces","checkCollisions","checkLose","handleLose","checkMultiplierCollision","checkCoinCollision","checkStarCollision","checkHeartCollision","checkMagnetCollision","checkLeafCollision","phaseUpdateFunctions","update","time","baseDelta","updateFunction","updateSpeedScale","updateScore","createOneUpText","newElement","currentComboScore","resetMultiplier","clearInterval","startMultiplierTimer","progressValue","checkForCrateItem","some","updateInterval","randomArc","randomXEnd","documentElement","calculateFontSize","goldCoinCounter","redGemMultiplier","addPickupText","createOneUpTextAtPosition","interfaceText","collisionPosition","currentLives","heartElement","starElement","magnetElement","lastMultiplierScore","pickupElement","_pickupElement$datase","pickupPoints","fontSize","innerDiv","existingInnerDiv","scoreSinceMilestone","initialScore","increments","incrementAmount","intervalId","cactusRects","birdRects","groundEnemyRects","allEnemyRects","isEnemyAndPlayerCollision","muteButton","soundControllerMuted","muteIconButton","mute","muteImg","unmuteImg","rect1","rect2","levelBarElem","levelDisplayElem","calculateNextMilestone","currentMilestone","growthRate","handleLevelUp","currentLevel","currentPassives","currentItem","curItem","lastValue","incrementAdjustment","progress","handleCheckIfHighScore","setItem","handleCheckLeaderboardHighScore","setUpElements","setupGroundElements","setupObstacles","setupCharacters","setupPowerUps","startTimer","tickerData","tickerItem","tickerDivider","updateTimer","formatTime","seconds","minutes","remainingSeconds","stopTimer","playImg","pauseImg","revealAchievementForm","round","achievementRankElem","achievementBlockElem","lionGameAchievementTitleElem","achievementInstructionsBlockElem","achievementFormElem","newHighScoreInput","focus","_handleCheckLeaderboardHighScore","lastHigherScore","user","typeLetters","trimmedOutExtraSpacesScore","replace","trim","handleSubmitNewScore","_handleSubmitNewScore","res","leaderboardContent","loading","runTypeLetters","stopLoading","event","contains","target","handleOpenShareContainer","currentPage","handleOpenWiki","underlineCurrentPageButton","handleOpenControls","handleOpenLeaderboard","page","oldPage","currentButton","pageButtons","newPage","newButton","handleToggleLeaderboard","randomTimeout","typeLettersAny","rerunDelay","worldToPixelScale","handleOrientationChange","blackScreen","isMobile","orientation","textToType","children","span","playerContainer","trustyPocketWatchEffect","startRank","endRank","currentRank","getRandomCollectable","option","totalPoints","randomCollectable","reduceByPercentage","percentage","slowFallEffect","reductionPercentage","ability","level","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","k","dep","Function","deps","cached","cache","cb"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChrGA,IAAAU,OAAA,GAAAvB,OAAA;AACO,IAAMwB,eAAe,GAAA3B,OAAA,CAAA2B,eAAA,GAAG;EAC7BC,GAAG,EAAE,IAAIC,YAAI,CAAC;IACZC,GAAG,EAAE,CAAC,gBAAgB,CAAC;IACvBC,MAAM,EAAE;EACV,CAAC,CAAC;EACFC,IAAI,EAAE,IAAIH,YAAI,CAAC;IACbC,GAAG,EAAE,CAAC,iBAAiB,CAAC;IACxBC,MAAM,EAAE;EACV,CAAC,CAAC;EACFE,SAAS,EAAE,IAAIJ,YAAI,CAAC;IAClBC,GAAG,EAAE,CAAC,sBAAsB,CAAC;IAC7BC,MAAM,EAAE;EACV,CAAC,CAAC;EACFG,UAAU,EAAE,IAAIL,YAAI,CAAC;IACnBC,GAAG,EAAE,CAAC,uBAAuB,CAAC;IAC9BC,MAAM,EAAE;EACV,CAAC,CAAC;EACFI,UAAU,EAAE,IAAIN,YAAI,CAAC;IACnBC,GAAG,EAAE,CAAC,uBAAuB,CAAC;IAC9BC,MAAM,EAAE;EACV,CAAC;AACH,CAAC;;;;;;;;;;;;ACtBD,IAAA7B,qBAAA,GAAAC,OAAA;AAKA,IAAAiC,KAAA,GAAA/B,sBAAA,CAAAF,OAAA;AACA,IAAAkC,MAAA,GAAAhC,sBAAA,CAAAF,OAAA;AAEA,IAAAmC,IAAA,GAAAjC,sBAAA,CAAAF,OAAA;AACA,IAAAoC,KAAA,GAAAlC,sBAAA,CAAAF,OAAA;AACA,IAAAqC,KAAA,GAAAnC,sBAAA,CAAAF,OAAA;AACA,IAAAsC,KAAA,GAAApC,sBAAA,CAAAF,OAAA;AACA,IAAAuC,KAAA,GAAArC,sBAAA,CAAAF,OAAA;AACA,IAAAwC,MAAA,GAAAtC,sBAAA,CAAAF,OAAA;AACA,IAAAyC,MAAA,GAAAvC,sBAAA,CAAAF,OAAA;AACA,IAAA0C,gBAAA,GAAA1C,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC9C,IAAQxG,UAAU,GAChB3F,kBAAc,CADR2F,UAAU;EAAEG,iBAAiB,GACnC9F,kBAAc,CADI8F,iBAAiB;EAAEgD,wBAAwB,GAC7D9I,kBAAc,CADuB8I,wBAAwB;AAE/D,IAAM8F,QAAQ,GAAGrC,QAAQ,CAACsC,aAAa,CAAC,aAAa,CAAC;AACtD,IAAMC,OAAO,GAAGvC,QAAQ,CAACsC,aAAa,CAAC,WAAW,CAAC;AACnD,IAAME,UAAU,GAAG,KAAK;AACxB,IAAMC,iBAAiB,GAAG,IAAI,CAAC,CAAC;AAChC,IAAMC,OAAO,GAAG,MAAM;AACtB,IAAMC,gBAAgB,GAAG,CAAC;AAC1B,IAAMC,UAAU,GAAG,EAAE;AACrB,IAAMC,aAAa,GAAG,IAAI;AAE1B,IAAIC,SAAS;AACb,IAAIC,aAAa;AACjB,IAAIC,SAAS;AACb,IAAIC,SAAS;AACb,IAAIC,gBAAgB;AACpB,IAAIC,SAAS;AACb,IAAIC,uBAAuB;AAC3B,IAAI9G,kBAAkB;AACtB,SAAS+G,cAAcA,CAAA,EAAG;EACxB,OAAO,gEAAgE,CAACC,IAAI,CAC1EC,SAAS,CAACC,SACZ,CAAC;AACH;AAEO,SAASC,SAASA,CAAA,EAAG;EAC1BX,SAAS,GAAG,KAAK;EACjBM,uBAAuB,GAAG,KAAK;EAC/BL,aAAa,GAAG,IAAI;EACpBC,SAAS,GAAG,CAAC;EACbC,SAAS,GAAG,CAAC;EACbC,gBAAgB,GAAG,CAAC;EACpBC,SAAS,GAAG,CAAC;EACb,IAAAhQ,uCAAiB,EAACkP,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;;EAEtD;EACA,IAAIQ,cAAc,CAAC,CAAC,EAAE;IACpBrD,QAAQ,CAAC0D,mBAAmB,CAAC,YAAY,EAAEC,MAAM,CAAC;IAClD3D,QAAQ,CAAC0D,mBAAmB,CAAC,UAAU,EAAEE,SAAS,CAAC;IACnD5D,QAAQ,CAAC6D,gBAAgB,CAAC,YAAY,EAAEF,MAAM,CAAC;IAC/C3D,QAAQ,CAAC6D,gBAAgB,CAAC,UAAU,EAAED,SAAS,CAAC;IAChD5D,QAAQ,CAAC6D,gBAAgB,CAAC,YAAY,EAAEC,MAAM,CAAC;EACjD,CAAC,MAAM;IACL9D,QAAQ,CAAC0D,mBAAmB,CAAC,SAAS,EAAEC,MAAM,CAAC;IAC/C3D,QAAQ,CAAC0D,mBAAmB,CAAC,OAAO,EAAEE,SAAS,CAAC;IAChD5D,QAAQ,CAAC6D,gBAAgB,CAAC,OAAO,EAAED,SAAS,CAAC;IAC7C5D,QAAQ,CAAC6D,gBAAgB,CAAC,SAAS,EAAEF,MAAM,CAAC;IAC5C3D,QAAQ,CAAC6D,gBAAgB,CAAC,SAAS,EAAEC,MAAM,CAAC;EAC9C;AACF;AAEO,SAASC,UAAUA,CACxB3D,KAAK,EACLnM,UAAU,EACVK,qBAAqB,EACrBC,eAAe,EACf;EACA,IAAI,CAAC+H,kBAAkB,EAAE;IACvBA,kBAAkB,GAAG/H,eAAe;EACtC;EACAyP,SAAS,CAAC5D,KAAK,EAAEnM,UAAU,EAAEqI,kBAAkB,CAAC;EAChD2H,UAAU,CAAC7D,KAAK,EAAE9L,qBAAqB,CAAC;EACxC4P,UAAU,CAAC9D,KAAK,CAAC;AACnB;AAEO,SAAS+D,WAAWA,CAAA,EAAG;EAC5B,OAAO9B,QAAQ,CAAC+B,qBAAqB,CAAC,CAAC;AACzC;AAEO,SAASC,WAAWA,CAAA,EAAG;EAC5B9B,OAAO,CAACnB,GAAG,GAAGkD,aAAW;EACzB/B,OAAO,CAACgC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EAC7BjC,OAAO,CAACgC,SAAS,CAACE,MAAM,CAAC,iBAAiB,CAAC;EAC3C,IAAMC,SAAS,GAAG1E,QAAQ,CAAC2E,cAAc,CAAC,WAAW,CAAC;EACtDD,SAAS,CAACH,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;AAC5C;AAEA,SAASI,SAASA,CAACrQ,eAAe,EAAE;EAClC,IAAI,CAAC6O,uBAAuB,EAAE;IAC5BA,uBAAuB,GAAG,IAAI;IAC9Bb,OAAO,CAACnB,GAAG,GAAGyD,aAAY;IAC1B,IAAItQ,eAAe,KAAK,OAAO,EAAE;MAC/BuQ,mBAAmB,CAAC,CAAC;IACvB;IAEAC,UAAU,CAAC,YAAY;MACrBxC,OAAO,CAACnB,GAAG,GAAG4D,cAAY;IAC5B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX;AACF;;AAEA,SAASC,OAAOA,CAAA,EAAG;EACjBnC,SAAS,GAAG,KAAK;EACjBM,uBAAuB,GAAG,KAAK;EAC/B8B,SAAS,GAAG,KAAK;AACnB;AAEA,IAAIC,eAAe,GAAG,KAAK;AAC3B,IAAIC,qBAAqB,GAAG,CAAC;AAE7B,IAAMC,UAAU,GAAG,CACjBC,aAAY,EACZC,cAAY,EACZD,aAAY,EACZC,cAAY,EACZD,aAAY,EACZC,cAAY,EACZC;AACA;AAAA,CACD;;AAEM,SAASC,UAAUA,CAAA,EAAG;EAC3BlD,OAAO,CAACnB,GAAG,GAAGiE,UAAU,CAACD,qBAAqB,CAAC;EAC/CA,qBAAqB,GAAG,CAACA,qBAAqB,GAAG,CAAC,IAAIC,UAAU,CAACK,MAAM,CAAC,CAAC;EACzE;AACF;;AAEA,SAAS1B,SAASA,CAAC5D,KAAK,EAAEnM,UAAU,EAAEM,eAAe,EAAE;EACrD,IAAIuO,SAAS,EAAE;IACb8B,SAAS,CAACrQ,eAAe,CAAC;IAC1B;EACF;;EAEA;EACA,IAAIoR,iBAAiB,IAAIC,iBAAiB,EAAE;IAC1C,IAAMC,eAAe,GAAG7F,QAAQ,CAAC2E,cAAc,CAACiB,iBAAiB,CAAC;IAClE,IAAME,mBAAmB,GAAGD,eAAe,CAACzB,qBAAqB,CAAC,CAAC;IACnE,IAAM2B,QAAQ,GAAG5B,WAAW,CAAC,CAAC;IAC9BpB,aAAa,GAAG,IAAI;IACpBC,SAAS,GAAG,CAAC;IACb;IACA,IAAI+C,QAAQ,CAACC,IAAI,IAAIF,mBAAmB,CAACG,KAAK,EAAE;MAC9Cd,eAAe,GAAG,IAAI;MACtB,IAAMe,aAAa,GAAG,IAAArT,uCAAiB,EAACwP,QAAQ,EAAE,UAAU,CAAC;MAC7Dc,SAAS,IAAIT,OAAO,GAAGtC,KAAK,GAAG7D,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAAhJ,6CAAuB,EAAC8O,QAAQ,EAAE,UAAU,EAAEc,SAAS,GAAG/C,KAAK,CAAC;MAChE,IAAI8F,aAAa,IAAIrD,aAAa,EAAE;QAClC,IAAA1P,uCAAiB,EAACkP,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;QACtDE,aAAa,GAAG,IAAI;QACpBC,SAAS,GAAG,CAAC;MACf;MACA;MACAD,aAAa,GAAG,IAAI;MACpBC,SAAS,GAAG,CAAC;;MAEb;MACA4C,iBAAiB,GAAG,IAAI;MACxBD,iBAAiB,GAAG,KAAK;IAC3B;EACF;EACA,IAAIR,eAAe,KAAK,IAAI,EAAE;IAC5B,IAAMe,cAAa,GAAG,IAAArT,uCAAiB,EAACwP,QAAQ,EAAE,UAAU,CAAC;IAC7Dc,SAAS,IAAIT,OAAO,GAAGtC,KAAK,GAAG7D,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/D,IAAAhJ,6CAAuB,EAAC8O,QAAQ,EAAE,UAAU,EAAEc,SAAS,GAAG/C,KAAK,CAAC;IAChE,IAAI8F,cAAa,IAAIrD,aAAa,EAAE;MAClC,IAAA1P,uCAAiB,EAACkP,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;MACtDoC,OAAO,CAAC,CAAC;MACTlC,aAAa,GAAG,IAAI;MACpBC,SAAS,GAAG,CAAC;MACbmC,eAAe,GAAG,KAAK;IACzB;EACF;EACA,IAAIjC,gBAAgB,IAAIN,UAAU,EAAE;IAClCK,SAAS,GAAG,CAACA,SAAS,GAAG,CAAC,IAAIN,gBAAgB;;IAE9C;IACA,QAAQM,SAAS;MACf,KAAK,CAAC;QACJV,OAAO,CAACnB,GAAG,GAAG+E,YAAW;QACzB;MACF,KAAK,CAAC;QACJ5D,OAAO,CAACnB,GAAG,GAAGgF,aAAW;QACzB;MACF,KAAK,CAAC;QACJ7D,OAAO,CAACnB,GAAG,GAAGiF,aAAW;QACzB;MACF,KAAK,CAAC;QACJ9D,OAAO,CAACnB,GAAG,GAAGkF,aAAW;QACzB;MACF;IACF;;IAEApD,gBAAgB,IAAIN,UAAU;EAChC;EACAM,gBAAgB,IAAI9C,KAAK,GAAGnM,UAAU;AACxC;AAEA,SAASsS,wBAAwBA,CAAA,EAAG;EAClC;EACA,IAAMR,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,IAAMqC,SAAS,GAAGxG,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC;EAC9DuG,SAAS,CAACnG,OAAO,CAAC,UAACoG,QAAQ,EAAK;IAC9B,IAAMC,YAAY,GAAGD,QAAQ,CAACrC,qBAAqB,CAAC,CAAC;IACrD,IACE2B,QAAQ,CAACY,MAAM,IAAID,YAAY,CAACE,GAAG,IACnCb,QAAQ,CAACY,MAAM,IAAID,YAAY,CAACC,MAAM,IACtCZ,QAAQ,CAACE,KAAK,GAAGS,YAAY,CAACV,IAAI,IAClCD,QAAQ,CAACC,IAAI,GAAGU,YAAY,CAACT,KAAK,EAClC;MACAhB,OAAO,CAAC,CAAC;;MAET;MACA5C,QAAQ,CAAChP,KAAK,CAACsT,MAAM,GAAGD,YAAY,CAACE,GAAG;MACxCjB,iBAAiB,GAAG,IAAI;MAExBC,iBAAiB,GAAGa,QAAQ,CAACI,EAAE;IACjC;EACF,CAAC,CAAC;AACJ;AAEA,IAAIC,aAAa;AACjB,IAAIC,WAAW,GAAG,EAAE,CAAC,CAAC;AACtB,IAAIC,WAAW,GAAG,EAAE,CAAC,CAAC;AACtB,IAAIpB,iBAAiB,CAAC,CAAC;AACvB,IAAID,iBAAiB,GAAG,KAAK;AAC7B,IAAIT,SAAS,GAAG,KAAK;AACrB,SAASjB,UAAUA,CAAC7D,KAAK,EAAgC;EAAA,IAA9B9L,qBAAqB,GAAA2S,SAAA,CAAAvB,MAAA,QAAAuB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EACrD,IAAI,CAACnE,SAAS,EAAE;;EAEhB;EACA,IAAIK,SAAS,IAAI,CAAC,EAAE;IAClB+B,SAAS,GAAG,IAAI;IAChB;IACA/B,SAAS,IAAI/J,UAAU,CAAC,CAAC,GACrBsJ,OAAO,GAAGtC,KAAK,GAAG9L,qBAAqB,GAAG,CAAC,GAC3CoO,OAAO,GAAGtC,KAAK,GAAG9L,qBAAqB,CAAC,CAAC;EAC/C,CAAC,MAAM;IACL6O,SAAS,IAAIT,OAAO,GAAGtC,KAAK;EAC9B;EAEA,IAAA7M,6CAAuB,EAAC8O,QAAQ,EAAE,UAAU,EAAEc,SAAS,GAAG/C,KAAK,CAAC;EAEhE,IAAM8F,aAAa,GAAG,IAAArT,uCAAiB,EAACwP,QAAQ,EAAE,UAAU,CAAC;EAE7D,IAAI6C,SAAS,EAAE;IACb;IACAqB,wBAAwB,CAAC,CAAC;EAC5B;;EAEA;EACA,IAAIL,aAAa,IAAIrD,aAAa,EAAE;IAClC,IAAA1P,uCAAiB,EAACkP,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;IACtDE,aAAa,GAAG,IAAI;IACpBC,SAAS,GAAG,CAAC;IACbiC,OAAO,CAAC,CAAC;EACX;EAEA,IAAIjC,SAAS,KAAK,CAAC,IAAID,aAAa,EAAE;IACpCI,SAAS,GAAGV,iBAAiB;IAC7BM,aAAa,GAAG,KAAK;EACvB;AACF;;AAEA;AACA,SAASY,MAAMA,CAACwD,CAAC,EAAE;EACjB,IACGA,CAAC,CAACC,IAAI,KAAK,OAAO,IAAID,CAAC,CAACE,IAAI,KAAK,YAAY,IAC7CvE,SAAS,IAAIE,SAAS,IAAIzJ,iBAAiB,CAAC,CAAE,EAE/C;EACF0L,OAAO,CAAC,CAAC;EACTL,SAAS,CAACtI,kBAAkB,CAAC;;EAE7B;EACAwK,aAAa,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC;EAC1BtG,gCAAe,CAACK,IAAI,CAACkG,IAAI,CAAC,CAAC;EAC3B1E,SAAS,GAAG,IAAI;EAChBK,SAAS,GAAGX,UAAU;EACtBQ,SAAS,EAAE;AACb;;AAEA;AACA,SAASY,SAASA,CAACuD,CAAC,EAAE;EACpB,IAAKA,CAAC,CAACC,IAAI,KAAK,OAAO,IAAID,CAAC,CAACE,IAAI,KAAK,UAAU,IAAKnC,SAAS,EAAE;;EAEhE;EACA,IAAIuC,QAAQ,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGT,aAAa;;EAEzC;EACAW,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACF,QAAQ,EAAET,WAAW,CAAC;EAE1C,IAAID,WAAW,IAAIU,QAAQ,GAAG,CAAC,EAAE;IAC/B;IACA,IAAIG,YAAY,GAAGF,IAAI,CAACG,GAAG,CAACJ,QAAQ,GAAGV,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IACxDa,YAAY,GAAGF,IAAI,CAACI,GAAG,CAACF,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE1C;IACA,IAAMG,YAAY,GAAGvF,UAAU,GAAGoF,YAAY;;IAE9C;IACAzE,SAAS,GAAG4E,YAAY;EAC1B;AACF;AAEA,IAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;AACxB,IAAIC,QAAQ,GAAG,KAAK;AAEpB,SAAS/D,UAAUA,CAAC9D,KAAK,EAAE;EACzB,IAAI,CAAC6H,QAAQ,EAAE;EACf,IAAA1U,6CAAuB,EAAC8O,QAAQ,EAAE,UAAU,EAAEc,SAAS,GAAG/C,KAAK,CAAC;EAEhE,IAAI,IAAAvN,uCAAiB,EAACwP,QAAQ,EAAE,UAAU,CAAC,IAAIQ,aAAa,EAAE;IAC5D,IAAA1P,uCAAiB,EAACkP,QAAQ,EAAE,UAAU,EAAEQ,aAAa,CAAC;IACtDoF,QAAQ,GAAG,KAAK;IAChBjF,SAAS,GAAG,CAAC;EACf;EACAG,SAAS,IAAIT,OAAO,GAAGtC,KAAK;AAC9B;AAEA,SAAS0D,MAAMA,CAACqD,CAAC,EAAE;EACjB,IAAKA,CAAC,CAACC,IAAI,KAAK,WAAW,IAAID,CAAC,CAACE,IAAI,KAAK,YAAY,IAAKY,QAAQ,EAAE;EAErE9E,SAAS,GAAG,CAAC6E,UAAU,CAAC,CAAC;EACzBC,QAAQ,GAAG,IAAI;;EAEf;;EAEA;EACAnF,SAAS,GAAG,KAAK;EACjBE,SAAS,GAAG,CAAC;AACf;AAEA,SAAS8B,mBAAmBA,CAAA,EAAG;EAC7B,IAAMoD,WAAW,GAAGlI,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAEjD,IAAIC,mBAAmB,GAAGC,+BAAkB,CAAC,CAAC,CAAC;EAE/CH,WAAW,CAACI,OAAO,CAACC,IAAI,GAAG,IAAI;EAC/BL,WAAW,CAACI,OAAO,CAACjB,IAAI,GAAGe,mBAAmB,CAACf,IAAI;EACnDa,WAAW,CAACI,OAAO,CAACE,MAAM,GAAG,OAAO;EACpCN,WAAW,CAACI,OAAO,CAACG,MAAM,GAAGL,mBAAmB,CAACK,MAAM;EACvDP,WAAW,CAAC3D,SAAS,CAACC,GAAG,CAAC,kBAAkB,EAAE,aAAa,CAAC;EAC5D0D,WAAW,CAACrB,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;;EAEpD;EACAV,WAAW,CAAC7U,KAAK,CAACwV,QAAQ,GAAG,UAAU;EACvCX,WAAW,CAAC7U,KAAK,CAACuT,GAAG,GAAGvE,QAAQ,CAACyG,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACxDZ,WAAW,CAAC7U,KAAK,CAAC2S,IAAI,GAAG3D,QAAQ,CAAC0G,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EAC1D;EACA,IAAMC,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;EACxD0G,SAAS,CAACC,WAAW,CAACf,WAAW,CAAC;AACpC;;;;;;;;;;;;;;ACvWA;AACA,IAAMc,SAAS,GAAA1J,OAAA,CAAA0J,SAAA,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AACxD,IAAM4G,SAAS,GAAA5J,OAAA,CAAA4J,SAAA,GAAGlJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AACxD,IAAM6G,aAAa,GAAA7J,OAAA,CAAA6J,aAAA,GAAGnJ,QAAQ,CAACsC,aAAa,CAAC,mBAAmB,CAAC;AACjE,IAAM8G,eAAe,GAAA9J,OAAA,CAAA8J,eAAA,GAAGpJ,QAAQ,CAACsC,aAAa,CAAC,qBAAqB,CAAC;AACrE,IAAM+G,aAAa,GAAA/J,OAAA,CAAA+J,aAAA,GAAGrJ,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AACvE,IAAMgH,gBAAgB,GAAAhK,OAAA,CAAAgK,gBAAA,GAAGtJ,QAAQ,CAACsC,aAAa,CAAC,uBAAuB,CAAC;AACxE,IAAMiH,gBAAgB,GAAAjK,OAAA,CAAAiK,gBAAA,GAAGvJ,QAAQ,CAAC2E,cAAc,CAAC,gBAAgB,CAAC;AAClE,IAAM6E,eAAe,GAAAlK,OAAA,CAAAkK,eAAA,GAAGxJ,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AACzE,IAAMmH,mBAAmB,GAAAnK,OAAA,CAAAmK,mBAAA,GAAGzJ,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AAC7E,IAAMoH,qBAAqB,GAAApK,OAAA,CAAAoK,qBAAA,GAAG1J,QAAQ,CAACsC,aAAa,CAClD,6BACF,CAAC;AACD,IAAMqH,qBAAqB,GAAArK,OAAA,CAAAqK,qBAAA,GAAG3J,QAAQ,CAACsC,aAAa,CAClD,4BACF,CAAC;AACD,IAAMsH,mBAAmB,GAAAtK,OAAA,CAAAsK,mBAAA,GAAG5J,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AAC7E,IAAMuH,UAAU,GAAAvK,OAAA,CAAAuK,UAAA,GAAG7J,QAAQ,CAACsC,aAAa,CAAC,eAAe,CAAC;AAC1D,IAAMwH,WAAW,GAAAxK,OAAA,CAAAwK,WAAA,GAAG9J,QAAQ,CAACsC,aAAa,CAAC,gBAAgB,CAAC;AAC5D,IAAMyH,WAAW,GAAAzK,OAAA,CAAAyK,WAAA,GAAG/J,QAAQ,CAACsC,aAAa,CAAC,gBAAgB,CAAC;AAC5D,IAAM0H,SAAS,GAAA1K,OAAA,CAAA0K,SAAA,GAAGhK,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AACxD,IAAMD,QAAQ,GAAA/C,OAAA,CAAA+C,QAAA,GAAGrC,QAAQ,CAACsC,aAAa,CAAC,aAAa,CAAC;AACtD,IAAM2H,mBAAmB,GAAA3K,OAAA,CAAA2K,mBAAA,GAAGjK,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AAC7E,IAAM4H,qBAAqB,GAAA5K,OAAA,CAAA4K,qBAAA,GAAGlK,QAAQ,CAACsC,aAAa,CAClD,2BACF,CAAC;AACD,IAAM6H,cAAc,GAAA7K,OAAA,CAAA6K,cAAA,GAAGnK,QAAQ,CAACsC,aAAa,CAAC,oBAAoB,CAAC;AACnE,IAAM8H,mBAAmB,GAAA9K,OAAA,CAAA8K,mBAAA,GAAGpK,QAAQ,CAACsC,aAAa,CAAC,yBAAyB,CAAC;AAC7E,IAAM+H,eAAe,GAAA/K,OAAA,CAAA+K,eAAA,GAAGrK,QAAQ,CAACsC,aAAa,CAAC,qBAAqB,CAAC;AACrE,IAAMgI,sBAAsB,GAAAhL,OAAA,CAAAgL,sBAAA,GAAGtK,QAAQ,CAACsC,aAAa,CACnD,8BACF,CAAC;AACD,IAAMiI,uBAAuB,GAAAjL,OAAA,CAAAiL,uBAAA,GAAGvK,QAAQ,CAAC2E,cAAc,CACrD,2BACF,CAAC;AACD,IAAM6F,0BAA0B,GAAAlL,OAAA,CAAAkL,0BAAA,GAAGxK,QAAQ,CAACsC,aAAa,CACvD,iCACF,CAAC;AACD,IAAMmI,0BAA0B,GAAAnL,OAAA,CAAAmL,0BAAA,GAAGzK,QAAQ,CAAC2E,cAAc,CACxD,+BACF,CAAC;AACD,IAAM+F,aAAa,GAAApL,OAAA,CAAAoL,aAAA,GAAG1K,QAAQ,CAAC2E,cAAc,CAAC,eAAe,CAAC;AAC9D,IAAMgG,oBAAoB,GAAArL,OAAA,CAAAqL,oBAAA,GAAG3K,QAAQ,CAACsC,aAAa,CACjD,2BACF,CAAC;AAED,IAAMsI,qBAAqB,GAAAtL,OAAA,CAAAsL,qBAAA,GAAG5K,QAAQ,CAACsC,aAAa,CAClD,4BACF,CAAC;AAED,IAAMuI,mBAAmB,GAAAvL,OAAA,CAAAuL,mBAAA,GAAG7K,QAAQ,CAACsC,aAAa,CAAC,0BAA0B,CAAC;AAC9E,IAAMwI,SAAS,GAAAxL,OAAA,CAAAwL,SAAA,GAAG9K,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AACxD,IAAMyI,oBAAoB,GAAAzL,OAAA,CAAAyL,oBAAA,GAAG/K,QAAQ,CAACsC,aAAa,CACjD,4BACF,CAAC;AACD,IAAM0I,gBAAgB,GAAA1L,OAAA,CAAA0L,gBAAA,GAAGhL,QAAQ,CAACsC,aAAa,CAAC,sBAAsB,CAAC;;;;;;;;;ACvDvE,SAAS2I,YAAYA,CAACnY,IAAI,EAAE;EAC1B,IAAMyR,SAAS,GAAGzR,IAAI,CAACyR,SAAS;EAChCA,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;EAChCF,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AAC/B;AACA,SAAS0G,aAAaA,CAACpY,IAAI,EAAE;EAC3B,IAAMyR,SAAS,GAAGzR,IAAI,CAACyR,SAAS;EAChCA,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AAClC;;;;;;;;;;;;;ACTA,IAAAjF,qBAAA,GAAAC,OAAA;AAKA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAA2L,UAAA,GAAA3L,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAyL,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAA5F,MAAA,qBAAA8F,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAM,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAR,CAAA,CAAA5F,MAAA,WAAAwG,IAAA,mBAAAA,IAAA,SAAA9Y,KAAA,EAAAkY,CAAA,CAAAQ,CAAA,UAAA3E,CAAA,WAAAA,EAAAgF,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAR,EAAA,GAAAA,EAAA,CAAAiB,IAAA,CAAAnB,CAAA,MAAAW,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAlB,EAAA,CAAAmB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAvF,CAAA,WAAAA,EAAAyF,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAd,EAAA,CAAAqB,MAAA,UAAArB,EAAA,CAAAqB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;AAAA,SAAAM,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAC9C,IACEC,oBAAoB,GAMlBna,kBAAc,CANhBma,oBAAoB;EACpB3R,iBAAiB,GAKfxI,kBAAc,CALhBwI,iBAAiB;EACjBjC,cAAc,GAIZvG,kBAAc,CAJhBuG,cAAc;EACdN,gBAAgB,GAGdjG,kBAAc,CAHhBiG,gBAAgB;EAChB9B,wBAAwB,GAEtBnE,kBAAc,CAFhBmE,wBAAwB;EACxBH,wBAAwB,GACtBhE,kBAAc,CADhBgE,wBAAwB;AAG1B,IAAMqI,KAAK,GAAG9F,cAAc,CAAC,CAAC;AAC9B,IAAMgP,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAIuL,YAAY;AAChB,IAAIC,aAAa,GAAG,IAAI;AAEjB,SAASC,SAASA,CAAA,EAAG;EAC1BF,YAAY,GAAGpW,wBAAwB,CAAC,CAAC;EACzCuI,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAACkI,IAAI,EAAK;IACzDA,IAAI,CAAC9D,MAAM,CAAC,CAAC;EACf,CAAC,CAAC;AACJ;AAEO,SAASuJ,gBAAgBA,CAC9BjI,QAAQ,EACRkI,IAAI,EACJC,QAAQ,EACRC,QAAQ,EACR/N,KAAK,EAEL;EAAA,IADAgO,WAAW,GAAAnH,SAAA,CAAAvB,MAAA,QAAAuB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;EAEf;EACA,IAAIgH,IAAI,CAAC3F,OAAO,CAAC+F,SAAS,KAAK,OAAO,EAAE;IACtC,IAAMC,KAAK,GAAG5G,IAAI,CAAC6G,KAAK,CAACxI,QAAQ,CAACyI,CAAC,GAAGN,QAAQ,CAACM,CAAC,EAAEzI,QAAQ,CAAC0I,CAAC,GAAGP,QAAQ,CAACO,CAAC,CAAC;IAC1E,IAAIC,cAAc,GAAG,MAAM,GAAGP,QAAQ;IAEtC,IAAMQ,KAAK,GAAG7O,KAAK,GAAGM,KAAK,GAAGsO,cAAc;IAC5C;IACA,IAAME,kBAAkB,GAAGlH,IAAI,CAACmH,GAAG,CAACP,KAAK,CAAC,GAAGK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IAC3D,IAAMG,kBAAkB,GAAGpH,IAAI,CAACqH,GAAG,CAACT,KAAK,CAAC,GAAGK,KAAK,GAAG,CAAC;IAEtD,IAAApb,6CAAuB,EAAC0a,IAAI,EAAE,QAAQ,EAAEW,kBAAkB,CAAC;IAC3D,IAAArb,6CAAuB,EAAC0a,IAAI,EAAE,UAAU,EAAEa,kBAAkB,CAAC;IAE7D/J,UAAU,CAAC,YAAM;MACfkJ,IAAI,CAAC3F,OAAO,CAACE,MAAM,GAAG,MAAM;MAC5ByF,IAAI,CAAC3F,OAAO,CAAC+F,SAAS,GAAG,MAAM;IACjC,CAAC,EAAEJ,IAAI,CAAC3F,OAAO,CAAC0G,iBAAiB,CAAC,CAAC,CAAC;EACtC,CAAC,MAAM;IACL;IACAf,IAAI,CAAC3F,OAAO,CAACE,MAAM,GAAG,MAAM;IAC5B,IAAM8F,MAAK,GAAG5G,IAAI,CAAC6G,KAAK,CAACxI,QAAQ,CAACyI,CAAC,GAAGN,QAAQ,CAACM,CAAC,EAAEzI,QAAQ,CAAC0I,CAAC,GAAGP,QAAQ,CAACO,CAAC,CAAC;IAC1E,IAAIQ,mBAAmB,GACrBhB,IAAI,CAAC3F,OAAO,CAAC4G,cAAc,KAAK,MAAM,GAClCjB,IAAI,CAAC3F,OAAO,CAAC6G,mBAAmB,GAChC,CAAC;IACP,IAAIT,eAAc,GAAGN,WAAW,GAAG,MAAM,GAAGD,QAAQ;IACpD,IAAMQ,MAAK,GAAG7O,KAAK,GAAGM,KAAK,GAAG6O,mBAAmB,GAAGP,eAAc;;IAElE;IACA,IAAMU,MAAM,GAAG1H,IAAI,CAACmH,GAAG,CAACP,MAAK,CAAC,GAAGK,MAAK;IACtC,IAAMU,MAAM,GAAG3H,IAAI,CAACqH,GAAG,CAACT,MAAK,CAAC,GAAGK,MAAK;;IAEtC;IACA,IAAApb,6CAAuB,EAAC0a,IAAI,EAAE,QAAQ,EAAEmB,MAAM,CAAC;IAC/C,IAAA7b,6CAAuB,EAAC0a,IAAI,EAAE,UAAU,EAAEoB,MAAM,GAAG,CAAC,CAAC,CAAC;EACxD;AACF;AAEO,SAASC,UAAUA,CAAClP,KAAK,EAAEnM,UAAU,EAAE;EAC5C+L,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAACkI,IAAI,EAAK;IACzD;IACA,IAAMxC,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;IAC9B,IAAMoL,QAAQ,GAAGhH,IAAI,CAACnE,qBAAqB,CAAC,CAAC;IAC7C;IACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAGc,QAAQ,CAACd,CAAC,EAAE,CAAC,CAAC,GAClC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAGe,QAAQ,CAACf,CAAC,EAAE,CAAC,CACvC,CAAC;;IAED;IACA,IAAIjG,IAAI,CAACD,OAAO,CAACE,MAAM,KAAK,MAAM,IAAI2F,QAAQ,GAAG,GAAG,EAAE;MACpDH,gBAAgB,CAACjI,QAAQ,EAAEwC,IAAI,EAAEgH,QAAQ,EAAEpB,QAAQ,EAAE/N,KAAK,CAAC;IAC7D,CAAC,MAAM;MACL;MACA,IAAImI,IAAI,CAACD,OAAO,CAACmH,UAAU,EAAE;QAC3B,IAAAlc,6CAAuB,EACrBgV,IAAI,EACJ,QAAQ,EACRnI,KAAK,GAAGnM,UAAU,GAAGyF,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAC7C,CAAC;MACH,CAAC,MAAM;QACL,IAAAnG,6CAAuB,EACrBgV,IAAI,EACJ,QAAQ,EACRnI,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAChC,CAAC;MACH;IACF;;IAEA;IACA,IAAI,IAAAjN,uCAAiB,EAAC0V,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC7CA,IAAI,CAAC9D,MAAM,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEF,IAAIoJ,YAAY,IAAI,CAAC,IAAI5R,iBAAiB,CAAC,CAAC,EAAE;IAC5C,IAAAyT,0BAAe,EAAC,MAAM,CAAC;IACvB5B,aAAa,GAAG,KAAK;IACrBD,YAAY,GACV8B,mBAAmB,CACjBlY,wBAAwB,CAAC,CAAC,EAC1BG,wBAAwB,CAAC,CAC3B,CAAC,GAAG3D,UAAU;EAClB;EAEA4Z,YAAY,IAAIzN,KAAK;AACvB;AAEO,SAASwP,YAAYA,CAAA,EAAG;EAC7B,OAAO9C,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,EAAE4P,GAAG,CAAC,UAACtH,IAAI,EAAK;IACjE,OAAO;MACL1B,EAAE,EAAE0B,IAAI,CAAC1B,EAAE;MACXiJ,IAAI,EAAEvH,IAAI,CAACnE,qBAAqB,CAAC;IACnC,CAAC;EACH,CAAC,CAAC;AACJ;AAEO,SAAS2L,WAAWA,CAAA,EAAG;EAC5BjC,aAAa,GAAG,IAAI;EACpB;EACA,IAAMkC,WAAW,GAAG3H,+BAAkB,CAAC4H,MAAM,CAC3C,UAACC,GAAG,EAAEjC,IAAI;IAAA,OAAKiC,GAAG,GAAGjC,IAAI,CAACkC,MAAM;EAAA,GAChC,CACF,CAAC;;EAED;EACA,IAAMC,YAAY,GAAG1I,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGsH,WAAW;;EAEhD;EACA,IAAIK,gBAAgB,GAAG,CAAC;EACxB,IAAIjI,mBAAmB;EAAC,IAAAkI,SAAA,GAAAjF,0BAAA,CACLhD,+BAAkB;IAAAkI,KAAA;EAAA;IAArC,KAAAD,SAAA,CAAAtE,CAAA,MAAAuE,KAAA,GAAAD,SAAA,CAAArE,CAAA,IAAAC,IAAA,GAAuC;MAAA,IAA5B+B,IAAI,GAAAsC,KAAA,CAAAnd,KAAA;MACbid,gBAAgB,IAAIpC,IAAI,CAACkC,MAAM;MAC/B,IAAIC,YAAY,IAAIC,gBAAgB,EAAE;QACpCjI,mBAAmB,GAAG6F,IAAI;QAC1B;MACF;IACF;EAAC,SAAAzB,GAAA;IAAA8D,SAAA,CAAAnJ,CAAA,CAAAqF,GAAA;EAAA;IAAA8D,SAAA,CAAAlE,CAAA;EAAA;EACD,IAAMoE,OAAO,GAAGxQ,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC7CqI,OAAO,CAAClI,OAAO,CAACC,IAAI,GAAG,IAAI;EAC3BiI,OAAO,CAAClI,OAAO,CAACjB,IAAI,GAAGe,mBAAmB,CAACf,IAAI;EAC/CmJ,OAAO,CAAClI,OAAO,CAACE,MAAM,GAAG,OAAO;EAChCgI,OAAO,CAAClI,OAAO,CAAC+F,SAAS,GAAG,OAAO;EACnCmC,OAAO,CAAClI,OAAO,CAAC6G,mBAAmB,GAAGQ,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC;EACnEa,OAAO,CAAClI,OAAO,CAAC0G,iBAAiB,GAAGW,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC;EACjEa,OAAO,CAAClI,OAAO,CAACG,MAAM,GAAGL,mBAAmB,CAACK,MAAM;EACnD,IACEL,mBAAmB,CAACf,IAAI,KAAK,SAAS,IACtCe,mBAAmB,CAACf,IAAI,KAAK,UAAU,IACvCe,mBAAmB,CAACf,IAAI,KAAK,WAAW,EACxC;IACAmJ,OAAO,CAAClI,OAAO,CAACmI,GAAG,GAAG,IAAI;EAC5B;EACAD,OAAO,CAACjM,SAAS,CAACC,GAAG,CAAC4D,mBAAmB,CAACf,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC;EAC7EmJ,OAAO,CAAC3J,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAChD,IAAAzV,uCAAiB,EAACqd,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC;EACzC,IAAME,eAAe,GAAGC,iBAAiB,CAAC,CAAC;EAC3CH,OAAO,CAACnd,KAAK,CAACud,cAAc,OAAAC,MAAA,CAAOH,eAAe,MAAG;EACrD1H,SAAS,CAAC8H,MAAM,CAACN,OAAO,CAAC;AAC3B;AAEA,SAASb,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;AAEO,SAAS8I,iBAAiBA,CAAA,EAAG;EAClC;EACA,OAAOjJ,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AACxC;;;;;;;;;;AC3LA,IAAAsI,KAAA,GAAAvR,OAAA;AACA,IAAAwR,OAAA,GAAAxR,OAAA;AAEA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA2C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC3C,IAAQxI,sBAAsB,GAC5B3D,kBAAc,CADR2D,sBAAsB;EAAEV,mBAAmB,GACjDjD,kBAAc,CADgBiD,mBAAmB;EAAEC,mBAAmB,GACtElD,kBAAc,CADqCkD,mBAAmB;AAGxE,IAAMua,cAAc,GAAG;EACrBC,MAAM,EAAEC,2BAAmB;EAC3B7I,IAAI,EAAEwH;AACR,CAAC;AAED,IAAMsB,UAAU,GAAG,EAAE,CAAC,CAAC;AACvB,IAAIC,UAAU;AACd,IAAIC,eAAe;AAEZ,SAAS7B,eAAeA,CAAC8B,SAAS,EAAE;EACzC;EACAH,UAAU,CAACI,IAAI,CAACD,SAAS,CAAC;EAC1B;AACF;;AAEO,SAASE,aAAaA,CAACtR,KAAK,EAAEnM,UAAU,EAAE;EAC/C;EACA,IAAIod,UAAU,CAAC3L,MAAM,GAAG,CAAC,EAAE;IACzB/O,mBAAmB,CAAC,KAAK,CAAC;IAC1B;IACA,IAAMgb,aAAa,GAAGN,UAAU,CAACO,KAAK,CAAC,CAAC;IAExCxa,sBAAsB,CAACua,aAAa,CAAC;IACrC;;IAEA;IACA,IAAIT,cAAc,CAACS,aAAa,CAAC,EAAE;MACjC;MACA,IACGA,aAAa,KAAK,QAAQ,IAAIJ,eAAe,KAAK,MAAM,IACxDI,aAAa,KAAK,MAAM,IAAIJ,eAAe,KAAK,QAAS,IACzDI,aAAa,KAAK,QAAQ,IAAIJ,eAAe,KAAK,QAAS,EAC5D;QACA;QACAD,UAAU,GAAG,IAAI,IAAIlR,KAAK,GAAGnM,UAAU,CAAC;MAC1C,CAAC,MAAM;QACL;QACAqd,UAAU,GAAG,CAAC;MAChB;MAEAvM,UAAU,CAAC,YAAM;QACfwM,eAAe,GAAGI,aAAa;QAC/Bhb,mBAAmB,CAAC,IAAI,CAAC;QACzBua,cAAc,CAACS,aAAa,CAAC,CAAC,CAAC;MACjC,CAAC,EAAEL,UAAU,CAAC;MACd;IACF,CAAC,MAAM;MACL;IAAA;EAEJ,CAAC,MAAM;IACL;IACA;EACF;AACF;;AAEA;AACA;AACA;;AAEO,SAASO,eAAeA,CAACzR,KAAK,EAAEnM,UAAU,EAAE;EACjD,IAAIyC,mBAAmB,CAAC,CAAC,EAAE;IACzBgb,aAAa,CAACtR,KAAK,EAAEnM,UAAU,CAAC;EAClC;AACF;;;;;;;;;;;ACtEA,IAAAuL,qBAAA,GAAAC,OAAA;AAKA,IAAAqS,KAAA,GAAAnS,sBAAA,CAAAF,OAAA;AACA,IAAAsS,KAAA,GAAApS,sBAAA,CAAAF,OAAA;AACA,IAAAuS,MAAA,GAAArS,sBAAA,CAAAF,OAAA;AACA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AAKA,IAAAyS,cAAA,GAAAzS,OAAA;AAEA,IAAA2L,UAAA,GAAA3L,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAyL,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAA5F,MAAA,qBAAA8F,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAM,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAR,CAAA,CAAA5F,MAAA,WAAAwG,IAAA,mBAAAA,IAAA,SAAA9Y,KAAA,EAAAkY,CAAA,CAAAQ,CAAA,UAAA3E,CAAA,WAAAA,EAAAgF,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAR,EAAA,GAAAA,EAAA,CAAAiB,IAAA,CAAAnB,CAAA,MAAAW,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAlB,EAAA,CAAAmB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAvF,CAAA,WAAAA,EAAAyF,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAd,EAAA,CAAAqB,MAAA,UAAArB,EAAA,CAAAqB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;AAAA,SAAAM,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAC9C,IACE7P,kBAAkB,GAShBrK,kBAAc,CAThBqK,kBAAkB;EAClBD,kBAAkB,GAQhBpK,kBAAc,CARhBoK,kBAAkB;EAClBH,iBAAiB,GAOfjK,kBAAc,CAPhBiK,iBAAiB;EACjBH,UAAU,GAMR9J,kBAAc,CANhB8J,UAAU;EACVP,iBAAiB,GAKfvJ,kBAAc,CALhBuJ,iBAAiB;EACjBrB,kBAAkB,GAIhBlI,kBAAc,CAJhBkI,kBAAkB;EAClB3E,oBAAoB,GAGlBvD,kBAAc,CAHhBuD,oBAAoB;EACpBH,oBAAoB,GAElBpD,kBAAc,CAFhBoD,oBAAoB;EACpBmD,cAAc,GACZvG,kBAAc,CADhBuG,cAAc;AAEhB,IAAMmY,cAAc,GAAG,EAAE;AAEzB,IAAMnJ,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAI8P,cAAc;AACX,SAASC,WAAWA,CAAA,EAAG;EAC5BD,cAAc,GAAGvb,oBAAoB,CAAC,CAAC;EACvCmJ,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACI,OAAO,CAAC,UAAC8Q,MAAM,EAAK;IAC7DA,MAAM,CAAC1M,MAAM,CAAC,CAAC;EACjB,CAAC,CAAC;AACJ;AAEA,SAAS6N,kBAAkBA,CAACzJ,QAAQ,EAAE;EACpC,OAAOsJ,cAAc,CAACI,QAAQ,CAAC1J,QAAQ,CAAC;AAC1C;AAEA,IAAI2J,cAAc,GAAG,CAAC,CAAC,CAAC;AACxB,IAAIC,eAAe,GAAG,IAAI;AAEnB,SAASrB,mBAAmBA,CAAA,EAAG;EACpCqB,eAAe,GAAG,IAAI;EACtBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,IAAMC,QAAQ,GAAG,CAAC;EAClB,IAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;EACpB,IAAIC,OAAO,CAAC,CAAC;;EAEb,IAAMC,aAAa,GAAGpD,mBAAmB,CAACiD,QAAQ,EAAEC,QAAQ,CAAC;EAE7D,IAAIE,aAAa,IAAIH,QAAQ,EAAE;IAC7BE,OAAO,GAAGN,cAAc,EAAE;IAC1B,KAAK,IAAI1G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,aAAa,EAAEjH,CAAC,EAAE,EAAE;MACtC,IAAIkH,WAAW;MACf,GAAG;QACDA,WAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,WAAW,CAAC;MAExCb,cAAc,CAACV,IAAI,CAAC;QAClB5I,QAAQ,EAAEmK,WAAW;QACrBF,OAAO,EAAEA;MACX,CAAC,CAAC;MACFG,YAAY,CAACD,WAAW,EAAEF,OAAO,CAAC;IACpC;EACF,CAAC,MAAM;IACL,IAAIE,YAAW;IACf,GAAG;MACDA,YAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,YAAW,CAAC;IAExCb,cAAc,CAACV,IAAI,CAAC;MAClB5I,QAAQ,EAAEmK;IACZ,CAAC,CAAC;IACFC,YAAY,CAACD,YAAW,CAAC;EAC3B;;EAEA;EACAb,cAAc,CAACzM,MAAM,GAAG,CAAC;AAC3B;AAEA,IAAMwN,iBAAiB,GAAG,GAAG,CAAC,CAAC;AAC/B,IAAIC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC;;AAEvB,SAASC,YAAYA,CAACjT,KAAK,EAAEnM,UAAU,EAAE;EAC9C+L,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACI,OAAO,CAAC,UAAC8Q,MAAM,EAAK;IAC7D;IACA,IAAMmC,gBAAgB,GAAGnC,MAAM,CAAC7I,OAAO,CAACgL,gBAAgB,KAAK,MAAM;;IAEnE;IACA,IAAMvN,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;IAC9B,IAAMoP,UAAU,GAAGpC,MAAM,CAAC/M,qBAAqB,CAAC,CAAC;;IAEjD;IACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAG8E,UAAU,CAAC9E,CAAC,EAAE,CAAC,CAAC,GACpC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAG+E,UAAU,CAAC/E,CAAC,EAAE,CAAC,CACzC,CAAC;IACD,IAAMgF,SAAS,GAAG,IAAAC,wBAAW,EAAC1N,QAAQ,EAAEwN,UAAU,CAAC;;IAEnD;IACA,IAAMT,OAAO,GAAG3B,MAAM,CAAC7I,OAAO,CAACwK,OAAO;IACtC,IAAMY,SAAS,GAAGZ,OAAO,KAAK5L,SAAS;;IAEvC;IACA,IAAIyM,UAAU,GAAG,CAAC,CAAC;IACnB;IACA,IAAMC,gBAAgB,GAAGzF,QAAQ,GAAG+E,iBAAiB;;IAErD;IACA,IAAMW,YAAY,GAAG1C,MAAM,CAAC7I,OAAO,CAACuL,YAAY,KAAK,MAAM;;IAE3D;IACA,IAAMC,aAAa,GAAGP,UAAU,CAACtN,KAAK,GAAGF,QAAQ,CAACC,IAAI;IAEtD,IAAI0N,SAAS,EAAE;MACb;MACA,IAAI,CAACP,YAAY,CAACY,GAAG,CAACjB,OAAO,CAAC,EAAE;QAC9B;QACAK,YAAY,CAACa,GAAG,CAAClB,OAAO,EAAE;UACxBmB,UAAU,EAAE,KAAK;UACjBJ,YAAY,EAAE,KAAK;UACnBP,gBAAgB,EAAE;QACpB,CAAC,CAAC;MACJ;;MAEA;MACAK,UAAU,GAAGR,YAAY,CAACe,GAAG,CAACpB,OAAO,CAAC;;MAEtC;MACAa,UAAU,CAACM,UAAU,GACnBN,UAAU,CAACM,UAAU,IAAI9C,MAAM,CAAC7I,OAAO,CAAC2L,UAAU,KAAK,MAAM;MAC/DN,UAAU,CAACE,YAAY,GAAGF,UAAU,CAACE,YAAY,IAAIA,YAAY;;MAEjE;MACAF,UAAU,CAACG,aAAa,GAAGH,UAAU,CAACG,aAAa,IAAIA,aAAa;IACtE;IAEA,IAAIF,gBAAgB,EAAE;MACpB;MACAzC,MAAM,CAAC7I,OAAO,CAAC2L,UAAU,GAAG,MAAM;IACpC,CAAC,MAAM;MACL;MACA9C,MAAM,CAAC7I,OAAO,CAAC2L,UAAU,GAAG,OAAO;IACrC;IAEA,IACEP,SAAS,IACTC,UAAU,CAACM,UAAU,IACrB,CAACN,UAAU,CAACE,YAAY,IACxBF,UAAU,CAACG,aAAa,IACxB,CAACH,UAAU,CAACL,gBAAgB,EAC5B;MACA;MACA;MACA,IAAIa,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;MACjDC,kBAAkB,CAAEqW,sBAAsB,IAAI,CAAE,CAAC;MACjD,IAAAC,sCAAyB,EAAC,CAAC;MAC3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAT,UAAU,CAACL,gBAAgB,GAAG,IAAI;IACpC;IAEA,IACE,CAACnC,MAAM,CAAC7I,OAAO,CAACuL,YAAY,IAC5BL,SAAS,KAAK,IAAI,IAClB,CAACrC,MAAM,CAAC7I,OAAO,CAAC+L,YAAY,EAC5B;MACA,IAAI3W,iBAAiB,CAAC,CAAC,IAAIH,UAAU,CAAC,CAAC,EAAE;QACvC,IAAM+W,IAAI,GAAGtU,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;QAC1CmM,IAAI,CAAC/P,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACvC8P,IAAI,CAACjhB,KAAK,CAACwV,QAAQ,GAAG,UAAU;QAChCyL,IAAI,CAACjhB,KAAK,CAAC2S,IAAI,GAAGmL,MAAM,CAACpI,UAAU,GAAG,IAAI;QAC1CuL,IAAI,CAACjhB,KAAK,CAACuT,GAAG,GAAGuK,MAAM,CAACrI,SAAS,GAAG,EAAE,GAAG,IAAI;QAC7CqI,MAAM,CAACoD,UAAU,CAACC,YAAY,CAACF,IAAI,EAAEnD,MAAM,CAAC;QAC5C,IAAM1I,MAAM,GAAG5K,kBAAkB,CAAC,CAAC,GAAGb,iBAAiB,CAAC,CAAC;QACzDsX,IAAI,CAACG,WAAW,OAAA5D,MAAA,CAAOpI,MAAM,CAAE;QAC/B,IAAAiM,kCAAqB,EAACjM,MAAM,CAAC;QAC7B0I,MAAM,CAAC5M,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;QACjC2M,MAAM,CAAC7I,OAAO,CAAC+L,YAAY,GAAG,IAAI;QAClCC,IAAI,CAACzQ,gBAAgB,CAAC,cAAc,EAAE,YAAM;UAC1CyQ,IAAI,CAAC7P,MAAM,CAAC,CAAC;QACf,CAAC,CAAC;QACF;QACA0M,MAAM,CAACtN,gBAAgB,CAAC,cAAc,EAAE,YAAM;UAC5CsN,MAAM,CAAC1M,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL0M,MAAM,CAAC7I,OAAO,CAACuL,YAAY,GAAG,IAAI;MACpC;IACF;IAEA,IAAAtgB,6CAAuB,EACrB4d,MAAM,EACN,QAAQ,EACR/Q,KAAK,GAAGnM,UAAU,GAAG+F,cAAc,CAAC,CAAC,GAAG,CAAC,CAC3C,CAAC;IACD,IAAI,IAAAnH,uCAAiB,EAACse,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC/CA,MAAM,CAAC1M,MAAM,CAAC,CAAC;IACjB;EACF,CAAC,CAAC;EAEF,IAAI2N,cAAc,IAAI,CAAC,IAAIzW,kBAAkB,CAAC,CAAC,EAAE;IAC/C,IAAA+T,0BAAe,EAAC,QAAQ,CAAC;IACzB+C,eAAe,GAAG,KAAK;IACvBL,cAAc,GACZzC,mBAAmB,CAAC9Y,oBAAoB,CAAC,CAAC,EAAEG,oBAAoB,CAAC,CAAC,CAAC,GACnE/C,UAAU;EACd;EACAme,cAAc,IAAIhS,KAAK;AACzB;AAEO,SAASuU,cAAcA,CAAA,EAAG;EAC/B,OAAO7H,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,EAAE4P,GAAG,CAAC,UAACsB,MAAM,EAAK;IACrE,OAAOA,MAAM,CAAC/M,qBAAqB,CAAC,CAAC;EACvC,CAAC,CAAC;AACJ;;AAEA;AACA,IAAMwQ,YAAY,GAAG,CACnB;EAAExT,GAAG,EAAEyT,aAAK;EAAE1E,MAAM,EAAE;AAAE,CAAC,EACzB;EAAE/O,GAAG,EAAE0T,aAAK;EAAE3E,MAAM,EAAE;AAAE,CAAC,EACzB;EAAE/O,GAAG,EAAE2T,cAAK;EAAE5E,MAAM,EAAE;AAAE;AACxB;AAAA,CACD;;AAED,SAAS8C,YAAYA,CAACD,WAAW,EAAEF,OAAO,EAAE;EAC1C;EACA,IAAM9C,WAAW,GAAG4E,YAAY,CAAC3E,MAAM,CACrC,UAACC,GAAG,EAAE8E,KAAK;IAAA,OAAK9E,GAAG,GAAG8E,KAAK,CAAC7E,MAAM;EAAA,GAClC,CACF,CAAC;;EAED;EACA,IAAMC,YAAY,GAAG1I,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGsH,WAAW;;EAEhD;EACA,IAAIK,gBAAgB,GAAG,CAAC;EACxB,IAAI4E,aAAa;EAAC,IAAA3E,SAAA,GAAAjF,0BAAA,CACEuJ,YAAY;IAAArE,KAAA;EAAA;IAAhC,KAAAD,SAAA,CAAAtE,CAAA,MAAAuE,KAAA,GAAAD,SAAA,CAAArE,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvB8I,KAAK,GAAAzE,KAAA,CAAAnd,KAAA;MACdid,gBAAgB,IAAI2E,KAAK,CAAC7E,MAAM;MAChC,IAAIC,YAAY,IAAIC,gBAAgB,EAAE;QACpC4E,aAAa,GAAGD,KAAK;QACrB;MACF;IACF;EAAC,SAAAxI,GAAA;IAAA8D,SAAA,CAAAnJ,CAAA,CAAAqF,GAAA;EAAA;IAAA8D,SAAA,CAAAlE,CAAA;EAAA;EAED,IAAM+E,MAAM,GAAGnR,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC5CgJ,MAAM,CAAC7I,OAAO,CAAC6I,MAAM,GAAG,IAAI;EAC5BA,MAAM,CAAC/P,GAAG,GAAG6T,aAAa,CAAC7T,GAAG;EAC9B+P,MAAM,CAAC5M,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,cAAc,CAAC;EAC9C;EACA,IAAIkD,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;IACvByI,MAAM,CAAC9d,KAAK,CAAC6hB,SAAS,GAAG,YAAY;EACvC;EACA;EACA/D,MAAM,CAAC7I,OAAO,CAACwK,OAAO,GAAGA,OAAO;EAEhC,IAAA3f,uCAAiB,EAACge,MAAM,EAAE,QAAQ,EAAE6B,WAAW,CAAC;EAChD,IAAA7f,uCAAiB,EAACge,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC;EAC3C,IAAAhe,uCAAiB,EAACge,MAAM,EAAE,UAAU,KAAAN,MAAA,CAAKlB,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;EAE3E3G,SAAS,CAAC8H,MAAM,CAACK,MAAM,CAAC;AAC1B;AAEA,SAASxB,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;;;;ACzRA,IAAAnI,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA0C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAE1C,IACEtH,kBAAkB,GAIhB7E,kBAAc,CAJhB6E,kBAAkB;EAClBG,oBAAoB,GAGlBhF,kBAAc,CAHhBgF,oBAAoB;EACpBT,mBAAmB,GAEjBvE,kBAAc,CAFhBuE,mBAAmB;EACnBG,kBAAkB,GAChB1E,kBAAc,CADhB0E,kBAAkB;;AAGpB;AACA,IAAMgd,sBAAsB,GAAI,YAAY;EAC1C;EACA,IAAIxhB,KAAK,GAAG;IACVyhB,IAAI,EAAE;MAAEjF,MAAM,EAAE,CAAC;MAAEkF,cAAc,EAAE/c;IAAmB,CAAC;IACvD;IACAgd,KAAK,EAAE;MAAEnF,MAAM,EAAE,EAAE;MAAEkF,cAAc,EAAErd;IAAoB;IACzD;IACA;EACF,CAAC;;EAED,OAAO;IACLud,gBAAgB,EAAE,SAAAA,iBAAA,EAAY;MAC5B,OAAO5hB,KAAK;IACd,CAAC;IACDsL,WAAW,EAAE,SAAAA,YAAUC,SAAS,EAAE;MAChCC,MAAM,CAACC,MAAM,CAACzL,KAAK,EAAEuL,SAAS,CAAC;IACjC;EACF,CAAC;AACH,CAAC,CAAE,CAAC;AAAC,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEU4V,sBAAsB;;;;;;;;AC9BrC,IAAAzV,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA2C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAEpC,SAAS4V,gBAAgBA,CAACC,WAAW,EAAEC,MAAM,EAAE;EACpD,IAAMlF,OAAO,GAAGxQ,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC7CqI,OAAO,CAAClI,OAAO,IAAAuI,MAAA,CAAI4E,WAAW,EAAG,GAAG,IAAI;EACxCjF,OAAO,CAACjM,SAAS,CAACC,GAAG,IAAAqM,MAAA,CAChB4E,WAAW,qBAAA5E,MAAA,CACX4E,WAAW,sBAChB,CAAC;EACDjF,OAAO,CAAC3J,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAEhD8M,MAAM,CAAC5E,MAAM,CAACN,OAAO,CAAC;AACxB;;;;;;;;;;;;;ACZA,IAAAhR,qBAAA,GAAAC,OAAA;AAKA,IAAAkW,MAAA,GAAAhW,sBAAA,CAAAF,OAAA;AACA,IAAAmW,OAAA,GAAAjW,sBAAA,CAAAF,OAAA;AACA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAoW,cAAA,GAAAlW,sBAAA,CAAAF,OAAA;AACA,IAAAqW,WAAA,GAAArW,OAAA;AAEA,IAAAuR,KAAA,GAAAvR,OAAA;AAA2C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAyL,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAA5F,MAAA,qBAAA8F,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAM,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAR,CAAA,CAAA5F,MAAA,WAAAwG,IAAA,mBAAAA,IAAA,SAAA9Y,KAAA,EAAAkY,CAAA,CAAAQ,CAAA,UAAA3E,CAAA,WAAAA,EAAAgF,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAR,EAAA,GAAAA,EAAA,CAAAiB,IAAA,CAAAnB,CAAA,MAAAW,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAlB,EAAA,CAAAmB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAvF,CAAA,WAAAA,EAAAyF,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAd,EAAA,CAAAqB,MAAA,UAAArB,EAAA,CAAAqB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;AAAA,SAAAM,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAC3C,IAAQnS,oBAAoB,GAAuB/H,kBAAc,CAAzD+H,oBAAoB;EAAE9B,gBAAgB,GAAKjG,kBAAc,CAAnCiG,gBAAgB;AAC9C,IAAQ6b,gBAAgB,GAAKJ,sBAAsB,CAA3CI,gBAAgB;AACxB,IAAMQ,iBAAiB,GAAG,EAAE;AAE5B,IAAMjW,KAAK,GAAGpG,gBAAgB,CAAC,CAAC;AAChC,IAAMsc,qBAAqB,GAAG,IAAI;AAClC,IAAMC,qBAAqB,GAAG,IAAI;AAClC,IAAMjN,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAI4T,gBAAgB;AACb,SAASC,aAAaA,CAAA,EAAG;EAC9BD,gBAAgB,GAAGF,qBAAqB;EACxChW,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC,CAACI,OAAO,CAAC,UAACoG,QAAQ,EAAK;IACjEA,QAAQ,CAAChC,MAAM,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;AAEA,SAAS6N,kBAAkBA,CAACzJ,QAAQ,EAAE;EACpC,OAAOkN,iBAAiB,CAACxD,QAAQ,CAAC1J,QAAQ,CAAC;AAC7C;AAEA,SAASuN,uBAAuBA,CAAA,EAAG;EACjC,IAAMC,YAAY,GAAG,CAAC;EACtB,IAAMC,YAAY,GAAG,CAAC,CAAC,CAAC;;EAExB,IAAMC,iBAAiB,GAAG5G,mBAAmB,CAAC0G,YAAY,EAAEC,YAAY,CAAC;EAEzE,IAAIC,iBAAiB,IAAIF,YAAY,EAAE;IACrC,KAAK,IAAIvK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyK,iBAAiB,EAAEzK,CAAC,EAAE,EAAE;MAC1C,IAAIkH,WAAW;MACf,GAAG;QACDA,WAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,WAAW,CAAC;MAExC+C,iBAAiB,CAACtE,IAAI,CAAC;QACrB5I,QAAQ,EAAEmK;MACZ,CAAC,CAAC;MACFwD,cAAc,CAACxD,WAAW,CAAC;IAC7B;EACF,CAAC,MAAM;IACL,IAAIA,YAAW;IACf,GAAG;MACDA,YAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,YAAW,CAAC;IAExC+C,iBAAiB,CAACtE,IAAI,CAAC;MACrB5I,QAAQ,EAAEmK;IACZ,CAAC,CAAC;IACFwD,cAAc,CAACxD,YAAW,CAAC;EAC7B;EAEA+C,iBAAiB,CAACrQ,MAAM,GAAG,CAAC;AAC9B;AAEA,IAAMwN,iBAAiB,GAAG,GAAG,CAAC,CAAC;;AAExB,SAASuD,cAAcA,CAACrW,KAAK,EAAEnM,UAAU,EAAE;EAChD+L,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC,CAACI,OAAO,CAAC,UAACoG,QAAQ,EAAK;IACjE;IACA,IAAMV,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;IAC9B,IAAMuC,YAAY,GAAGD,QAAQ,CAACrC,qBAAqB,CAAC,CAAC;;IAErD;IACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAG/H,YAAY,CAAC+H,CAAC,EAAE,CAAC,CAAC,GACtC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAG9H,YAAY,CAAC8H,CAAC,EAAE,CAAC,CAC3C,CAAC;IACD,IAAMgF,SAAS,GAAG,IAAAC,wBAAW,EAAC1N,QAAQ,EAAEW,YAAY,CAAC;;IAErD;IACA,IAAMgQ,kBAAkB,GAAGvI,QAAQ,GAAG+E,iBAAiB;IAEvD,IAAIwD,kBAAkB,EAAE;MACtB;MACAjQ,QAAQ,CAAC6B,OAAO,CAAC2L,UAAU,GAAG,MAAM;IACtC,CAAC,MAAM;MACL;MACAxN,QAAQ,CAAC6B,OAAO,CAAC2L,UAAU,GAAG,OAAO;IACvC;IAEA,IAAI,CAACxN,QAAQ,CAAC6B,OAAO,CAACuL,YAAY,IAAIL,SAAS,KAAK,IAAI,EAAE;MACxD/M,QAAQ,CAAC6B,OAAO,CAACuL,YAAY,GAAG,IAAI;IACtC;EACF,CAAC,CAAC;EACF7T,QAAQ,CACLC,gBAAgB,CAAC,2BAA2B,CAAC,CAC7CI,OAAO,CAAC,UAACsW,iBAAiB,EAAK;IAC9B,IAAApjB,6CAAuB,EACrBojB,iBAAiB,EACjB,QAAQ,EACRvW,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAChC,CAAC;IACD,IAAI,IAAAjN,uCAAiB,EAAC8jB,iBAAiB,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC1DA,iBAAiB,CAAClS,MAAM,CAAC,CAAC;IAC5B;EACF,CAAC,CAAC;EAEJ,IAAIyR,gBAAgB,IAAI,CAAC,IAAI1a,oBAAoB,CAAC,CAAC,EAAE;IACnD4a,uBAAuB,CAAC,CAAC;IACzBF,gBAAgB,GACdvG,mBAAmB,CAACqG,qBAAqB,EAAEC,qBAAqB,CAAC,GACjEhiB,UAAU;EACd;EACAiiB,gBAAgB,IAAI9V,KAAK;AAC3B;AAEO,SAASwW,gBAAgBA,CAAA,EAAG;EACjC,OAAO9J,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE4P,GAAG,CAAC,UAACpJ,QAAQ,EAAK;IACzE,OAAOA,QAAQ,CAACrC,qBAAqB,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ;;AAEA;AACA,IAAMyS,WAAW,GAAG;EAClB,YAAY,EAAE;IACZ1G,MAAM,EAAE;EACV,CAAC;EACD,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAE,CAAC;EAChB,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAE,CAAC;EAChB,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAE,CAAC;EAChB,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAE;EACf;AACF,CAAC;;AAED,SAAS2G,WAAWA,CAACC,YAAY,EAAEC,YAAY,EAAEpW,MAAM,EAAEkL,CAAC,EAAE;EAC1D,IAAMmL,KAAK,GAAGjX,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC3C8O,KAAK,CAAC7V,GAAG,GAAG8V,cAAS;EACrB,IAAMC,UAAU,GACdrL,CAAC,GAAG,CAAC,KAAK,CAAC,GACP,4BAA4B,GAC5BA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,4BAA4B,GAC5B,4BAA4B;EAElCmL,KAAK,CAAC1S,SAAS,CAACC,GAAG,CAAC,OAAO,EAAE2S,UAAU,CAAC;EACxC;EACA,IAAI,CAACH,YAAY,EAAE;IACjBC,KAAK,CAAC5jB,KAAK,CAAC+jB,UAAU,GAAG,MAAM;EACjC;EACAH,KAAK,CAAC5jB,KAAK,CAACuN,MAAM,GAAGA,MAAM;EAC3BmW,YAAY,CAACjG,MAAM,CAACmG,KAAK,CAAC;AAC5B;AAEA,IAAMI,6BAA6B,GAAGC,gBAAgB,CAAC/B,gBAAgB,CAAC,CAAC,CAAC;AAE1E,SAASgC,eAAeA,CAACR,YAAY,EAAE;EACrC,IAAME,KAAK,GAAGjX,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC3C8O,KAAK,CAAC7V,GAAG,GAAGoW,eAAS;EAErBP,KAAK,CAAC1S,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;;EAEjC;EACA,IAAIkD,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;IACvBuO,KAAK,CAAC5jB,KAAK,CAAC6hB,SAAS,GAAG,YAAY;EACtC;;EAEA;EACA6B,YAAY,CAACjG,MAAM,CAACmG,KAAK,CAAC;AAC5B;AAEA,SAAST,cAAcA,CAACxD,WAAW,EAAE;EACnC,IAAMyE,cAAc,GAAGC,iBAAiB,CAACC,yBAAyB,CAAC;EACnE,IAAMlR,QAAQ,GAAGzG,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC9C,IAAMyP,eAAe,GAAG5X,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EACrDyP,eAAe,CAACtP,OAAO,CAACqO,iBAAiB,GAAG,IAAI;EAChDiB,eAAe,CAACrT,SAAS,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1D,IAAIiT,cAAc,KAAK,YAAY,EAAE;IACnC,KAAK,IAAI3L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2L,cAAc,EAAE3L,CAAC,EAAE,EAAE;MACvC,IAAMlL,MAAM,GAAG6W,cAAc,CAAC/R,MAAM,GAAGoG,CAAC,GAAG,CAAC;MAC5CgL,WAAW,CAACrQ,QAAQ,EAAEqF,CAAC,KAAK,CAAC,EAAElL,MAAM,EAAEkL,CAAC,CAAC;IAC3C;EACF,CAAC,MAAM;IACLyL,eAAe,CAAC9Q,QAAQ,CAAC;IACzB,IAAA+O,4BAAgB,EACdkC,iBAAiB,CAACL,6BAA6B,CAAC,EAChDO,eACF,CAAC;EACH;EACAnR,QAAQ,CAAC6B,OAAO,CAAC7B,QAAQ,GAAG,IAAI;EAChCA,QAAQ,CAAClC,SAAS,CAACC,GAAG,CAAC,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;EAC9DiC,QAAQ,CAACI,EAAE,eAAAgK,MAAA,CAAenJ,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAE;EACzCkP,eAAe,CAAC9G,MAAM,CAACrK,QAAQ,CAAC;EAChC,IAAAtT,uCAAiB,EAACykB,eAAe,EAAE,QAAQ,EAAE5E,WAAW,CAAC;EACzD,IAAA7f,uCAAiB,EACfykB,eAAe,EACf,UAAU,KAAA/G,MAAA,CACPlB,mBAAmB,CAAC,EAAE,EAAE,EAAE,CAAC,CAChC,CAAC;EACD3G,SAAS,CAAC8H,MAAM,CAAC8G,eAAe,CAAC;EACjCC,qBAAqB,CAACD,eAAe,CAAC;AACxC;AAEO,SAASjI,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EAC5C,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;AAEA;AACA,IAAM8P,yBAAyB,GAAGL,gBAAgB,CAACT,WAAW,CAAC;AAExD,SAASS,gBAAgBA,CAACrJ,IAAI,EAAE;EACrC,IAAM6J,IAAI,GAAG3Y,MAAM,CAAC2Y,IAAI,CAAC7J,IAAI,CAAC;EAC9B,IAAM8J,OAAO,GAAGD,IAAI,CAACjI,GAAG,CAAC,UAACmI,GAAG;IAAA,OAAK/J,IAAI,CAAC+J,GAAG,CAAC,CAAC7H,MAAM;EAAA,EAAC;EACnD,IAAM8H,YAAY,GAAGF,OAAO,CAAC9H,MAAM,CAAC,UAACC,GAAG,EAAEC,MAAM;IAAA,OAAKD,GAAG,GAAGC,MAAM;EAAA,GAAE,CAAC,CAAC;EAErE,IAAM+H,iBAAiB,GAAG,CAAC,CAAC;EAC5BJ,IAAI,CAACzX,OAAO,CAAC,UAAC2X,GAAG,EAAEG,KAAK,EAAK;IAC3BD,iBAAiB,CAACF,GAAG,CAAC,GAAGD,OAAO,CAACI,KAAK,CAAC,GAAGF,YAAY;EACxD,CAAC,CAAC;EAEF,OAAOC,iBAAiB;AAC1B;AAEO,SAASR,iBAAiBA,CAACzJ,IAAI,EAAE;EACtC,IAAM6J,IAAI,GAAG3Y,MAAM,CAAC2Y,IAAI,CAAC7J,IAAI,CAAC;EAC9B,IAAMmK,aAAa,GAAGN,IAAI,CAACjI,GAAG,CAAC,UAACmI,GAAG;IAAA,OAAK/J,IAAI,CAAC+J,GAAG,CAAC;EAAA,EAAC;EAClD,IAAMK,WAAW,GAAG3Q,IAAI,CAACgB,MAAM,CAAC,CAAC;EACjC,IAAI4P,qBAAqB,GAAG,CAAC;EAE7B,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgM,IAAI,CAACpS,MAAM,EAAEoG,CAAC,EAAE,EAAE;IACpCwM,qBAAqB,IAAIF,aAAa,CAACtM,CAAC,CAAC;IACzC,IAAIuM,WAAW,IAAIC,qBAAqB,EAAE;MACxC,OAAOR,IAAI,CAAChM,CAAC,CAAC;IAChB;EACF;;EAEA;EACA,OAAOgM,IAAI,CAACA,IAAI,CAACpS,MAAM,GAAG,CAAC,CAAC;AAC9B;AAEA,SAASmS,qBAAqBA,CAACnC,MAAM,EAAE;EACrC;EACA,IAAM1F,WAAW,GAAG3H,+BAAkB,CAAC4H,MAAM,CAC3C,UAACC,GAAG,EAAEjC,IAAI;IAAA,OAAKiC,GAAG,GAAGjC,IAAI,CAACkC,MAAM;EAAA,GAChC,CACF,CAAC;;EAED;EACA,IAAMC,YAAY,GAAG1I,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGsH,WAAW;;EAEhD;EACA,IAAIK,gBAAgB,GAAG,CAAC;EACxB,IAAIjI,mBAAmB;EAAC,IAAAkI,SAAA,GAAAjF,0BAAA,CACLhD,+BAAkB;IAAAkI,KAAA;EAAA;IAArC,KAAAD,SAAA,CAAAtE,CAAA,MAAAuE,KAAA,GAAAD,SAAA,CAAArE,CAAA,IAAAC,IAAA,GAAuC;MAAA,IAA5B+B,IAAI,GAAAsC,KAAA,CAAAnd,KAAA;MACbid,gBAAgB,IAAIpC,IAAI,CAACkC,MAAM;MAC/B,IAAIC,YAAY,IAAIC,gBAAgB,EAAE;QACpCjI,mBAAmB,GAAG6F,IAAI;QAC1B;MACF;IACF;EAAC,SAAAzB,GAAA;IAAA8D,SAAA,CAAAnJ,CAAA,CAAAqF,GAAA;EAAA;IAAA8D,SAAA,CAAAlE,CAAA;EAAA;EACD,IAAMoE,OAAO,GAAGxQ,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC7CqI,OAAO,CAAClI,OAAO,CAACC,IAAI,GAAG,IAAI;EAC3BiI,OAAO,CAAClI,OAAO,CAACmH,UAAU,GAAG,IAAI;EACjCe,OAAO,CAAClI,OAAO,CAACjB,IAAI,GAAGe,mBAAmB,CAACf,IAAI;EAC/CmJ,OAAO,CAAClI,OAAO,CAACE,MAAM,GAAG,OAAO;EAChCgI,OAAO,CAAClI,OAAO,CAAC+F,SAAS,GAAG,OAAO;EACnCmC,OAAO,CAAClI,OAAO,CAAC6G,mBAAmB,GAAGQ,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC;EACnEa,OAAO,CAAClI,OAAO,CAAC0G,iBAAiB,GAAGW,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC;EACjEa,OAAO,CAAClI,OAAO,CAACG,MAAM,GAAGL,mBAAmB,CAACK,MAAM;EACnD+H,OAAO,CAACjM,SAAS,CAACC,GAAG,CACnB4D,mBAAmB,CAACf,IAAI,EACxB,aAAa,EACb,wBACF,CAAC;EACDmJ,OAAO,CAAC3J,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAChD,IAAAzV,uCAAiB,EAACqd,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC;EACzC,IAAArd,uCAAiB,EAACqd,OAAO,EAAE,UAAU,EAAE,IAAA3d,uCAAiB,EAAC6iB,MAAM,EAAE,UAAU,CAAC,CAAC;EAC7E,IAAMhF,eAAe,GAAG,IAAAC,uBAAiB,EAAC,CAAC;EAC3CH,OAAO,CAACnd,KAAK,CAACud,cAAc,OAAAC,MAAA,CAAOH,eAAe,MAAG;EACrD1H,SAAS,CAAC8H,MAAM,CAACN,OAAO,CAAC;AAC3B;;;;;;;;;;AC3RA,IAAAhR,qBAAA,GAAAC,OAAA;AAKA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AAKA,IAAAyS,cAAA,GAAAzS,OAAA;AAEA,IAAA8Y,SAAA,GAAA9Y,OAAA;AAAiE,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAkN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AACjE,IACE7P,kBAAkB,GAQhBrK,kBAAc,CARhBqK,kBAAkB;EAClBD,kBAAkB,GAOhBpK,kBAAc,CAPhBoK,kBAAkB;EAClBH,iBAAiB,GAMfjK,kBAAc,CANhBiK,iBAAiB;EACjBH,UAAU,GAKR9J,kBAAc,CALhB8J,UAAU;EACVP,iBAAiB,GAIfvJ,kBAAc,CAJhBuJ,iBAAiB;EACjBlE,uBAAuB,GAGrBrF,kBAAc,CAHhBqF,uBAAuB;EACvBkB,cAAc,GAEZvG,kBAAc,CAFhBuG,cAAc;EACdG,yBAAyB,GACvB1G,kBAAc,CADhB0G,yBAAyB;AAE3B,IAAMqe,cAAc,GAAG,EAAE;AAEzB,IAAM1Y,KAAK,GAAG9F,cAAc,CAAC,CAAC,GAAGG,yBAAyB,CAAC,CAAC;AAC5D,IAAMse,yBAAyB,GAAG,GAAG;AACrC,IAAMC,yBAAyB,GAAG,IAAI;AACtC,IAAM1P,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAIqW,mBAAmB;AAChB,SAASC,gBAAgBA,CAAA,EAAG;EACjCD,mBAAmB,GAAGF,yBAAyB;EAC/CzY,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,CAACI,OAAO,CAAC,UAACwY,WAAW,EAAK;IACxEA,WAAW,CAACpU,MAAM,CAAC,CAAC;EACtB,CAAC,CAAC;AACJ;AAEA,SAAS6N,kBAAkBA,CAACzJ,QAAQ,EAAE;EACpC,OAAO2P,cAAc,CAACjG,QAAQ,CAAC1J,QAAQ,CAAC;AAC1C;AAEA,IAAI2J,cAAc,GAAG,CAAC,CAAC,CAAC;;AAExB,SAASsG,mBAAmBA,CAAA,EAAG;EAC7B,IAAMC,QAAQ,GAAG,CAAC;EAClB,IAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;EACpB,IAAIlG,OAAO,CAAC,CAAC;;EAEb,IAAMmG,aAAa,GAAGtJ,mBAAmB,CAACoJ,QAAQ,EAAEC,QAAQ,CAAC;EAE7D,IAAIC,aAAa,IAAIF,QAAQ,EAAE;IAC7BjG,OAAO,GAAGN,cAAc,EAAE;IAC1B,KAAK,IAAI1G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmN,aAAa,EAAEnN,CAAC,EAAE,EAAE;MACtC,IAAIkH,WAAW;MACf,GAAG;QACDA,WAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,WAAW,CAAC;MAExCwF,cAAc,CAAC/G,IAAI,CAAC;QAClB5I,QAAQ,EAAEmK,WAAW;QACrBF,OAAO,EAAEA;MACX,CAAC,CAAC;MACFoG,iBAAiB,CAAClG,WAAW,EAAEF,OAAO,CAAC;IACzC;EACF,CAAC,MAAM;IACL,IAAIE,YAAW;IACf,GAAG;MACDA,YAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,YAAW,CAAC;IAExCwF,cAAc,CAAC/G,IAAI,CAAC;MAClB5I,QAAQ,EAAEmK;IACZ,CAAC,CAAC;IACFkG,iBAAiB,CAAClG,YAAW,CAAC;EAChC;;EAEA;EACAwF,cAAc,CAAC9S,MAAM,GAAG,CAAC;AAC3B;AAEA,IAAMwN,iBAAiB,GAAG,GAAG,CAAC,CAAC;AAC/B,IAAIiG,iBAAiB,GAAG,IAAI/F,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE5B,SAASgG,iBAAiBA,CAAChZ,KAAK,EAAEnM,UAAU,EAAE;EACnD+L,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,CAACI,OAAO,CAAC,UAACwY,WAAW,EAAK;IACxE;IACA,IAAM9S,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;IAC9B,IAAMkV,eAAe,GAAGR,WAAW,CAACzU,qBAAqB,CAAC,CAAC;;IAE3D;IACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAG4K,eAAe,CAAC5K,CAAC,EAAE,CAAC,CAAC,GACzC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAG6K,eAAe,CAAC7K,CAAC,EAAE,CAAC,CAC9C,CAAC;IACD,IAAMgF,SAAS,GAAG,IAAAC,wBAAW,EAAC1N,QAAQ,EAAEsT,eAAe,CAAC;IACxD;IACA,IAAMvG,OAAO,GAAG+F,WAAW,CAACvQ,OAAO,CAACwK,OAAO;IAC3C,IAAMY,SAAS,GAAGZ,OAAO,KAAK5L,SAAS;;IAEvC;IACA,IAAIyM,UAAU,GAAG,CAAC,CAAC;;IAEnB;IACA,IAAM2F,qBAAqB,GAAGnL,QAAQ,GAAG+E,iBAAiB;IAC1D;IACA,IAAMW,YAAY,GAAGgF,WAAW,CAACvQ,OAAO,CAACuL,YAAY,KAAK,MAAM;;IAEhE;IACA,IAAMC,aAAa,GAAGuF,eAAe,CAACpT,KAAK,GAAGF,QAAQ,CAACC,IAAI;IAE3D,IAAI0N,SAAS,EAAE;MACb;MACA,IAAI,CAACyF,iBAAiB,CAACpF,GAAG,CAACjB,OAAO,CAAC,EAAE;QACnC;QACAqG,iBAAiB,CAACnF,GAAG,CAAClB,OAAO,EAAE;UAC7BmB,UAAU,EAAE,KAAK;UACjBJ,YAAY,EAAE,KAAK;UACnBP,gBAAgB,EAAE;QACpB,CAAC,CAAC;MACJ;;MAEA;MACAK,UAAU,GAAGwF,iBAAiB,CAACjF,GAAG,CAACpB,OAAO,CAAC;;MAE3C;MACAa,UAAU,CAACM,UAAU,GACnBN,UAAU,CAACM,UAAU,IAAI4E,WAAW,CAACvQ,OAAO,CAAC2L,UAAU,KAAK,MAAM;MACpEN,UAAU,CAACE,YAAY,GAAGF,UAAU,CAACE,YAAY,IAAIA,YAAY;;MAEjE;MACAF,UAAU,CAACG,aAAa,GAAGH,UAAU,CAACG,aAAa,IAAIA,aAAa;IACtE;IAEA,IAAIwF,qBAAqB,EAAE;MACzB;MACAT,WAAW,CAACvQ,OAAO,CAAC2L,UAAU,GAAG,MAAM;IACzC,CAAC,MAAM;MACL;MACA4E,WAAW,CAACvQ,OAAO,CAAC2L,UAAU,GAAG,OAAO;IAC1C;IAEA,IACEP,SAAS,IACTC,UAAU,CAACM,UAAU,IACrB,CAACN,UAAU,CAACE,YAAY,IACxBF,UAAU,CAACG,aAAa,IACxB,CAACH,UAAU,CAACL,gBAAgB,EAC5B;MACA;MACA;MACA,IAAIa,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;MACjDC,kBAAkB,CAAEqW,sBAAsB,IAAI,CAAE,CAAC;MACjD,IAAAC,sCAAyB,EAAC,CAAC;MAC3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAT,UAAU,CAACL,gBAAgB,GAAG,IAAI;IACpC;IAEA,IACE,CAACuF,WAAW,CAACvQ,OAAO,CAACuL,YAAY,IACjCL,SAAS,KAAK,IAAI,IAClB,CAACqF,WAAW,CAACvQ,OAAO,CAAC+L,YAAY,EACjC;MACA,IAAI3W,iBAAiB,CAAC,CAAC,IAAIH,UAAU,CAAC,CAAC,EAAE;QACvC,IAAM+W,IAAI,GAAGtU,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;QAC1CmM,IAAI,CAAC/P,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACvC8P,IAAI,CAACjhB,KAAK,CAACwV,QAAQ,GAAG,UAAU;QAChCyL,IAAI,CAACjhB,KAAK,CAAC2S,IAAI,GAAG6S,WAAW,CAAC9P,UAAU,GAAG,IAAI;QAC/CuL,IAAI,CAACjhB,KAAK,CAACuT,GAAG,GAAGiS,WAAW,CAAC/P,SAAS,GAAG,EAAE,GAAG,IAAI;QAClD+P,WAAW,CAACtE,UAAU,CAACC,YAAY,CAACF,IAAI,EAAEuE,WAAW,CAAC;QACtD,IAAMpQ,MAAM,GAAG5K,kBAAkB,CAAC,CAAC,GAAGb,iBAAiB,CAAC,CAAC;QACzDsX,IAAI,CAACG,WAAW,OAAA5D,MAAA,CAAOpI,MAAM,CAAE;QAC/B,IAAAiM,kCAAqB,EAACjM,MAAM,CAAC;QAC7BoQ,WAAW,CAACtU,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;QACxCqU,WAAW,CAACvQ,OAAO,CAAC+L,YAAY,GAAG,IAAI;QACvCC,IAAI,CAACzQ,gBAAgB,CAAC,cAAc,EAAE,YAAM;UAC1CyQ,IAAI,CAAC7P,MAAM,CAAC,CAAC;QACf,CAAC,CAAC;QACF;QACAoU,WAAW,CAAChV,gBAAgB,CAAC,cAAc,EAAE,YAAM;UACjDgV,WAAW,CAACpU,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLoU,WAAW,CAACvQ,OAAO,CAACuL,YAAY,GAAG,IAAI;MACzC;IACF;IAEA,IAAM0F,gBAAgB,GAAGvmB,UAAU,CACjC6lB,WAAW,CAACvQ,OAAO,CAACkR,2BAA2B,IAAI,CACrD,CAAC;IAED,IAAAjmB,6CAAuB,EACrBslB,WAAW,EACX,QAAQ,EACRzY,KAAK,GAAGnM,UAAU,GAAG,CAAC,CAAC,IAAI6L,KAAK,GAAGyZ,gBAAgB,CACrD,CAAC;IACD,IAAI,IAAA1mB,uCAAiB,EAACgmB,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MACpDA,WAAW,CAACpU,MAAM,CAAC,CAAC;IACtB;EACF,CAAC,CAAC;EAEF,IAAIkU,mBAAmB,IAAI,CAAC,IAAI7f,uBAAuB,CAAC,CAAC,EAAE;IACzDggB,mBAAmB,CAAC,CAAC;IACrBH,mBAAmB,GACjBhJ,mBAAmB,CACjB8I,yBAAyB,EACzBC,yBACF,CAAC,GAAGzkB,UAAU;EAClB;EACA0kB,mBAAmB,IAAIvY,KAAK;AAC9B;AAEO,SAASqZ,mBAAmBA,CAAA,EAAG;EACpC,OAAO3M,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,qBAAqB,CAAC,EAAE4P,GAAG,CAC9D,UAACgJ,WAAW,EAAK;IACf,OAAOA,WAAW,CAACzU,qBAAqB,CAAC,CAAC;EAC5C,CACF,CAAC;AACH;;AAEA;AACA,IAAMsV,cAAc,GAAG;EACrBC,cAAc,EAAE;IAAExJ,MAAM,EAAE,CAAC;IAAEyJ,KAAK,EAAE,cAAc;IAAEC,WAAW,EAAE,CAAC;EAAK,CAAC;EACxEC,eAAe,EAAE;IAAE3J,MAAM,EAAE,CAAC;IAAEyJ,KAAK,EAAE,kBAAkB;IAAEC,WAAW,EAAE;EAAE,CAAC;EACzEE,cAAc,EAAE;IAAE5J,MAAM,EAAE,CAAC;IAAEyJ,KAAK,EAAE,iBAAiB;IAAEC,WAAW,EAAE,CAAC;EAAM;EAC3E;AACF,CAAC;;AAED,IAAMG,4BAA4B,GAAG,IAAA1C,0BAAgB,EAACoC,cAAc,CAAC;AAErE,SAASR,iBAAiBA,CAAClG,WAAW,EAAEF,OAAO,EAAE;EAC/C,IAAMmH,aAAa,GAAG,IAAAvC,2BAAiB,EAACsC,4BAA4B,CAAC;EACrE,IAAMnB,WAAW,GAAG7Y,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EACjD0Q,WAAW,CAACvQ,OAAO,CAACuQ,WAAW,GAAG,IAAI;EACtCA,WAAW,CAACvQ,OAAO,CAAC4R,eAAe,GAAGD,aAAa;EACnDpB,WAAW,CAACtU,SAAS,CAACC,GAAG,CACvB,cAAc,EACdkV,cAAc,CAACO,aAAa,CAAC,CAACL,KAAK,EACnC,cACF,CAAC;EACD,IAAIF,cAAc,CAACO,aAAa,CAAC,CAACJ,WAAW,EAAE;IAC7ChB,WAAW,CAACvQ,OAAO,CAACkR,2BAA2B,GAC7CE,cAAc,CAACO,aAAa,CAAC,CAACJ,WAAW;EAC7C,CAAC,MAAMhB,WAAW,CAACvQ,OAAO,CAACkR,2BAA2B,GAAG,CAAC;EAE1D,IAAArmB,uCAAiB,EAAC0lB,WAAW,EAAE,QAAQ,EAAE7F,WAAW,CAAC;EACrD,IAAA7f,uCAAiB,EAAC0lB,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC;;EAE9C;EACAA,WAAW,CAACvQ,OAAO,CAACwK,OAAO,GAAGA,OAAO;EAErC9J,SAAS,CAAC8H,MAAM,CAAC+H,WAAW,CAAC;EAC7B,IAAIoB,aAAa,IAAI,gBAAgB,EAAE;IACrClV,UAAU,CAAC,YAAM;MACf8T,WAAW,CAACtU,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;MAC5CoU,WAAW,CAACtU,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3C,CAAC,EAAE,IAAI,CAAC;IACRqU,WAAW,CAAChV,gBAAgB,CAAC,cAAc,EAAE,YAAM;MACjD;MACAgV,WAAW,CAACtU,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;MAC5CoU,WAAW,CAACtU,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC5CqU,WAAW,CAACvQ,OAAO,CAACkR,2BAA2B,GAAG,CAAC;IACrD,CAAC,CAAC;EACJ;AACF;AAEA,SAAS7J,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;;ACvRA,IAAArI,qBAAA,GAAAC,OAAA;AAKA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AAKA,IAAAyS,cAAA,GAAAzS,OAAA;AAEA,IAAA8Y,SAAA,GAAA9Y,OAAA;AAAiE,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAkN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AACjE,IACE7P,kBAAkB,GAMhBrK,kBAAc,CANhBqK,kBAAkB;EAClBD,kBAAkB,GAKhBpK,kBAAc,CALhBoK,kBAAkB;EAClBH,iBAAiB,GAIfjK,kBAAc,CAJhBiK,iBAAiB;EACjBH,UAAU,GAGR9J,kBAAc,CAHhB8J,UAAU;EACVP,iBAAiB,GAEfvJ,kBAAc,CAFhBuJ,iBAAiB;EACjBlB,gBAAgB,GACdrI,kBAAc,CADhBqI,gBAAgB;AAElB,IAAMqW,cAAc,GAAG,EAAE;AAEzB,IAAMrS,KAAK,GAAG,IAAI;AAClB,IAAMqa,iBAAiB,GAAG,GAAG;AAC7B,IAAMC,iBAAiB,GAAG,IAAI;AAC9B,IAAMpR,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAI+X,YAAY;AACT,SAASC,SAASA,CAAA,EAAG;EAC1BD,YAAY,GAAGF,iBAAiB;EAChCna,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAACka,IAAI,EAAK;IACzDA,IAAI,CAAC9V,MAAM,CAAC,CAAC;EACf,CAAC,CAAC;AACJ;AAEA,SAAS6N,kBAAkBA,CAACzJ,QAAQ,EAAE;EACpC,OAAOsJ,cAAc,CAACI,QAAQ,CAAC1J,QAAQ,CAAC;AAC1C;AAEA,IAAI2J,cAAc,GAAG,CAAC,CAAC,CAAC;;AAExB,SAASpB,mBAAmBA,CAAA,EAAG;EAC7B,IAAMwB,QAAQ,GAAG,CAAC;EAClB,IAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;EACpB,IAAIC,OAAO,CAAC,CAAC;;EAEb,IAAMC,aAAa,GAAGpD,mBAAmB,CAACiD,QAAQ,EAAEC,QAAQ,CAAC;EAE7D,IAAIE,aAAa,IAAIH,QAAQ,EAAE;IAC7BE,OAAO,GAAGN,cAAc,EAAE;IAC1B,KAAK,IAAI1G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,aAAa,EAAEjH,CAAC,EAAE,EAAE;MACtC,IAAIkH,WAAW;MACf,GAAG;QACDA,WAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,WAAW,CAAC;MAExCb,cAAc,CAACV,IAAI,CAAC;QAClB5I,QAAQ,EAAEmK,WAAW;QACrBF,OAAO,EAAEA;MACX,CAAC,CAAC;MACF0H,UAAU,CAACxH,WAAW,EAAEF,OAAO,CAAC;IAClC;EACF,CAAC,MAAM;IACL,IAAIE,YAAW;IACf,GAAG;MACDA,YAAW,GAAGrD,mBAAmB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9C,CAAC,QAAQ2C,kBAAkB,CAACU,YAAW,CAAC;IAExCb,cAAc,CAACV,IAAI,CAAC;MAClB5I,QAAQ,EAAEmK;IACZ,CAAC,CAAC;IACFwH,UAAU,CAACxH,YAAW,CAAC;EACzB;;EAEA;EACAb,cAAc,CAACzM,MAAM,GAAG,CAAC;AAC3B;AAEA,IAAMwN,iBAAiB,GAAG,GAAG,CAAC,CAAC;AAC/B,IAAIuH,UAAU,GAAG,IAAIrH,GAAG,CAAC,CAAC,CAAC,CAAC;;AAErB,SAASsH,UAAUA,CAACta,KAAK,EAAEnM,UAAU,EAAE;EAC5C+L,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAACka,IAAI,EAAK;IACzD;IACA,IAAMjH,gBAAgB,GAAGiH,IAAI,CAACjS,OAAO,CAACgL,gBAAgB,KAAK,MAAM;;IAEjE;IACA,IAAMvN,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;IAC9B,IAAMwW,QAAQ,GAAGJ,IAAI,CAACnW,qBAAqB,CAAC,CAAC;;IAE7C;IACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAGkM,QAAQ,CAAClM,CAAC,EAAE,CAAC,CAAC,GAClC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAGmM,QAAQ,CAACnM,CAAC,EAAE,CAAC,CACvC,CAAC;IACD,IAAMgF,SAAS,GAAG,IAAAC,wBAAW,EAAC1N,QAAQ,EAAE4U,QAAQ,CAAC;;IAEjD;IACA,IAAM7H,OAAO,GAAGyH,IAAI,CAACjS,OAAO,CAACwK,OAAO;IACpC,IAAMY,SAAS,GAAGZ,OAAO,KAAK5L,SAAS;;IAEvC;IACA,IAAIyM,UAAU,GAAG,CAAC,CAAC;IACnB;IACA,IAAMiH,cAAc,GAAGzM,QAAQ,GAAG+E,iBAAiB;;IAEnD;IACA,IAAMW,YAAY,GAAG0G,IAAI,CAACjS,OAAO,CAACuL,YAAY,KAAK,MAAM;;IAEzD;IACA,IAAMC,aAAa,GAAG6G,QAAQ,CAAC1U,KAAK,GAAGF,QAAQ,CAACC,IAAI;IAEpD,IAAI0N,SAAS,EAAE;MACb;MACA,IAAI,CAAC+G,UAAU,CAAC1G,GAAG,CAACjB,OAAO,CAAC,EAAE;QAC5B;QACA2H,UAAU,CAACzG,GAAG,CAAClB,OAAO,EAAE;UACtBmB,UAAU,EAAE,KAAK;UACjBJ,YAAY,EAAE,KAAK;UACnBP,gBAAgB,EAAE;QACpB,CAAC,CAAC;MACJ;;MAEA;MACAK,UAAU,GAAG8G,UAAU,CAACvG,GAAG,CAACpB,OAAO,CAAC;;MAEpC;MACAa,UAAU,CAACM,UAAU,GACnBN,UAAU,CAACM,UAAU,IAAIsG,IAAI,CAACjS,OAAO,CAAC2L,UAAU,KAAK,MAAM;MAC7DN,UAAU,CAACE,YAAY,GAAGF,UAAU,CAACE,YAAY,IAAIA,YAAY;;MAEjE;MACAF,UAAU,CAACG,aAAa,GAAGH,UAAU,CAACG,aAAa,IAAIA,aAAa;IACtE;IAEA,IAAI8G,cAAc,EAAE;MAClB;MACAL,IAAI,CAACjS,OAAO,CAAC2L,UAAU,GAAG,MAAM;IAClC,CAAC,MAAM;MACL;MACAsG,IAAI,CAACjS,OAAO,CAAC2L,UAAU,GAAG,OAAO;IACnC;IAEA,IACEP,SAAS,IACTC,UAAU,CAACM,UAAU,IACrB,CAACN,UAAU,CAACE,YAAY,IACxBF,UAAU,CAACG,aAAa,IACxB,CAACH,UAAU,CAACL,gBAAgB,EAC5B;MACA;MACA;MACA,IAAIa,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;MACjDC,kBAAkB,CAAEqW,sBAAsB,IAAI,CAAE,CAAC;MACjD,IAAAC,sCAAyB,EAAC,CAAC;MAC3B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAT,UAAU,CAACL,gBAAgB,GAAG,IAAI;IACpC;IAEA,IACE,CAACiH,IAAI,CAACjS,OAAO,CAACuL,YAAY,IAC1BL,SAAS,KAAK,IAAI,IAClB,CAAC+G,IAAI,CAACjS,OAAO,CAAC+L,YAAY,EAC1B;MACA,IAAI3W,iBAAiB,CAAC,CAAC,IAAIH,UAAU,CAAC,CAAC,EAAE;QACvC,IAAM+W,IAAI,GAAGtU,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;QAC1CmM,IAAI,CAAC/P,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;QACvC8P,IAAI,CAACjhB,KAAK,CAACwV,QAAQ,GAAG,UAAU;QAChCyL,IAAI,CAACjhB,KAAK,CAAC2S,IAAI,GAAGuU,IAAI,CAACxR,UAAU,GAAG,IAAI;QACxCuL,IAAI,CAACjhB,KAAK,CAACuT,GAAG,GAAG2T,IAAI,CAACzR,SAAS,GAAG,EAAE,GAAG,IAAI;QAC3CyR,IAAI,CAAChG,UAAU,CAACC,YAAY,CAACF,IAAI,EAAEiG,IAAI,CAAC;QACxC,IAAM9R,MAAM,GAAG5K,kBAAkB,CAAC,CAAC,GAAGb,iBAAiB,CAAC,CAAC;QACzDsX,IAAI,CAACG,WAAW,OAAA5D,MAAA,CAAOpI,MAAM,CAAE;QAC/B,IAAAiM,kCAAqB,EAACjM,MAAM,CAAC;QAC7B8R,IAAI,CAAChW,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;QAC/B+V,IAAI,CAACjS,OAAO,CAAC+L,YAAY,GAAG,IAAI;QAChC;QACAkG,IAAI,CAAC1W,gBAAgB,CAAC,cAAc,EAAE,YAAM;UAC1C0W,IAAI,CAAC9V,MAAM,CAAC,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,MAAM;QACL8V,IAAI,CAACjS,OAAO,CAACuL,YAAY,GAAG,IAAI;MAClC;IACF;IAEA,IAAAtgB,6CAAuB,EAACgnB,IAAI,EAAE,QAAQ,EAAEna,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;IACxE,IAAI,IAAAjN,uCAAiB,EAAC0nB,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC7CA,IAAI,CAAC9V,MAAM,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEF,IAAI4V,YAAY,IAAI,CAAC,IAAIve,gBAAgB,CAAC,CAAC,EAAE;IAC3CsV,mBAAmB,CAAC,CAAC;IACrBiJ,YAAY,GACV1K,mBAAmB,CAACwK,iBAAiB,EAAEC,iBAAiB,CAAC,GAAGnmB,UAAU;EAC1E;EACAomB,YAAY,IAAIja,KAAK;AACvB;AAEO,SAASya,YAAYA,CAAA,EAAG;EAC7B,OAAO/N,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,EAAE4P,GAAG,CAAC,UAAC0K,IAAI,EAAK;IACjE,OAAOA,IAAI,CAACnW,qBAAqB,CAAC,CAAC;EACrC,CAAC,CAAC;AACJ;;AAEA;AACA,IAAM0W,OAAO,GAAG;EACdC,OAAO,EAAE;IAAE5K,MAAM,EAAE;EAAE;EACrB;AACF,CAAC;;AAED,IAAM6K,qBAAqB,GAAG,IAAA1D,0BAAgB,EAACwD,OAAO,CAAC;AAEvD,SAASN,UAAUA,CAACxH,WAAW,EAAEF,OAAO,EAAE;EACxC,IAAMyH,IAAI,GAAGva,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC1CoS,IAAI,CAACjS,OAAO,CAACiS,IAAI,GAAG,IAAI;EACxBA,IAAI,CAAChW,SAAS,CAACC,GAAG,CAAC,MAAM,EAAE,gBAAgB,EAAE,cAAc,CAAC;;EAE5D;EACA+V,IAAI,CAACjS,OAAO,CAACwK,OAAO,GAAGA,OAAO;EAE9B,IAAA3f,uCAAiB,EAAConB,IAAI,EAAE,QAAQ,EAAEvH,WAAW,CAAC;EAC9C,IAAA7f,uCAAiB,EAAConB,IAAI,EAAE,QAAQ,KAAA1J,MAAA,CAAKlB,mBAAmB,CAAC,CAAC,EAAE,EAAE,CAAC,MAAG,CAAC;EAEnE3G,SAAS,CAAC8H,MAAM,CAACyJ,IAAI,CAAC;AACxB;AAEA,SAAS5K,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;+CChPA,qJAAAoT,mBAAA,YAAAA,oBAAA,WAAA9T,CAAA,SAAA+T,CAAA,EAAA/T,CAAA,OAAAgU,CAAA,GAAAhc,MAAA,CAAAkO,SAAA,EAAApB,CAAA,GAAAkP,CAAA,CAAAC,cAAA,EAAA9P,CAAA,GAAAnM,MAAA,CAAAkc,cAAA,cAAAH,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,IAAAD,CAAA,CAAA/T,CAAA,IAAAgU,CAAA,CAAA/nB,KAAA,KAAA0Y,CAAA,wBAAAL,MAAA,GAAAA,MAAA,OAAA6P,CAAA,GAAAxP,CAAA,CAAAJ,QAAA,kBAAA6P,CAAA,GAAAzP,CAAA,CAAA0P,aAAA,uBAAAC,CAAA,GAAA3P,CAAA,CAAA4P,WAAA,8BAAAC,OAAAT,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,WAAAhc,MAAA,CAAAkc,cAAA,CAAAH,CAAA,EAAA/T,CAAA,IAAA/T,KAAA,EAAA+nB,CAAA,EAAAS,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAZ,CAAA,CAAA/T,CAAA,WAAAwU,MAAA,mBAAAT,CAAA,IAAAS,MAAA,YAAAA,OAAAT,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,WAAAD,CAAA,CAAA/T,CAAA,IAAAgU,CAAA,gBAAAY,KAAAb,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,QAAAH,CAAA,GAAA3E,CAAA,IAAAA,CAAA,CAAAkG,SAAA,YAAA2O,SAAA,GAAA7U,CAAA,GAAA6U,SAAA,EAAAV,CAAA,GAAAnc,MAAA,CAAA8c,MAAA,CAAAnQ,CAAA,CAAAuB,SAAA,GAAAkO,CAAA,OAAAW,OAAA,CAAAjQ,CAAA,gBAAAX,CAAA,CAAAgQ,CAAA,eAAAloB,KAAA,EAAA+oB,gBAAA,CAAAjB,CAAA,EAAAC,CAAA,EAAAI,CAAA,MAAAD,CAAA,aAAAc,SAAAlB,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,mBAAA9T,IAAA,YAAAgV,GAAA,EAAAnB,CAAA,CAAAzO,IAAA,CAAAtF,CAAA,EAAAgU,CAAA,cAAAD,CAAA,aAAA7T,IAAA,WAAAgV,GAAA,EAAAnB,CAAA,QAAA/T,CAAA,CAAA4U,IAAA,GAAAA,IAAA,MAAAO,CAAA,qBAAAC,CAAA,qBAAAnQ,CAAA,gBAAAJ,CAAA,gBAAAwC,CAAA,gBAAAwN,UAAA,cAAAQ,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAf,MAAA,CAAAe,CAAA,EAAApB,CAAA,qCAAAqB,CAAA,GAAAxd,MAAA,CAAAyd,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA1B,CAAA,IAAAlP,CAAA,CAAAQ,IAAA,CAAAoQ,CAAA,EAAAvB,CAAA,MAAAoB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAApP,SAAA,GAAA2O,SAAA,CAAA3O,SAAA,GAAAlO,MAAA,CAAA8c,MAAA,CAAAS,CAAA,YAAAM,sBAAA9B,CAAA,gCAAA7a,OAAA,WAAA8G,CAAA,IAAAwU,MAAA,CAAAT,CAAA,EAAA/T,CAAA,YAAA+T,CAAA,gBAAA+B,OAAA,CAAA9V,CAAA,EAAA+T,CAAA,sBAAAgC,cAAAhC,CAAA,EAAA/T,CAAA,aAAAgW,OAAAhC,CAAA,EAAA7P,CAAA,EAAAQ,CAAA,EAAAwP,CAAA,QAAAC,CAAA,GAAAa,QAAA,CAAAlB,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAA5P,CAAA,mBAAAiQ,CAAA,CAAAlU,IAAA,QAAAoU,CAAA,GAAAF,CAAA,CAAAc,GAAA,EAAAC,CAAA,GAAAb,CAAA,CAAAroB,KAAA,SAAAkpB,CAAA,gBAAAc,OAAA,CAAAd,CAAA,KAAArQ,CAAA,CAAAQ,IAAA,CAAA6P,CAAA,eAAAnV,CAAA,CAAAkW,OAAA,CAAAf,CAAA,CAAAgB,OAAA,EAAAC,IAAA,WAAArC,CAAA,IAAAiC,MAAA,SAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,gBAAAJ,CAAA,IAAAiC,MAAA,UAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,QAAAnU,CAAA,CAAAkW,OAAA,CAAAf,CAAA,EAAAiB,IAAA,WAAArC,CAAA,IAAAO,CAAA,CAAAroB,KAAA,GAAA8nB,CAAA,EAAApP,CAAA,CAAA2P,CAAA,gBAAAP,CAAA,WAAAiC,MAAA,UAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,SAAAA,CAAA,CAAAC,CAAA,CAAAc,GAAA,SAAAlB,CAAA,EAAA7P,CAAA,oBAAAlY,KAAA,WAAAA,MAAA8nB,CAAA,EAAAjP,CAAA,aAAAuR,2BAAA,eAAArW,CAAA,WAAAA,CAAA,EAAAgU,CAAA,IAAAgC,MAAA,CAAAjC,CAAA,EAAAjP,CAAA,EAAA9E,CAAA,EAAAgU,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAoC,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAArB,iBAAAhV,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,QAAAX,CAAA,GAAAgR,CAAA,mBAAAxQ,CAAA,EAAAwP,CAAA,QAAAhQ,CAAA,KAAAc,CAAA,YAAAqR,KAAA,sCAAAnS,CAAA,KAAAU,CAAA,oBAAAF,CAAA,QAAAwP,CAAA,WAAAloB,KAAA,EAAA8nB,CAAA,EAAAhP,IAAA,eAAAD,CAAA,CAAAyR,MAAA,GAAA5R,CAAA,EAAAG,CAAA,CAAAoQ,GAAA,GAAAf,CAAA,UAAAC,CAAA,GAAAtP,CAAA,CAAA0R,QAAA,MAAApC,CAAA,QAAAE,CAAA,GAAAmC,mBAAA,CAAArC,CAAA,EAAAtP,CAAA,OAAAwP,CAAA,QAAAA,CAAA,KAAAjN,CAAA,mBAAAiN,CAAA,qBAAAxP,CAAA,CAAAyR,MAAA,EAAAzR,CAAA,CAAA4R,IAAA,GAAA5R,CAAA,CAAA6R,KAAA,GAAA7R,CAAA,CAAAoQ,GAAA,sBAAApQ,CAAA,CAAAyR,MAAA,QAAApS,CAAA,KAAAgR,CAAA,QAAAhR,CAAA,GAAAU,CAAA,EAAAC,CAAA,CAAAoQ,GAAA,EAAApQ,CAAA,CAAA8R,iBAAA,CAAA9R,CAAA,CAAAoQ,GAAA,uBAAApQ,CAAA,CAAAyR,MAAA,IAAAzR,CAAA,CAAA+R,MAAA,WAAA/R,CAAA,CAAAoQ,GAAA,GAAA/Q,CAAA,GAAAc,CAAA,MAAAsQ,CAAA,GAAAN,QAAA,CAAAjV,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,oBAAAyQ,CAAA,CAAArV,IAAA,QAAAiE,CAAA,GAAAW,CAAA,CAAAC,IAAA,GAAAF,CAAA,GAAAuQ,CAAA,EAAAG,CAAA,CAAAL,GAAA,KAAA7N,CAAA,qBAAApb,KAAA,EAAAspB,CAAA,CAAAL,GAAA,EAAAnQ,IAAA,EAAAD,CAAA,CAAAC,IAAA,kBAAAwQ,CAAA,CAAArV,IAAA,KAAAiE,CAAA,GAAAU,CAAA,EAAAC,CAAA,CAAAyR,MAAA,YAAAzR,CAAA,CAAAoQ,GAAA,GAAAK,CAAA,CAAAL,GAAA,mBAAAuB,oBAAAzW,CAAA,EAAAgU,CAAA,QAAAlP,CAAA,GAAAkP,CAAA,CAAAuC,MAAA,EAAApS,CAAA,GAAAnE,CAAA,CAAAuE,QAAA,CAAAO,CAAA,OAAAX,CAAA,KAAA4P,CAAA,SAAAC,CAAA,CAAAwC,QAAA,qBAAA1R,CAAA,IAAA9E,CAAA,CAAAuE,QAAA,CAAAmB,MAAA,KAAAsO,CAAA,CAAAuC,MAAA,aAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,EAAA0C,mBAAA,CAAAzW,CAAA,EAAAgU,CAAA,eAAAA,CAAA,CAAAuC,MAAA,kBAAAzR,CAAA,KAAAkP,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,OAAAhQ,SAAA,uCAAAJ,CAAA,iBAAAuC,CAAA,MAAA1C,CAAA,GAAAsQ,QAAA,CAAA9Q,CAAA,EAAAnE,CAAA,CAAAuE,QAAA,EAAAyP,CAAA,CAAAkB,GAAA,mBAAAvQ,CAAA,CAAAzE,IAAA,SAAA8T,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,GAAAvQ,CAAA,CAAAuQ,GAAA,EAAAlB,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,MAAA8M,CAAA,GAAAxP,CAAA,CAAAuQ,GAAA,SAAAf,CAAA,GAAAA,CAAA,CAAApP,IAAA,IAAAiP,CAAA,CAAAhU,CAAA,CAAA8W,UAAA,IAAA3C,CAAA,CAAAloB,KAAA,EAAA+nB,CAAA,CAAAxO,IAAA,GAAAxF,CAAA,CAAA+W,OAAA,eAAA/C,CAAA,CAAAuC,MAAA,KAAAvC,CAAA,CAAAuC,MAAA,WAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,GAAAC,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,IAAA8M,CAAA,IAAAH,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,OAAAhQ,SAAA,sCAAA8O,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,cAAA2P,aAAAjD,CAAA,QAAA/T,CAAA,KAAAiX,MAAA,EAAAlD,CAAA,YAAAA,CAAA,KAAA/T,CAAA,CAAAkX,QAAA,GAAAnD,CAAA,WAAAA,CAAA,KAAA/T,CAAA,CAAAmX,UAAA,GAAApD,CAAA,KAAA/T,CAAA,CAAAoX,QAAA,GAAArD,CAAA,WAAAsD,UAAA,CAAA/M,IAAA,CAAAtK,CAAA,cAAAsX,cAAAvD,CAAA,QAAA/T,CAAA,GAAA+T,CAAA,CAAAwD,UAAA,QAAAvX,CAAA,CAAAE,IAAA,oBAAAF,CAAA,CAAAkV,GAAA,EAAAnB,CAAA,CAAAwD,UAAA,GAAAvX,CAAA,aAAA+U,QAAAhB,CAAA,SAAAsD,UAAA,MAAAJ,MAAA,aAAAlD,CAAA,CAAA7a,OAAA,CAAA8d,YAAA,cAAAQ,KAAA,iBAAA7B,OAAA3V,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAgU,CAAA,GAAAhU,CAAA,CAAAmU,CAAA,OAAAH,CAAA,SAAAA,CAAA,CAAA1O,IAAA,CAAAtF,CAAA,4BAAAA,CAAA,CAAAwF,IAAA,SAAAxF,CAAA,OAAAyX,KAAA,CAAAzX,CAAA,CAAAzB,MAAA,SAAA4F,CAAA,OAAAQ,CAAA,YAAAa,KAAA,aAAArB,CAAA,GAAAnE,CAAA,CAAAzB,MAAA,OAAAuG,CAAA,CAAAQ,IAAA,CAAAtF,CAAA,EAAAmE,CAAA,UAAAqB,IAAA,CAAAvZ,KAAA,GAAA+T,CAAA,CAAAmE,CAAA,GAAAqB,IAAA,CAAAT,IAAA,OAAAS,IAAA,SAAAA,IAAA,CAAAvZ,KAAA,GAAA8nB,CAAA,EAAAvO,IAAA,CAAAT,IAAA,OAAAS,IAAA,YAAAb,CAAA,CAAAa,IAAA,GAAAb,CAAA,gBAAAO,SAAA,CAAA+Q,OAAA,CAAAjW,CAAA,kCAAAqV,iBAAA,CAAAnP,SAAA,GAAAoP,0BAAA,EAAAnR,CAAA,CAAAyR,CAAA,mBAAA3pB,KAAA,EAAAqpB,0BAAA,EAAAZ,YAAA,SAAAvQ,CAAA,CAAAmR,0BAAA,mBAAArpB,KAAA,EAAAopB,iBAAA,EAAAX,YAAA,SAAAW,iBAAA,CAAAqC,WAAA,GAAAlD,MAAA,CAAAc,0BAAA,EAAAhB,CAAA,wBAAAtU,CAAA,CAAA2X,mBAAA,aAAA5D,CAAA,QAAA/T,CAAA,wBAAA+T,CAAA,IAAAA,CAAA,CAAA5N,WAAA,WAAAnG,CAAA,KAAAA,CAAA,KAAAqV,iBAAA,6BAAArV,CAAA,CAAA0X,WAAA,IAAA1X,CAAA,CAAAoG,IAAA,OAAApG,CAAA,CAAA4X,IAAA,aAAA7D,CAAA,WAAA/b,MAAA,CAAA6f,cAAA,GAAA7f,MAAA,CAAA6f,cAAA,CAAA9D,CAAA,EAAAuB,0BAAA,KAAAvB,CAAA,CAAA+D,SAAA,GAAAxC,0BAAA,EAAAd,MAAA,CAAAT,CAAA,EAAAO,CAAA,yBAAAP,CAAA,CAAA7N,SAAA,GAAAlO,MAAA,CAAA8c,MAAA,CAAAc,CAAA,GAAA7B,CAAA,KAAA/T,CAAA,CAAA+X,KAAA,aAAAhE,CAAA,aAAAoC,OAAA,EAAApC,CAAA,OAAA8B,qBAAA,CAAAE,aAAA,CAAA7P,SAAA,GAAAsO,MAAA,CAAAuB,aAAA,CAAA7P,SAAA,EAAAkO,CAAA,iCAAApU,CAAA,CAAA+V,aAAA,GAAAA,aAAA,EAAA/V,CAAA,CAAAgY,KAAA,aAAAjE,CAAA,EAAAC,CAAA,EAAAlP,CAAA,EAAAX,CAAA,EAAAQ,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAAsT,OAAA,OAAA9D,CAAA,OAAA4B,aAAA,CAAAnB,IAAA,CAAAb,CAAA,EAAAC,CAAA,EAAAlP,CAAA,EAAAX,CAAA,GAAAQ,CAAA,UAAA3E,CAAA,CAAA2X,mBAAA,CAAA3D,CAAA,IAAAG,CAAA,GAAAA,CAAA,CAAA3O,IAAA,GAAA4Q,IAAA,WAAArC,CAAA,WAAAA,CAAA,CAAAhP,IAAA,GAAAgP,CAAA,CAAA9nB,KAAA,GAAAkoB,CAAA,CAAA3O,IAAA,WAAAqQ,qBAAA,CAAAD,CAAA,GAAApB,MAAA,CAAAoB,CAAA,EAAAtB,CAAA,gBAAAE,MAAA,CAAAoB,CAAA,EAAAzB,CAAA,iCAAAK,MAAA,CAAAoB,CAAA,6DAAA5V,CAAA,CAAA2Q,IAAA,aAAAoD,CAAA,QAAA/T,CAAA,GAAAhI,MAAA,CAAA+b,CAAA,GAAAC,CAAA,gBAAAlP,CAAA,IAAA9E,CAAA,EAAAgU,CAAA,CAAA1J,IAAA,CAAAxF,CAAA,UAAAkP,CAAA,CAAAkE,OAAA,aAAA1S,KAAA,WAAAwO,CAAA,CAAAzV,MAAA,SAAAwV,CAAA,GAAAC,CAAA,CAAAmE,GAAA,QAAApE,CAAA,IAAA/T,CAAA,SAAAwF,IAAA,CAAAvZ,KAAA,GAAA8nB,CAAA,EAAAvO,IAAA,CAAAT,IAAA,OAAAS,IAAA,WAAAA,IAAA,CAAAT,IAAA,OAAAS,IAAA,QAAAxF,CAAA,CAAA2V,MAAA,GAAAA,MAAA,EAAAZ,OAAA,CAAA7O,SAAA,KAAAC,WAAA,EAAA4O,OAAA,EAAAyC,KAAA,WAAAA,MAAAxX,CAAA,aAAAoY,IAAA,WAAA5S,IAAA,WAAAkR,IAAA,QAAAC,KAAA,GAAA5C,CAAA,OAAAhP,IAAA,YAAAyR,QAAA,cAAAD,MAAA,gBAAArB,GAAA,GAAAnB,CAAA,OAAAsD,UAAA,CAAAne,OAAA,CAAAoe,aAAA,IAAAtX,CAAA,WAAAgU,CAAA,kBAAAA,CAAA,CAAAqE,MAAA,OAAAvT,CAAA,CAAAQ,IAAA,OAAA0O,CAAA,MAAAyD,KAAA,EAAAzD,CAAA,CAAAvS,KAAA,cAAAuS,CAAA,IAAAD,CAAA,MAAAuE,IAAA,WAAAA,KAAA,SAAAvT,IAAA,WAAAgP,CAAA,QAAAsD,UAAA,IAAAE,UAAA,kBAAAxD,CAAA,CAAA7T,IAAA,QAAA6T,CAAA,CAAAmB,GAAA,cAAAqD,IAAA,KAAA3B,iBAAA,WAAAA,kBAAA5W,CAAA,aAAA+E,IAAA,QAAA/E,CAAA,MAAAgU,CAAA,kBAAAwE,OAAA1T,CAAA,EAAAX,CAAA,WAAAgQ,CAAA,CAAAjU,IAAA,YAAAiU,CAAA,CAAAe,GAAA,GAAAlV,CAAA,EAAAgU,CAAA,CAAAxO,IAAA,GAAAV,CAAA,EAAAX,CAAA,KAAA6P,CAAA,CAAAuC,MAAA,WAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,KAAA5P,CAAA,aAAAA,CAAA,QAAAkT,UAAA,CAAA9Y,MAAA,MAAA4F,CAAA,SAAAA,CAAA,QAAAQ,CAAA,QAAA0S,UAAA,CAAAlT,CAAA,GAAAgQ,CAAA,GAAAxP,CAAA,CAAA4S,UAAA,iBAAA5S,CAAA,CAAAsS,MAAA,SAAAuB,MAAA,aAAA7T,CAAA,CAAAsS,MAAA,SAAAmB,IAAA,QAAAhE,CAAA,GAAAtP,CAAA,CAAAQ,IAAA,CAAAX,CAAA,eAAA2P,CAAA,GAAAxP,CAAA,CAAAQ,IAAA,CAAAX,CAAA,qBAAAyP,CAAA,IAAAE,CAAA,aAAA8D,IAAA,GAAAzT,CAAA,CAAAuS,QAAA,SAAAsB,MAAA,CAAA7T,CAAA,CAAAuS,QAAA,gBAAAkB,IAAA,GAAAzT,CAAA,CAAAwS,UAAA,SAAAqB,MAAA,CAAA7T,CAAA,CAAAwS,UAAA,cAAA/C,CAAA,aAAAgE,IAAA,GAAAzT,CAAA,CAAAuS,QAAA,SAAAsB,MAAA,CAAA7T,CAAA,CAAAuS,QAAA,qBAAA5C,CAAA,YAAAgC,KAAA,qDAAA8B,IAAA,GAAAzT,CAAA,CAAAwS,UAAA,SAAAqB,MAAA,CAAA7T,CAAA,CAAAwS,UAAA,YAAAN,MAAA,WAAAA,OAAA9C,CAAA,EAAA/T,CAAA,aAAAgU,CAAA,QAAAqD,UAAA,CAAA9Y,MAAA,MAAAyV,CAAA,SAAAA,CAAA,QAAA7P,CAAA,QAAAkT,UAAA,CAAArD,CAAA,OAAA7P,CAAA,CAAA8S,MAAA,SAAAmB,IAAA,IAAAtT,CAAA,CAAAQ,IAAA,CAAAnB,CAAA,wBAAAiU,IAAA,GAAAjU,CAAA,CAAAgT,UAAA,QAAAxS,CAAA,GAAAR,CAAA,aAAAQ,CAAA,iBAAAoP,CAAA,mBAAAA,CAAA,KAAApP,CAAA,CAAAsS,MAAA,IAAAjX,CAAA,IAAAA,CAAA,IAAA2E,CAAA,CAAAwS,UAAA,KAAAxS,CAAA,cAAAwP,CAAA,GAAAxP,CAAA,GAAAA,CAAA,CAAA4S,UAAA,cAAApD,CAAA,CAAAjU,IAAA,GAAA6T,CAAA,EAAAI,CAAA,CAAAe,GAAA,GAAAlV,CAAA,EAAA2E,CAAA,SAAA4R,MAAA,gBAAA/Q,IAAA,GAAAb,CAAA,CAAAwS,UAAA,EAAA9P,CAAA,SAAAoR,QAAA,CAAAtE,CAAA,MAAAsE,QAAA,WAAAA,SAAA1E,CAAA,EAAA/T,CAAA,oBAAA+T,CAAA,CAAA7T,IAAA,QAAA6T,CAAA,CAAAmB,GAAA,qBAAAnB,CAAA,CAAA7T,IAAA,mBAAA6T,CAAA,CAAA7T,IAAA,QAAAsF,IAAA,GAAAuO,CAAA,CAAAmB,GAAA,gBAAAnB,CAAA,CAAA7T,IAAA,SAAAqY,IAAA,QAAArD,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,OAAAqB,MAAA,kBAAA/Q,IAAA,yBAAAuO,CAAA,CAAA7T,IAAA,IAAAF,CAAA,UAAAwF,IAAA,GAAAxF,CAAA,GAAAqH,CAAA,KAAAqR,MAAA,WAAAA,OAAA3E,CAAA,aAAA/T,CAAA,QAAAqX,UAAA,CAAA9Y,MAAA,MAAAyB,CAAA,SAAAA,CAAA,QAAAgU,CAAA,QAAAqD,UAAA,CAAArX,CAAA,OAAAgU,CAAA,CAAAmD,UAAA,KAAApD,CAAA,cAAA0E,QAAA,CAAAzE,CAAA,CAAAuD,UAAA,EAAAvD,CAAA,CAAAoD,QAAA,GAAAE,aAAA,CAAAtD,CAAA,GAAA3M,CAAA,OAAAsR,KAAA,WAAAC,OAAA7E,CAAA,aAAA/T,CAAA,QAAAqX,UAAA,CAAA9Y,MAAA,MAAAyB,CAAA,SAAAA,CAAA,QAAAgU,CAAA,QAAAqD,UAAA,CAAArX,CAAA,OAAAgU,CAAA,CAAAiD,MAAA,KAAAlD,CAAA,QAAAjP,CAAA,GAAAkP,CAAA,CAAAuD,UAAA,kBAAAzS,CAAA,CAAA5E,IAAA,QAAAiE,CAAA,GAAAW,CAAA,CAAAoQ,GAAA,EAAAoC,aAAA,CAAAtD,CAAA,YAAA7P,CAAA,gBAAAmS,KAAA,8BAAAuC,aAAA,WAAAA,cAAA7Y,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,gBAAA0R,QAAA,KAAAjS,QAAA,EAAAoR,MAAA,CAAA3V,CAAA,GAAA8W,UAAA,EAAA9C,CAAA,EAAA+C,OAAA,EAAAjS,CAAA,oBAAAyR,MAAA,UAAArB,GAAA,GAAAnB,CAAA,GAAA1M,CAAA,OAAArH,CAAA;AAAA,SAAA8Y,mBAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAArI,GAAA,EAAAqE,GAAA,cAAAiE,IAAA,GAAAJ,GAAA,CAAAlI,GAAA,EAAAqE,GAAA,OAAAjpB,KAAA,GAAAktB,IAAA,CAAAltB,KAAA,WAAAmtB,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAApU,IAAA,IAAAmR,OAAA,CAAAjqB,KAAA,YAAAgsB,OAAA,CAAA/B,OAAA,CAAAjqB,KAAA,EAAAmqB,IAAA,CAAA6C,KAAA,EAAAC,MAAA;AAAA,SAAAG,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAA1Z,SAAA,aAAAmY,OAAA,WAAA/B,OAAA,EAAA8C,MAAA,QAAAD,GAAA,GAAAO,EAAA,CAAAG,KAAA,CAAAF,IAAA,EAAAC,IAAA,YAAAP,MAAAhtB,KAAA,IAAA6sB,kBAAA,CAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAjtB,KAAA,cAAAitB,OAAA7T,GAAA,IAAAyT,kBAAA,CAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAA7T,GAAA,KAAA4T,KAAA,CAAAlZ,SAAA;AADA;AACA,IAAM2Z,oBAAoB,GAAAvhB,OAAA,CAAAuhB,oBAAA;EAAA,IAAAntB,IAAA,GAAA8sB,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAG,SAAA+B,QAAA;IAAA,IAAAC,QAAA;IAAA,OAAA9F,mBAAA,GAAAc,IAAA,UAAAiF,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAA1B,IAAA,GAAA0B,QAAA,CAAAtU,IAAA;QAAA;UAAAsU,QAAA,CAAA1B,IAAA;UAAA0B,QAAA,CAAAtU,IAAA;UAAA,OAEFuU,KAAK,CAAC,uCAAuC,CAAC;QAAA;UAA/DH,QAAQ,GAAAE,QAAA,CAAApD,IAAA;UAAA,IAETkD,QAAQ,CAACI,EAAE;YAAAF,QAAA,CAAAtU,IAAA;YAAA;UAAA;UAAA,MACR,IAAI8Q,KAAK,wBAAA5M,MAAA,CAAwBkQ,QAAQ,CAACK,MAAM,CAAE,CAAC;QAAA;UAAAH,QAAA,CAAAtU,IAAA;UAAA,OAE9CoU,QAAQ,CAACM,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAJ,QAAA,CAAAjD,MAAA,WAAAiD,QAAA,CAAApD,IAAA;QAAA;UAAAoD,QAAA,CAAA1B,IAAA;UAAA0B,QAAA,CAAAK,EAAA,GAAAL,QAAA;UAE5BvO,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAAsO,QAAA,CAAAK,EAAO,CAAC;QAAC;QAAA;UAAA,OAAAL,QAAA,CAAAxB,IAAA;MAAA;IAAA,GAAAqB,OAAA;EAAA,CAEpD;EAAA,gBAXKD,oBAAoBA,CAAA;IAAA,OAAAntB,IAAA,CAAAktB,KAAA,OAAA3Z,SAAA;EAAA;AAAA,GAWzB;;AAED;;AAEA;AACA,IAAMsa,iBAAiB;EAAA,IAAAC,KAAA,GAAAhB,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAG,SAAA0C,SAAOC,UAAU;IAAA,IAAAX,QAAA,EAAAY,SAAA;IAAA,OAAA1G,mBAAA,GAAAc,IAAA,UAAA6F,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtC,IAAA,GAAAsC,SAAA,CAAAlV,IAAA;QAAA;UAAAkV,SAAA,CAAAtC,IAAA;UAAAsC,SAAA,CAAAlV,IAAA;UAAA,OAEhBuU,KAAK,iDAAArQ,MAAA,CACsB6Q,UAAU,GAC1D;YACEhE,MAAM,EAAE,QAAQ;YAChBoE,OAAO,EAAE;cACP,cAAc,EAAE;YAClB;UACF,CACF,CAAC;QAAA;UARKf,QAAQ,GAAAc,SAAA,CAAAhE,IAAA;UAAA,IAUTkD,QAAQ,CAACI,EAAE;YAAAU,SAAA,CAAAlV,IAAA;YAAA;UAAA;UAAAkV,SAAA,CAAAlV,IAAA;UAAA,OAEUoU,QAAQ,CAACM,IAAI,CAAC,CAAC;QAAA;UAAjCM,SAAS,GAAAE,SAAA,CAAAhE,IAAA;UACf,IAAI8D,SAAS,CAACta,IAAI,KAAK,eAAe,EAAE;YACtC0a,KAAK,CAAC,6CAA6C,CAAC;UACtD,CAAC,MAAM;YACLA,KAAK,CAAC,6BAA6B,CAAC;UACtC;QAAC;UAAAF,SAAA,CAAAlV,IAAA;UAAA;QAAA;UAAAkV,SAAA,CAAAtC,IAAA;UAAAsC,SAAA,CAAAP,EAAA,GAAAO,SAAA;UAGH;UACAnP,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAAkP,SAAA,CAAAP,EAAO,CAAC;QAAC;QAAA;UAAA,OAAAO,SAAA,CAAApC,IAAA;MAAA;IAAA,GAAAgC,QAAA;EAAA,CAEjD;EAAA,gBAzBKF,iBAAiBA,CAAAS,EAAA;IAAA,OAAAR,KAAA,CAAAZ,KAAA,OAAA3Z,SAAA;EAAA;AAAA,GAyBtB;;AAED;AACA,IAAMgb,4BAA4B;EAAA,IAAAC,KAAA,GAAA1B,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAG,SAAAoD,SAAA;IAAA,OAAAlH,mBAAA,GAAAc,IAAA,UAAAqG,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA9C,IAAA,GAAA8C,SAAA,CAAA1V,IAAA;QAAA;UAAA0V,SAAA,CAAA1V,IAAA;UAAA,OAC7BkU,oBAAoB,CAAC,CAAC,CAACtD,IAAI,CAAC,UAAC+E,IAAI,EAAK;YAC1C,IAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,UAACnH,CAAC,EAAEoH,CAAC,EAAK;cAC3C,OAAOC,QAAQ,CAACD,CAAC,CAACE,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAACrH,CAAC,CAACsH,KAAK,EAAE,EAAE,CAAC;YACtD,CAAC,CAAC;YACFrB,iBAAiB,CAACgB,UAAU,CAACA,UAAU,CAAC7c,MAAM,GAAG,CAAC,CAAC,CAACmd,QAAQ,CAAC;UAC/D,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAR,SAAA,CAAA5C,IAAA;MAAA;IAAA,GAAA0C,QAAA;EAAA,CACH;EAAA,gBAPKF,4BAA4BA,CAAA;IAAA,OAAAC,KAAA,CAAAtB,KAAA,OAAA3Z,SAAA;EAAA;AAAA,GAOjC;;AAED;AACA,IAAM6b,kBAAkB,GAAAxjB,OAAA,CAAAwjB,kBAAA;EAAA,IAAAC,KAAA,GAAAvC,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAG,SAAAiE,SAAOH,QAAQ,EAAED,KAAK;IAAA,IAAA7B,QAAA,EAAAY,SAAA;IAAA,OAAA1G,mBAAA,GAAAc,IAAA,UAAAkH,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAAvW,IAAA;QAAA;UAAAuW,SAAA,CAAA3D,IAAA;UAAA2D,SAAA,CAAAvW,IAAA;UAAA,OAEtBuU,KAAK,CAAC,0CAA0C,EAAE;YACvExD,MAAM,EAAE,MAAM;YACdoE,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBR,QAAQ,EAAEA,QAAQ;cAClBD,KAAK,EAAEA;YACT,CAAC;UACH,CAAC,CAAC;QAAA;UATI7B,QAAQ,GAAAmC,SAAA,CAAArF,IAAA;UAUdnL,OAAO,CAACC,GAAG,CAACoO,QAAQ,CAAC;UAAC,IAEjBA,QAAQ,CAACI,EAAE;YAAA+B,SAAA,CAAAvW,IAAA;YAAA;UAAA;UACd+F,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UACrB;UAAAuQ,SAAA,CAAAvW,IAAA;UAAA,OACwBoU,QAAQ,CAACM,IAAI,CAAC,CAAC;QAAA;UAAjCM,SAAS,GAAAuB,SAAA,CAAArF,IAAA;UAAA,MACX8D,SAAS,CAACta,IAAI,KAAK,yBAAyB;YAAA6b,SAAA,CAAAvW,IAAA;YAAA;UAAA;UAAA,OAAAuW,SAAA,CAAAlF,MAAA,WACvCtL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QAAA;UAE7CoP,KAAK,CAAC,6BAA6B,CAAC;QAAC;UAAAmB,SAAA,CAAAvW,IAAA;UAAA;QAAA;UAAAuW,SAAA,CAAAvW,IAAA;UAAA,OAGjCsV,4BAA4B,CAAC,CAAC;QAAA;UAAAiB,SAAA,CAAAvW,IAAA;UAAA;QAAA;UAAAuW,SAAA,CAAA3D,IAAA;UAAA2D,SAAA,CAAA5B,EAAA,GAAA4B,SAAA;UAGtC;UACAxQ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAAuQ,SAAA,CAAA5B,EAAO,CAAC;QAAC;QAAA;UAAA,OAAA4B,SAAA,CAAAzD,IAAA;MAAA;IAAA,GAAAuD,QAAA;EAAA,CAElD;EAAA,gBA9BKF,kBAAkBA,CAAAQ,GAAA,EAAAC,GAAA;IAAA,OAAAR,KAAA,CAAAnC,KAAA,OAAA3Z,SAAA;EAAA;AAAA,GA8BvB;AAED,IAAMuc,mBAAmB,GAAAlkB,OAAA,CAAAkkB,mBAAA;EAAA,IAAAC,KAAA,GAAAjD,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAG,SAAA2E,SAAOd,KAAK;IAAA,OAAA3H,mBAAA,GAAAc,IAAA,UAAA4H,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArE,IAAA,GAAAqE,SAAA,CAAAjX,IAAA;QAAA;QAAA;UAAA,OAAAiX,SAAA,CAAAnE,IAAA;MAAA;IAAA,GAAAiE,QAAA;EAAA,CAAO;EAAA,gBAAzCF,mBAAmBA,CAAAK,GAAA;IAAA,OAAAJ,KAAA,CAAA7C,KAAA,OAAA3Z,SAAA;EAAA;AAAA,GAAsB;;;;;;;;;;ACvF/C,IAAA6c,KAAA,GAAArkB,OAAA;AAEO,SAASskB,eAAeA,CAACzB,IAAI,EAAE;EACpC,OAAOA,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,UAACnH,CAAC,EAAEoH,CAAC,EAAK;IAC/B,OAAOC,QAAQ,CAACD,CAAC,CAACE,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAACrH,CAAC,CAACsH,KAAK,EAAE,EAAE,CAAC;EACtD,CAAC,CAAC;AACJ;AAEO,SAASoB,SAASA,CAACC,MAAM,EAAE;EAChC,IAAMC,SAAS,GAAGD,MAAM,GAAG,EAAE;EAC7B,IAAIA,MAAM,KAAK,EAAE,IAAIA,MAAM,KAAK,EAAE,IAAIA,MAAM,KAAK,EAAE,EAAE;IACnD,OAAO,IAAI;EACb,CAAC,MAAM,IAAIC,SAAS,KAAK,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb,CAAC,MAAM,IAAIA,SAAS,KAAK,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb,CAAC,MAAM,IAAIA,SAAS,KAAK,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;AAEO,SAASC,iBAAiBA,CAAC3a,eAAe,EAAE;EACjD;EACA,IAAM4a,eAAe,GAAGpkB,QAAQ,CAACsC,aAAa,CAAC,0BAA0B,CAAC;EAC1E,IAAM+hB,iBAAiB,GAAGrkB,QAAQ,CAACsC,aAAa,CAC9C,4BACF,CAAC;EACD,IAAMgiB,qBAAqB,GAAGtkB,QAAQ,CAACsC,aAAa,CAClD,4BACF,CAAC;;EAED;EACA,IAAMiiB,qBAAqB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;EACnE,IAAMC,uBAAuB,GAAGF,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACvE,IAAME,uBAAuB,GAAGH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;;EAEvE;EACA,IAAIF,qBAAqB,KAAK,IAAI,EAAE;IAClCH,eAAe,CAAC3P,WAAW,GAAG8P,qBAAqB;EACrD;EAEA,IAAIG,uBAAuB,KAAK,IAAI,EAAE;IACpCL,iBAAiB,CAAC5P,WAAW,GAAGiQ,uBAAuB;EACzD;EAEA,IAAIC,uBAAuB,KAAK,IAAI,EAAE;IACpCL,qBAAqB,CAAC7P,WAAW,GAAGkQ,uBAAuB;EAC7D;EAEA,IAAA9D,0BAAoB,EAAC,CAAC,CAACtD,IAAI,CAAC,UAAC+E,IAAI,EAAK;IACpC,IAAMC,UAAU,GAAGwB,eAAe,CAACzB,IAAI,CAAC;;IAExC;IACAC,UAAU,CAACliB,OAAO,CAAC,UAAC4N,IAAI,EAAEkK,KAAK,EAAK;MAClC,IAAMyM,UAAU,GAAG5kB,QAAQ,CAACmI,aAAa,CAAC,IAAI,CAAC;MAC/Cyc,UAAU,CAACrgB,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC3CogB,UAAU,CAAC/d,EAAE,sBAAAgK,MAAA,CAAsBsH,KAAK,GAAG,CAAC,CAAE;;MAE9C;MACA,IAAM0M,QAAQ,GAAG7kB,QAAQ,CAACmI,aAAa,CAAC,IAAI,CAAC;MAC7C0c,QAAQ,CAACtgB,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC/C,IAAMsgB,WAAW,GAAGd,SAAS,CAAC7L,KAAK,GAAG,CAAC,CAAC;MACxC0M,QAAQ,CAACpQ,WAAW,MAAA5D,MAAA,CAAMsH,KAAK,GAAG,CAAC,EAAAtH,MAAA,CAAGiU,WAAW,CAAE;MACnDF,UAAU,CAAC3b,WAAW,CAAC4b,QAAQ,CAAC;;MAEhC;MACA,IAAME,SAAS,GAAG/kB,QAAQ,CAACmI,aAAa,CAAC,IAAI,CAAC;MAC9C4c,SAAS,CAACxgB,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACjDugB,SAAS,CAACtQ,WAAW,MAAA5D,MAAA,CAAM5C,IAAI,CAAC2U,KAAK,CAAE;MACvCgC,UAAU,CAAC3b,WAAW,CAAC8b,SAAS,CAAC;;MAEjC;MACA,IAAMC,QAAQ,GAAGhlB,QAAQ,CAACmI,aAAa,CAAC,IAAI,CAAC;MAC7C6c,QAAQ,CAACzgB,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAC/CwgB,QAAQ,CAACvQ,WAAW,MAAA5D,MAAA,CAAM5C,IAAI,CAAC4U,QAAQ,CAAE;MACzC+B,UAAU,CAAC3b,WAAW,CAAC+b,QAAQ,CAAC;;MAEhC;MACAxb,eAAe,CAACP,WAAW,CAAC2b,UAAU,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;;;;;;;;;;ACnFA,IAAMK,aAAa,GAAG,CACpgBAAgBA,CAACC,KAAK,EAAE;EAAA,IAAA7U,SAAA,GAAAjF,0BAAA,CACZ4Z,aAAa;IAAA1U,KAAA;EAAA;IAAhC,KAAAD,SAAA,CAAAtE,CAAA,MAAAuE,KAAA,GAAAD,SAAA,CAAArE,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBkZ,IAAI,GAAA7U,KAAA,CAAAnd,KAAA;MACb,IAAI+xB,KAAK,CAAC5S,QAAQ,CAAC6S,IAAI,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC,CAAC;MACf;IACF;EAAC,SAAA5Y,GAAA;IAAA8D,SAAA,CAAAnJ,CAAA,CAAAqF,GAAA;EAAA;IAAA8D,SAAA,CAAAlE,CAAA;EAAA;EACD,OAAO,KAAK,CAAC,CAAC;AAChB;;AAEA,SAASiZ,aAAaA,CAAA,EAAG;EACvB,IAAMC,SAAS,GAAGtlB,QAAQ,CAAC2E,cAAc,CAAC,mBAAmB,CAAC,CAACvR,KAAK;EACpE,IAAI8xB,gBAAgB,CAACI,SAAS,CAAC,EAAE;IAC/B,OAAO,KAAK;EACd,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;;;;;;;;;;ACvKA,IAAA9lB,qBAAA,GAAAC,OAAA;AAIyC,SAAAqN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAEzC,IAAM7N,KAAK,GAAG,IAAI;AAClB,IAAMylB,uBAAuB,GAAG,KAAK;AACrC,IAAMC,uBAAuB,GAAG,KAAK;AACrC,IAAMxc,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAImjB,kBAAkB;AACf,SAASC,eAAeA,CAAA,EAAG;EAChCD,kBAAkB,GAAGF,uBAAuB;EAC5CvlB,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,CAACI,OAAO,CAAC,UAACslB,UAAU,EAAK;IACrEA,UAAU,CAAClhB,MAAM,CAAC,CAAC;EACrB,CAAC,CAAC;AACJ;AAEO,SAASmhB,gBAAgBA,CAACxlB,KAAK,EAAEnM,UAAU,EAAE;EAClD+L,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,CAACI,OAAO,CAAC,UAACslB,UAAU,EAAK;IACrE,IAAApyB,6CAAuB,EACrBoyB,UAAU,EACV,QAAQ,EACRvlB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAChC,CAAC;IACD,IAAI,IAAAjN,uCAAiB,EAAC8yB,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MACnDA,UAAU,CAAClhB,MAAM,CAAC,CAAC;IACrB;EACF,CAAC,CAAC;EAEF,IAAIghB,kBAAkB,IAAI,CAAC,EAAE;IAC3BI,iBAAiB,CAAC,CAAC;IACnBJ,kBAAkB,GAChB9V,mBAAmB,CAAC4V,uBAAuB,EAAEC,uBAAuB,CAAC,GACrEvxB,UAAU;EACd;EACAwxB,kBAAkB,IAAIrlB,KAAK;AAC7B;AAEO,SAAS0lB,kBAAkBA,CAAA,EAAG;EACnC,OAAOhZ,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE4P,GAAG,CAC5D,UAAC8V,UAAU,EAAK;IACd,OAAO;MACL9e,EAAE,EAAE8e,UAAU,CAAC9e,EAAE;MACjBiJ,IAAI,EAAE6V,UAAU,CAACvhB,qBAAqB,CAAC,CAAC;MACxCuhB,UAAU,EAAEA,UAAU,CAACrd,OAAO,CAACqd;IACjC,CAAC;EACH,CACF,CAAC;AACH;AAEA,SAASI,oBAAoBA,CAACnmB,GAAG,EAAE;EACjC,IAAMkY,IAAI,GAAG3Y,MAAM,CAAC2Y,IAAI,CAAClY,GAAG,CAAC;EAC7B,IAAMwY,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EACvC,IAAMC,WAAW,GAAG3Q,IAAI,CAACgB,MAAM,CAAC,CAAC;EACjC,IAAI4P,qBAAqB,GAAG,CAAC;EAE7B,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgM,IAAI,CAACpS,MAAM,EAAEoG,CAAC,EAAE,EAAE;IACpCwM,qBAAqB,IAAIF,aAAa,CAACtM,CAAC,CAAC;IACzC,IAAIuM,WAAW,IAAIC,qBAAqB,EAAE;MACxC,OAAOR,IAAI,CAAChM,CAAC,CAAC;IAChB;EACF;;EAEA;EACA,OAAOgM,IAAI,CAACA,IAAI,CAACpS,MAAM,GAAG,CAAC,CAAC;AAC9B;AAEA,SAASmgB,iBAAiBA,CAAA,EAAG;EAC3B,IAAMF,UAAU,GAAG3lB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAChDwd,UAAU,CAACrd,OAAO,CAACqd,UAAU,GAC3BK,gBAAgB,CAACD,oBAAoB,CAACC,gBAAgB,CAAC,CAAC;EAC1DL,UAAU,CAAClR,WAAW,GAAGkR,UAAU,CAACrd,OAAO,CAACqd,UAAU;EACtDA,UAAU,CAACphB,SAAS,CAACC,GAAG,CAAC,YAAY,EAAE,eAAe,CAAC;EACvDmhB,UAAU,CAAC9e,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EACnD,IAAAzV,uCAAiB,EAACwyB,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC;EAC5C3c,SAAS,CAAC8H,MAAM,CAAC6U,UAAU,CAAC;AAC9B;AAEA,SAAShW,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;AAEA,IAAMme,gBAAgB,GAAG;EACvBC,EAAE,EAAE,CAAC;EACLC,EAAE,EAAE,CAAC;EACLC,GAAG,EAAE;AACP,CAAC;;;;;;;;;;ACxFD,IAAA3mB,qBAAA,GAAAC,OAAA;AAIyC,SAAAqN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAEzC,IAAM7N,KAAK,GAAG,IAAI;AAClB,IAAMsmB,mBAAmB,GAAG,IAAI;AAChC,IAAMC,mBAAmB,GAAG,IAAI;AAChC,IAAMrd,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAIgkB,cAAc;AACX,SAASC,WAAWA,CAAA,EAAG;EAC5BD,cAAc,GAAGF,mBAAmB;EACpCpmB,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACI,OAAO,CAAC,UAACmmB,MAAM,EAAK;IAC7DA,MAAM,CAAC/hB,MAAM,CAAC,CAAC;EACjB,CAAC,CAAC;AACJ;AAEO,SAASgiB,YAAYA,CAACrmB,KAAK,EAAEnM,UAAU,EAAE;EAC9C+L,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAACI,OAAO,CAAC,UAACmmB,MAAM,EAAK;IAC7D,IAAAjzB,6CAAuB,EAACizB,MAAM,EAAE,QAAQ,EAAEpmB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;IAC1E,IAAI,IAAAjN,uCAAiB,EAAC2zB,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC/CA,MAAM,CAAC/hB,MAAM,CAAC,CAAC;IACjB;EACF,CAAC,CAAC;EAEF,IAAI6hB,cAAc,IAAI,CAAC,EAAE;IACvBI,YAAY,CAAC,CAAC;IACdJ,cAAc,GACZ3W,mBAAmB,CAACyW,mBAAmB,EAAEC,mBAAmB,CAAC,GAC7DpyB,UAAU;EACd;EACAqyB,cAAc,IAAIlmB,KAAK;AACzB;AAEO,SAASumB,cAAcA,CAAA,EAAG;EAC/B,OAAO7Z,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,eAAe,CAAC,EAAE4P,GAAG,CAAC,UAAC2W,MAAM,EAAK;IACrE,OAAO;MACL3f,EAAE,EAAE2f,MAAM,CAAC3f,EAAE;MACbiJ,IAAI,EAAE0W,MAAM,CAACpiB,qBAAqB,CAAC,CAAC;MACpCoiB,MAAM,EAAEA,MAAM,CAACle,OAAO,CAACke;IACzB,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASE,YAAYA,CAAA,EAAG;EACtB,IAAMF,MAAM,GAAGxmB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC5Cqe,MAAM,CAACle,OAAO,CAACke,MAAM,GAAG,IAAI;EAC5BA,MAAM,CAAC/R,WAAW,GAAG,QAAQ;EAC7B+R,MAAM,CAACjiB,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC;EAC/CgiB,MAAM,CAAC3f,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC/C,IAAAzV,uCAAiB,EAACqzB,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC;EACxCxd,SAAS,CAAC8H,MAAM,CAAC0V,MAAM,CAAC;AAC1B;AAEA,SAAS7W,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;;;;;;AC1DO,SAAS+e,aAAaA,CAAA,EAAG;EAC9B,OAAO9Z,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC,EAAE4P,GAAG,CAAC,UAACyF,KAAK,EAAK;IACnE,OAAO;MACLzO,EAAE,EAAEyO,KAAK,CAACzO,EAAE;MACZiJ,IAAI,EAAEwF,KAAK,CAAClR,qBAAqB,CAAC,CAAC;MACnCkR,KAAK,EAAEA,KAAK,CAAChN,OAAO,CAACgN;IACvB,CAAC;EACH,CAAC,CAAC;AACJ;;;;;;;;;;;;;;ACRO,SAASuR,YAAYA,CAAA,EAAG;EAC7B,OAAO/Z,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,EAAE4P,GAAG,CAAC,UAACiX,IAAI,EAAK;IACjE,OAAO;MACLjgB,EAAE,EAAEigB,IAAI,CAACjgB,EAAE;MACXiJ,IAAI,EAAEgX,IAAI,CAAC1iB,qBAAqB,CAAC,CAAC;MAClCkR,KAAK,EAAEwR,IAAI,CAACxe,OAAO,CAACwe;IACtB,CAAC;EACH,CAAC,CAAC;AACJ;;;;;;;;;;ACRA,IAAAtnB,qBAAA,GAAAC,OAAA;AAIyC,SAAAqN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAEzC,IAAM7N,KAAK,GAAG,IAAI;AAClB,IAAMinB,kBAAkB,GAAG,IAAI;AAC/B,IAAMC,kBAAkB,GAAG,IAAI;AAC/B,IAAMhe,SAAS,GAAGhJ,QAAQ,CAACsC,aAAa,CAAC,cAAc,CAAC;AAExD,IAAI2kB,YAAY;AACT,SAASC,SAASA,CAAA,EAAG;EAC1BD,YAAY,GAAGF,kBAAkB;EACjC/mB,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAAC+U,IAAI,EAAK;IACzDA,IAAI,CAAC3Q,MAAM,CAAC,CAAC;EACf,CAAC,CAAC;AACJ;AAEO,SAAS0iB,UAAUA,CAAC/mB,KAAK,EAAEnM,UAAU,EAAE;EAC5C+L,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAAC+U,IAAI,EAAK;IACzD,IAAA7hB,6CAAuB,EAAC6hB,IAAI,EAAE,QAAQ,EAAEhV,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;IACxE,IAAI,IAAAjN,uCAAiB,EAACuiB,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MAC7CA,IAAI,CAAC3Q,MAAM,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEF,IAAIwiB,YAAY,IAAI,CAAC,EAAE;IACrBG,WAAW,CAAC,CAAC;IACbH,YAAY,GACVtX,mBAAmB,CAACoX,kBAAkB,EAAEC,kBAAkB,CAAC,GAAG/yB,UAAU;EAC5E;EACAgzB,YAAY,IAAI7mB,KAAK;AACvB;AAEO,SAASinB,YAAYA,CAAA,EAAG;EAC7B,OAAOva,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,EAAE4P,GAAG,CAAC,UAACuF,IAAI,EAAK;IACjE,OAAO;MACLvO,EAAE,EAAEuO,IAAI,CAACvO,EAAE;MACXiJ,IAAI,EAAEsF,IAAI,CAAChR,qBAAqB,CAAC,CAAC;MAClCgR,IAAI,EAAEA,IAAI,CAAC9M,OAAO,CAAC8M;IACrB,CAAC;EACH,CAAC,CAAC;AACJ;AAEA,SAASgS,WAAWA,CAAA,EAAG;EACrB,IAAMhS,IAAI,GAAGpV,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC1CiN,IAAI,CAAC9M,OAAO,CAAC8M,IAAI,GAAG,IAAI;EACxBA,IAAI,CAACX,WAAW,GAAG,MAAM;EACzBW,IAAI,CAAC7Q,SAAS,CAACC,GAAG,CAAC,MAAM,EAAE,eAAe,CAAC;EAC3C4Q,IAAI,CAACvO,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC7C,IAAAzV,uCAAiB,EAACiiB,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;EACtCpM,SAAS,CAAC8H,MAAM,CAACsE,IAAI,CAAC;AACxB;AAEA,SAASzF,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EACrC,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA,IAAMyf,IAAI,GAAAhoB,OAAA,CAAAgoB,IAAA,GAAG;EACXC,EAAE,EAAE,OAAO;EACXC,OAAO,EAAE,KAAK;EAAE;EAChBC,SAAS,EAAE,CAAC;EAAE;EACdC,YAAY,EAAE,GAAG;EACjBC,MAAM,EAAE,IAAI;EACZC,GAAG,EAAE,IAAI;EACTC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EAEbC,IAAI,WAAAA,KAAA,EAAG;IACL,IAAI,CAACF,IAAI,GAAG,KAAK;IACjB,IAAI,CAACL,MAAM,GAAG3nB,QAAQ,CAACsC,aAAa,CAAC,IAAI,CAACilB,EAAE,CAAC;IAC7C,IAAI,CAACK,GAAG,GAAG,IAAI,CAACD,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IACvC,IAAI,CAACxJ,KAAK,CAAC,CAAC;IACZyJ,qBAAqB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7CC,MAAM,CAAC1kB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC8a,KAAK,CAAC2J,IAAI,CAAC,IAAI,CAAC,CAAC;EAC1D,CAAC;EACD3J,KAAK,WAAAA,MAAA,EAAG;IACN,IAAI,CAAC6J,CAAC,GAAGD,MAAM,CAACE,UAAU;IAC1B,IAAI,CAACnM,CAAC,GAAGiM,MAAM,CAACG,WAAW;IAC3B,IAAI,CAACf,MAAM,CAACgB,KAAK,GAAG,IAAI,CAACH,CAAC;IAC1B,IAAI,CAACb,MAAM,CAACiB,MAAM,GAAG,IAAI,CAACtM,CAAC;IAC3B,IAAI,CAACuL,SAAS,GAAG,EAAE;IACnB,IAAI,CAACE,EAAE,GAAGrgB,IAAI,CAACmhB,IAAI,CAAE,IAAI,CAACL,CAAC,GAAG,IAAI,CAAClM,CAAC,GAAI,IAAI,CAACkL,OAAO,CAAC;IACrD,KAAK,IAAI1b,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACic,EAAE,EAAEjc,CAAC,EAAE,EAAE;MAChC,IAAIgd,IAAI,GAAGphB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;MAClC,IAAI,CAACmf,SAAS,CAACpW,IAAI,CAAC;QAClBhD,CAAC,EAAE/G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC8f,CAAC;QAAE;QAC3Bha,CAAC,EAAE9G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC4T,CAAC;QAAE;QAC3BkM,CAAC,EAAEM,IAAI;QACPxM,CAAC,EAAEwM,IAAI;QACPC,EAAE,EAAE,IAAI,CAACrB,YAAY,GAAGhgB,IAAI,CAACgB,MAAM,CAAC,CAAC;QAAE;QACvCsgB,EAAE,EAAEthB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC+e,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG,CAAC;QACvDwB,IAAI,EAAE,SAAS;QACfjd,CAAC,EAAEtE,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EAED2f,MAAM,WAAAA,OAAA,EAAG;IAAA,IAAAa,KAAA;IACP,IAAI,IAAI,CAACjB,MAAM,EAAE;MACf;IACF;IAEA,IAAI,CAACL,GAAG,CAACuB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACX,CAAC,EAAE,IAAI,CAAClM,CAAC,CAAC;IACxC,IAAI,CAACuL,SAAS,CAACxnB,OAAO,CAAC,UAACqc,CAAC,EAAE5Q,CAAC,EAAK;MAC/B4Q,CAAC,CAAClO,CAAC,IAAIkO,CAAC,CAACqM,EAAE;MACXrM,CAAC,CAACjO,CAAC,IAAIiO,CAAC,CAACsM,EAAE;MACXE,KAAI,CAACtB,GAAG,CAACwB,SAAS,GAAG1M,CAAC,CAACuM,IAAI;MAC3BC,KAAI,CAACtB,GAAG,CAACyB,QAAQ,CAAC3M,CAAC,CAACjO,CAAC,EAAEiO,CAAC,CAAClO,CAAC,EAAEkO,CAAC,CAAC8L,CAAC,EAAE9L,CAAC,CAACJ,CAAC,CAAC;MACrC,IAAII,CAAC,CAACjO,CAAC,GAAGya,KAAI,CAACV,CAAC,GAAG,CAAC,IAAI9L,CAAC,CAACjO,CAAC,GAAG,CAAC,CAAC,IAAIiO,CAAC,CAAClO,CAAC,GAAG0a,KAAI,CAAC5M,CAAC,EAAE;QAChDI,CAAC,CAACjO,CAAC,GAAG/G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGwgB,KAAI,CAACV,CAAC;QAC5B9L,CAAC,CAAClO,CAAC,GAAG,CAAC,EAAE;MACX;IACF,CAAC,CAAC;IACF,IAAI,IAAI,CAACwZ,IAAI,EAAE;MACb;IACF;IACAI,qBAAqB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/C,CAAC;EAEDgB,WAAW,WAAAA,YAAA,EAAG;IACZ,IAAI,CAACrB,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;IAC1B,IAAI,IAAI,CAACA,MAAM,EAAE;MACf;MACA,IAAI,CAACD,IAAI,GAAG,IAAI,CAAC,CAAC;MAClB;IACF,CAAC,MAAM;MACL;MACA,IAAI,CAACA,IAAI,GAAG,KAAK,CAAC,CAAC;MACnBI,qBAAqB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7C;IACF;EACF,CAAC;EAEDiB,OAAO,WAAAA,QAAA,EAAG;IACR,IAAI,CAACvB,IAAI,GAAG,IAAI;EAClB;AACF,CAAC;;AAED;AACA,IAAMwB,QAAQ,GAAAlqB,OAAA,CAAAkqB,QAAA,GAAArsB,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA;EACZoqB,EAAE,EAAE,WAAW;EACfC,OAAO,EAAE,GAAG;EACZC,SAAS,EAAE,GAAG;EAAE;EAChBC,YAAY,EAAE,CAAC;EAAE;EACjBC,MAAM,EAAE,IAAI;EACZC,GAAG,EAAE,IAAI;EACTC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EAAE;EAChCC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,KAAK;EACXyB,WAAW,EAAE,IAAI;EAEjBvB,IAAI,WAAAA,KAAA,EAAG;IACL,IAAI,CAACL,SAAS,GAAG,EAAE;IACnB,IAAI,CAACG,IAAI,GAAG,KAAK;IACjB,IAAI,CAACL,MAAM,GAAG3nB,QAAQ,CAACsC,aAAa,CAAC,IAAI,CAACilB,EAAE,CAAC;IAC7C,IAAI,CAACK,GAAG,GAAG,IAAI,CAACD,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IACvC,IAAI,CAACxJ,KAAK,CAAC,CAAC;IACZyJ,qBAAqB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7CC,MAAM,CAAC1kB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC8a,KAAK,CAAC2J,IAAI,CAAC,IAAI,CAAC,CAAC;EAC1D;AAAC,kBAGY,KAAK,qBAAA3J,MAAA,EAEV;EACN,IAAI,CAAC6J,CAAC,GAAGD,MAAM,CAACE,UAAU;EAC1B,IAAI,CAACnM,CAAC,GAAGiM,MAAM,CAACG,WAAW;EAC3B,IAAI,CAACf,MAAM,CAACgB,KAAK,GAAG,IAAI,CAACH,CAAC;EAC1B,IAAI,CAACb,MAAM,CAACiB,MAAM,GAAG,IAAI,CAACtM,CAAC;EAC3B,IAAI,CAACuL,SAAS,GAAG,EAAE;EACnB;EACA,IAAI,CAACE,EAAE,GAAG,IAAI;EAEd,KAAK,IAAIjc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACic,EAAE,EAAEjc,CAAC,EAAE,EAAE;IAChC,IAAIgd,IAAI,GAAG,CAAC;IACZ;IACA,IAAIphB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;MACvBogB,IAAI,GAAGphB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAClC,CAAC,MAAM;MACLogB,IAAI,GAAGphB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC;;IAEA;IACA,IAAIghB,gBAAgB,GAAG,CAAC;IACxB,IAAIhiB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;MACvBghB,gBAAgB,GAAG,CAAC,CAAC,CAAC;IACxB;;IAEA,IAAIX,EAAE,GAAG,IAAI,CAACU,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC/B,YAAY,GAAGhgB,IAAI,CAACgB,MAAM,CAAC,CAAC;IACjE,IAAI8F,CAAC,GAAG,IAAI,CAACib,WAAW,GACpB/hB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC4T,CAAC,GACtB5U,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,CAACogB,IAAI,GAAG,GAAG;IAC/B,IAAIa,eAAe,GAAGjiB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACrD,IAAI,CAACmf,SAAS,CAACpW,IAAI,CAAC;MAClBhD,CAAC,EAAE/G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC8f,CAAC;MACzBha,CAAC,EAAEA,CAAC;MACJga,CAAC,EAAEM,IAAI;MACPxM,CAAC,EAAEwM,IAAI,GAAGY,gBAAgB;MAC1BX,EAAE,EAAEA,EAAE;MACNC,EAAE,EAAEthB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC+e,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG,CAAC;MACvDwB,IAAI,EAAE,IAAI,CAACnB,MAAM,CAACpgB,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,CAACof,MAAM,CAACpiB,MAAM,CAAC,CAAC;MACjEsG,CAAC,EAAEtE,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAC5B4F,KAAK,EAAE5G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG;MAAE;MAC5BkhB,aAAa,EAAEliB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI;MAAE;MAC5CihB,eAAe,EAAEA;IACnB,CAAC,CAAC;IACF,IAAI,CAACF,WAAW,GAAG,KAAK;EAC1B;AACF,CAAC,sBAAApB,OAAA,EAEQ;EAAA,IAAAwB,MAAA;EACP,IAAI,CAACjC,GAAG,CAACuB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACX,CAAC,EAAE,IAAI,CAAClM,CAAC,CAAC;EAExC,IAAI,CAACuL,SAAS,CAACxnB,OAAO,CAAC,UAACqc,CAAC,EAAE5Q,CAAC,EAAK;IAC/B4Q,CAAC,CAACjO,CAAC,IAAIiO,CAAC,CAACsM,EAAE;IACX;IACAtM,CAAC,CAACpO,KAAK,IAAIoO,CAAC,CAACkN,aAAa;IAC1BlN,CAAC,CAAClO,CAAC,IAAIkO,CAAC,CAACqM,EAAE,CAAC,CAAC;;IAEb;IACA,IAAMe,UAAU,GAAG,CAAC;IACpB,IAAMC,UAAU,GAAG,CAAC;IACpB,IAAMC,YAAY,GAAGF,UAAU,GAAGC,UAAU;IAC5C,IAAME,WAAW,GAAGvN,CAAC,CAAClO,CAAC,GAAGqb,MAAI,CAACvN,CAAC,CAAC,CAAC;IAClC,IAAM4N,OAAO,GAAGJ,UAAU,GAAGG,WAAW,GAAGD,YAAY;;IAEvD;IACA,IAAMG,QAAQ,GAAGzN,CAAC,CAAC8L,CAAC;IACpB,IAAM4B,QAAQ,GAAG,CAAC;IAClB,IAAMzB,KAAK,GAAGyB,QAAQ,GAAG1N,CAAC,CAACiN,eAAe,IAAIQ,QAAQ,GAAGC,QAAQ,CAAC;;IAElE;IACAP,MAAI,CAACjC,GAAG,CAACyC,IAAI,CAAC,CAAC;IACfR,MAAI,CAACjC,GAAG,CAAC0C,SAAS,CAAC5N,CAAC,CAACjO,CAAC,GAAGka,KAAK,GAAG,CAAC,EAAEjM,CAAC,CAAClO,CAAC,GAAGkO,CAAC,CAACJ,CAAC,GAAG,CAAC,CAAC;IAClDuN,MAAI,CAACjC,GAAG,CAAC2C,MAAM,CAAE7iB,IAAI,CAAC8iB,EAAE,GAAG,GAAG,GAAI9N,CAAC,CAACpO,KAAK,CAAC;IAC1Cub,MAAI,CAACjC,GAAG,CAAC6C,WAAW,GAAGP,OAAO;IAC9BL,MAAI,CAACjC,GAAG,CAACwB,SAAS,GAAG1M,CAAC,CAACuM,IAAI;IAC3BY,MAAI,CAACjC,GAAG,CAACyB,QAAQ,CAAC,CAACV,KAAK,GAAG,CAAC,EAAE,CAACjM,CAAC,CAACJ,CAAC,GAAG,CAAC,EAAEqM,KAAK,EAAEjM,CAAC,CAACJ,CAAC,CAAC;IACnDuN,MAAI,CAACjC,GAAG,CAAC8C,OAAO,CAAC,CAAC;IAElB,IAAIhO,CAAC,CAACjO,CAAC,GAAGob,MAAI,CAACrB,CAAC,GAAG,CAAC,IAAI9L,CAAC,CAACjO,CAAC,GAAG,CAAC,CAAC,IAAIiO,CAAC,CAAClO,CAAC,GAAGqb,MAAI,CAACvN,CAAC,EAAE;MAChDI,CAAC,CAACjO,CAAC,GAAG/G,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAGmhB,MAAI,CAACrB,CAAC;MAC5B9L,CAAC,CAAClO,CAAC,GAAG,CAAC,EAAE;IACX;EACF,CAAC,CAAC;EAEF,IAAI,IAAI,CAACwZ,IAAI,EAAE;IACb;EACF;EACAI,qBAAqB,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,CAAC,uBAAAiB,QAAA,EAES;EACR,IAAI,CAACvB,IAAI,GAAG,IAAI;AAClB,CAAC,CACF;;;;;;;;;AC3MD,IAAA2C,SAAA,GAAAhrB,sBAAA,CAAAF,OAAA;AACA,IAAAmrB,QAAA,GAAAjrB,sBAAA,CAAAF,OAAA;AACA,IAAAorB,UAAA,GAAAlrB,sBAAA,CAAAF,OAAA;AACA,IAAAqrB,KAAA,GAAAnrB,sBAAA,CAAAF,OAAA;AACA,IAAAsrB,SAAA,GAAAprB,sBAAA,CAAAF,OAAA;AACA,IAAAurB,OAAA,GAAArrB,sBAAA,CAAAF,OAAA;AACA,IAAAwrB,SAAA,GAAAtrB,sBAAA,CAAAF,OAAA;AACA,IAAAyrB,QAAA,GAAAvrB,sBAAA,CAAAF,OAAA;AAEA,IAAA2C,YAAA,GAAA3C,OAAA;AAOA,IAAA0rB,gBAAA,GAAA1rB,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC9C,IAAMwrB,oBAAoB,GAAGprB,QAAQ,CAACsC,aAAa,CAAC,eAAe,CAAC;AACpE,IAAM+oB,KAAK,GAAGrrB,QAAQ,CAAC2E,cAAc,CAAC,gBAAgB,CAAC;AAEvD,SAAS2mB,SAASA,CAACC,QAAQ,EAAE;EAC3B;EACA7Y,OAAO,CAACC,GAAG,aAAA9B,MAAA,CAAa0a,QAAQ,CAAE,CAAC;EACnCC,KAAK,CAACD,QAAQ,CAAC,CAACE,MAAM,CAAC,CAAC;EAExBjC,yBAAQ,CAACD,OAAO,CAAC,CAAC;EAClB;EACA8B,KAAK,CAACh4B,KAAK,CAACq4B,OAAO,GAAG,MAAM;EAC5BL,KAAK,CAAC9mB,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;EACpC2mB,oBAAoB,CAACO,SAAS,GAAG,EAAE;EACnC,IAAArC,wBAAW,EAAC,CAAC;AACf;AAEA,SAASsC,gBAAgBA,CAACL,QAAQ,EAAE;EAClC;EACA,IAAMM,WAAW,GAAG7rB,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC;EAClE;;EAEA;EACA,IAAM6rB,gBAAgB,GAAGngB,KAAK,CAAC6B,IAAI,CAACqe,WAAW,CAAC,CAACE,IAAI,CACnD,UAACC,UAAU;IAAA,OAAK,CAACA,UAAU,CAAC1pB,aAAa,CAAC,KAAK,CAAC;EAAA,CAClD,CAAC;EAED,IAAIwpB,gBAAgB,EAAE;IACpBA,gBAAgB,CAACvnB,SAAS,CAACE,MAAM,CAAC,KAAK,CAAC;;IAExC;IACAiO,OAAO,CAACC,GAAG,aAAA9B,MAAA,CAAa0a,QAAQ,CAAE,CAAC;IACnCU,YAAY,CAACV,QAAQ,CAAC,CAACE,MAAM,CAAC,CAAC;;IAE/B;IACA,IAAMS,IAAI,GAAGlsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAC1C+jB,IAAI,CAAC9qB,GAAG,GAAG6qB,YAAY,CAACV,QAAQ,CAAC,CAACW,IAAI;IACtCA,IAAI,CAACC,GAAG,MAAAtb,MAAA,CAAM0a,QAAQ,CAAE;IACxBW,IAAI,CAAC3nB,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC5BsnB,gBAAgB,CAAC7iB,WAAW,CAACijB,IAAI,CAAC;EACpC;EACA1C,yBAAQ,CAACD,OAAO,CAAC,CAAC;EAClB;EACA8B,KAAK,CAACh4B,KAAK,CAACq4B,OAAO,GAAG,MAAM;EAC5BL,KAAK,CAAC9mB,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;EACpC2mB,oBAAoB,CAACO,SAAS,GAAG,EAAE;EACnC,IAAArC,wBAAW,EAAC,CAAC;AACf;AAEO,SAAS8C,kBAAkBA,CAAA,EAAG;EACnC,IAAA9C,wBAAW,EAAC,CAAC;EACb;EACA,IAAM+B,KAAK,GAAGrrB,QAAQ,CAAC2E,cAAc,CAAC,gBAAgB,CAAC;EACvD0mB,KAAK,CAACh4B,KAAK,CAACq4B,OAAO,GAAG,MAAM;EAC5BL,KAAK,CAAC9mB,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;EAEjCrF,MAAM,CAAC2Y,IAAI,CAACmU,YAAY,CAAC,CAACpc,GAAG,CAAC,UAACmI,GAAG,EAAK;IACrC;IACA,IAAMqU,aAAa,GAAGrsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDkkB,aAAa,CAAC9nB,SAAS,CAACC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC;IAC7D6nB,aAAa,CAACxoB,gBAAgB,CAAC,OAAO,EAAE;MAAA,OAAM+nB,gBAAgB,CAAC5T,GAAG,CAAC;IAAA,EAAC;;IAEpE;IACA,IAAMsU,aAAa,GAAGtsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDmkB,aAAa,CAAC/nB,SAAS,CAACC,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC;;IAEvD;IACA,IAAM+nB,WAAW,GAAGvsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACjDokB,WAAW,CAAChoB,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;;IAE9C;IACA,IAAM0nB,IAAI,GAAGlsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAC1C+jB,IAAI,CAAC3nB,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC/B0nB,IAAI,CAAC9qB,GAAG,GAAG6qB,YAAY,CAACjU,GAAG,CAAC,CAACkU,IAAI;IACjCA,IAAI,CAACC,GAAG,MAAAtb,MAAA,CAAMmH,GAAG,UAAO;;IAExB;IACA,IAAMwU,KAAK,GAAGxsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAC3CqkB,KAAK,CAACjoB,SAAS,CAACC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;IAC9CgoB,KAAK,CAAC/X,WAAW,GAAGuD,GAAG;;IAEvB;IACAsU,aAAa,CAACrjB,WAAW,CAACujB,KAAK,CAAC;IAChC;IACAD,WAAW,CAACtjB,WAAW,CAACijB,IAAI,CAAC;IAC7BI,aAAa,CAACrjB,WAAW,CAACsjB,WAAW,CAAC;;IAEtC;IACA,IAAME,WAAW,GAAGzsB,QAAQ,CAACmI,aAAa,CAAC,GAAG,CAAC;IAC/CskB,WAAW,CAACloB,SAAS,CAACC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC;IACrDioB,WAAW,CAAChY,WAAW,GAAGwX,YAAY,CAACjU,GAAG,CAAC,CAACyU,WAAW;IAEvD,IAAMC,gBAAgB,GAAG1sB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACtDukB,gBAAgB,CAACnoB,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;;IAE1C;IACAkoB,gBAAgB,CAACzjB,WAAW,CAACqjB,aAAa,CAAC;IAC3CI,gBAAgB,CAACzjB,WAAW,CAACwjB,WAAW,CAAC;IACzCJ,aAAa,CAACpjB,WAAW,CAACyjB,gBAAgB,CAAC;;IAE3C;IACAtB,oBAAoB,CAACniB,WAAW,CAACojB,aAAa,CAAC;EACjD,CAAC,CAAC;EAEF7C,yBAAQ,CAACtB,IAAI,CAAC,CAAC;AACjB;AAEO,SAASyE,WAAWA,CAAA,EAAG;EAC5B,IAAArD,wBAAW,EAAC,CAAC;EACb;EACA,IAAM+B,KAAK,GAAGrrB,QAAQ,CAAC2E,cAAc,CAAC,gBAAgB,CAAC;EACvD0mB,KAAK,CAACh4B,KAAK,CAACq4B,OAAO,GAAG,MAAM;EAC5BL,KAAK,CAAC9mB,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;EAEjCrF,MAAM,CAAC2Y,IAAI,CAAC0T,KAAK,CAAC,CAAC3b,GAAG,CAAC,UAACmI,GAAG,EAAK;IAC9B;IACA,IAAMqU,aAAa,GAAGrsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDkkB,aAAa,CAAC9nB,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7C6nB,aAAa,CAACxoB,gBAAgB,CAAC,OAAO,EAAE;MAAA,OAAMynB,SAAS,CAACtT,GAAG,CAAC;IAAA,EAAC;;IAE7D;IACA,IAAMsU,aAAa,GAAGtsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDmkB,aAAa,CAAC/nB,SAAS,CAACC,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC;;IAEvD;IACA,IAAM+nB,WAAW,GAAGvsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACjDokB,WAAW,CAAChoB,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;;IAE9C;IACA,IAAM0nB,IAAI,GAAGlsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAC1C+jB,IAAI,CAAC3nB,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC/B0nB,IAAI,CAAC9qB,GAAG,GAAGoqB,KAAK,CAACxT,GAAG,CAAC,CAACkU,IAAI;IAC1BA,IAAI,CAACC,GAAG,MAAAtb,MAAA,CAAMmH,GAAG,UAAO;;IAExB;IACA,IAAMwU,KAAK,GAAGxsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAC3CqkB,KAAK,CAACjoB,SAAS,CAACC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC;IAC9CgoB,KAAK,CAAC/X,WAAW,GAAGuD,GAAG;;IAEvB;IACAsU,aAAa,CAACrjB,WAAW,CAACujB,KAAK,CAAC;IAChC;IACAD,WAAW,CAACtjB,WAAW,CAACijB,IAAI,CAAC;IAC7BI,aAAa,CAACrjB,WAAW,CAACsjB,WAAW,CAAC;;IAEtC;IACA,IAAME,WAAW,GAAGzsB,QAAQ,CAACmI,aAAa,CAAC,GAAG,CAAC;IAC/CskB,WAAW,CAACloB,SAAS,CAACC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC;IACrDioB,WAAW,CAAChY,WAAW,GAAG+W,KAAK,CAACxT,GAAG,CAAC,CAACyU,WAAW;IAEhD,IAAMC,gBAAgB,GAAG1sB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACtDukB,gBAAgB,CAACnoB,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;;IAE1C;IACAkoB,gBAAgB,CAACzjB,WAAW,CAACqjB,aAAa,CAAC;IAC3CI,gBAAgB,CAACzjB,WAAW,CAACwjB,WAAW,CAAC;IACzCJ,aAAa,CAACpjB,WAAW,CAACyjB,gBAAgB,CAAC;;IAE3C;IACAtB,oBAAoB,CAACniB,WAAW,CAACojB,aAAa,CAAC;EACjD,CAAC,CAAC;EAEF7C,yBAAQ,CAACtB,IAAI,CAAC,CAAC;AACjB;AAEA,IAAMsD,KAAK,GAAG;EACZoB,SAAS,EAAE;IACTH,WAAW,EAAE,sBAAsB;IACnCtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEW,kBAAS;IACfpB,MAAM,EAAEqB;EACV,CAAC;EACD,cAAc,EAAE;IACdL,WAAW,EAAE,qBAAqB;IAClCtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEa,eAAM;IACZtB,MAAM,EAAEqB;EACV,CAAC;EACDE,QAAQ,EAAE;IACRP,WAAW,EAAE,2CAA2C;IACxDtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEe,iBAAQ;IACdxB,MAAM,EAAEyB;EACV,CAAC;EACDC,MAAM,EAAE;IACNV,WAAW,EAAE,oCAAoC;IACjDtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEkB,iBAAQ;IACd3B,MAAM,EAAEqB;EACV;AACF,CAAC;AAED,IAAMb,YAAY,GAAG;EACnBoB,OAAO,EAAE;IACPZ,WAAW,EACT,6EAA6E;IAC/Etc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEoB,gBAAO;IACb7B,MAAM,EAAEqB;EACV,CAAC;EACD,cAAc,EAAE;IACdL,WAAW,EAAE,gCAAgC;IAC7Ctc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEqB,iBAAQ;IACd9B,MAAM,EAAEqB;EACV,CAAC;EACD,WAAW,EAAE;IACXL,WAAW,EAAE,+CAA+C;IAC5Dtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEsB,aAAI;IACV/B,MAAM,EAAEgC;EACV,CAAC;EACD,cAAc,EAAE;IACdhB,WAAW,EACT,+DAA+D;IACjEtc,MAAM,EAAE,CAAC;IACT+b,IAAI,EAAEwB,gBAAO;IACbjC,MAAM,EAAEqB;EACV;AACF,CAAC;;;;;;;;AC3OD,IAAMa,MAAM,GAAAruB,OAAA,CAAAquB,MAAA,GAAG;EACbC,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IACb55B,UAAU,EAAE;EACd,CAAC;EACD,CAAC,EAAE;IACD45B,SAAS,EAAE,EAAE;IACb55B,UAAU,EAAE;EACd,CAAC;EACD,CAAC,EAAE;IACD45B,SAAS,EAAE,EAAE;IACb55B,UAAU,EAAE;EACd;AACF,CAAC;;;;;;;;ACbD,IAAAyL,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAquB,gBAAA,GAAAruB,OAAA;AAA4C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC5C,IACEzB,qBAAqB,GAMnB1K,kBAAc,CANhB0K,qBAAqB;EACrBK,eAAe,GAKb/K,kBAAc,CALhB+K,eAAe;EACfC,eAAe,GAIbhL,kBAAc,CAJhBgL,eAAe;EACfL,qBAAqB,GAGnB3K,kBAAc,CAHhB2K,qBAAqB;EACrBa,WAAW,GAETxL,kBAAc,CAFhBwL,WAAW;EACXnF,gBAAgB,GACdrG,kBAAc,CADhBqG,gBAAgB;AAGX,SAASi0B,YAAYA,CAACC,KAAK,EAAE;EAClC/uB,WAAW,CAAC;IACVvK,eAAe,EAAE,IAAI;IACrBu5B,aAAa,EAAE,IAAI;IACnBx5B,iBAAiB,EAAE,IAAI;IACvBG,oBAAoB,EAAE;EACxB,CAAC,CAAC;EAEF,IAAIo5B,KAAK,GAAG7vB,qBAAqB,CAAC,CAAC,EAAE;IACnCuU,OAAO,CAACC,GAAG,UAAA9B,MAAA,CAAUrS,eAAe,CAAC,CAAC,cAAW,CAAC;IAClD1E,gBAAgB,CAAC,KAAK,CAAC;IACvB2E,eAAe,CAAC,OAAO,CAAC;IACxB;IACAL,qBAAqB,CAACD,qBAAqB,CAAC,CAAC,GAAGwvB,uBAAM,CAAC,OAAO,CAAC,CAACE,SAAS,CAAC;EAC5E;AACF;;;;;;;;AC1BA,IAAAnuB,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAquB,gBAAA,GAAAruB,OAAA;AAA4C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAE5C,IACEzB,qBAAqB,GAMnB1K,kBAAc,CANhB0K,qBAAqB;EACrBM,eAAe,GAKbhL,kBAAc,CALhBgL,eAAe;EACfL,qBAAqB,GAInB3K,kBAAc,CAJhB2K,qBAAqB;EACrBI,eAAe,GAGb/K,kBAAc,CAHhB+K,eAAe;EACfS,WAAW,GAETxL,kBAAc,CAFhBwL,WAAW;EACXnF,gBAAgB,GACdrG,kBAAc,CADhBqG,gBAAgB;AAGX,SAASo0B,YAAYA,CAACF,KAAK,EAAE;EAClC/uB,WAAW,CAAC;IACVxK,iBAAiB,EAAE,IAAI;IACvBC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,IAAIs5B,KAAK,GAAG7vB,qBAAqB,CAAC,CAAC,EAAE;IACnCM,eAAe,CAAC,OAAO,CAAC;IACxB3E,gBAAgB,CAAC,KAAK,CAAC;IACvB4Y,OAAO,CAACC,GAAG,UAAA9B,MAAA,CAAUrS,eAAe,CAAC,CAAC,cAAW,CAAC;IAClDJ,qBAAqB,CAACuvB,uBAAM,CAAC,GAAG,CAAC,CAACE,SAAS,CAAC;EAC9C;AACF;;;;;;;;ACvBA,IAAAnuB,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAquB,gBAAA,GAAAruB,OAAA;AAA4C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC5C,IACEzB,qBAAqB,GAOnB1K,kBAAc,CAPhB0K,qBAAqB;EACrBM,eAAe,GAMbhL,kBAAc,CANhBgL,eAAe;EACfL,qBAAqB,GAKnB3K,kBAAc,CALhB2K,qBAAqB;EACrB1B,YAAY,GAIVjJ,kBAAc,CAJhBiJ,YAAY;EACZC,YAAY,GAGVlJ,kBAAc,CAHhBkJ,YAAY;EACZsC,WAAW,GAETxL,kBAAc,CAFhBwL,WAAW;EACXT,eAAe,GACb/K,kBAAc,CADhB+K,eAAe;AAEV,SAAS2vB,gBAAgBA,CAACH,KAAK,EAAE;EACtC/uB,WAAW,CAAC;IACVvK,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,IAAIs5B,KAAK,GAAG7vB,qBAAqB,CAAC,CAAC,EAAE;IACnC,IAAMiwB,cAAc,GAAG1xB,YAAY,CAAC,CAAC,GAAG,CAAC;IACzCC,YAAY,CAACD,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;IAChCgW,OAAO,CAACC,GAAG,uBAAuB,CAAC;IACnC;IACAlU,eAAe,CAAC2vB,cAAc,CAAC;IAC/B,IAAAC,+BAAkB,WAAAxd,MAAA,CAAUrS,eAAe,CAAC,CAAC,MAAG,CAAC;IACjDS,WAAW,CAAC;MACVlK,qBAAqB,EAAE;IACzB,CAAC,CAAC;IACF;IACAqJ,qBAAqB,CACnBD,qBAAqB,CAAC,CAAC,GAAGwvB,uBAAM,IAAA9c,MAAA,CAAIud,cAAc,EAAG,CAACP,SACxD,CAAC;EACH;AACF;;;;;;;;;AC/BA,IAAAruB,qBAAA,GAAAC,OAAA;AAKA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC9C,IAAQ1E,wBAAwB,GAAqBzH,kBAAc,CAA3DyH,wBAAwB;EAAElB,cAAc,GAAKvG,kBAAc,CAAjCuG,cAAc;AAChD,IAAM8F,KAAK,GAAG9F,cAAc,CAAC,CAAC;AAC9B,IAAMs0B,eAAe,GAAGtuB,QAAQ,CAACC,gBAAgB,CAAC,oBAAoB,CAAC;AAEhE,SAASsuB,eAAeA,CAAA,EAAG;EAChC,IAAAp7B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;EACpD,IAAAn7B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;AACtD;AAEA,IAAIE,qBAAqB,GAAG,KAAK;AACjC,IAAIC,iBAAiB,GAAG,IAAI;AACrB,SAASC,gBAAgBA,CAACtuB,KAAK,EAAEnM,UAAU,EAAE;EAClD,IAAI,CAACiH,wBAAwB,CAAC,CAAC,EAAE;IAC/BuzB,iBAAiB,GAAG,KAAK;IACzBH,eAAe,CAACjuB,OAAO,CAAC,UAACutB,KAAK,EAAK;MACjC,IAAAr6B,6CAAuB,EAACq6B,KAAK,EAAE,QAAQ,EAAExtB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;MACzE,IAAI,IAAAjN,uCAAiB,EAAC+6B,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;QAC9C,IAAAr6B,6CAAuB,EAACq6B,KAAK,EAAE,QAAQ,EAAE,GAAG,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IACL1yB,wBAAwB,CAAC,CAAC,IAC1B,CAACszB,qBAAqB,IACtB,CAACC,iBAAiB,EAClB;IACA,IAAAt7B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IACpD,IAAAn7B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC;IACpDE,qBAAqB,GAAG,IAAI;EAC9B,CAAC,MAAM,IACLtzB,wBAAwB,CAAC,CAAC,IAC1BszB,qBAAqB,IACrB,CAACC,iBAAiB,EAClB;IACAH,eAAe,CAACjuB,OAAO,CAAC,UAACutB,KAAK,EAAK;MACjC,IAAAr6B,6CAAuB,EAACq6B,KAAK,EAAE,QAAQ,EAAExtB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;MAEzE,IAAI,IAAAjN,uCAAiB,EAAC+6B,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;QAC9C,IAAAz6B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;QACpD,IAAAn7B,uCAAiB,EAACm7B,eAAe,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;QACpDG,iBAAiB,GAAG,IAAI;MAC1B;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;AACT;;;;;;;;ACjDA;AACA,IAAME,2BAA2B,GAAI,YAAY;EAC/C;EACA,IAAIC,uBAAuB,GAAG,EAAE;EAEhC,OAAO;IACLC,0BAA0B,EAAE,SAAAA,2BAAA,EAAY;MACtC,OAAOD,uBAAuB;IAChC,CAAC;IACD3vB,WAAW,EAAE,SAAAA,YAAUC,SAAS,EAAE;MAChCC,MAAM,CAACC,MAAM,CAACzL,KAAK,EAAEuL,SAAS,CAAC;IACjC,CAAC;IACD4vB,oBAAoB,EAAE,SAAAA,qBAAUh8B,IAAI,EAAE;MACpC87B,uBAAuB,CAACnd,IAAI,CAAC3e,IAAI,CAAC;IACpC,CAAC;IACDi8B,uBAAuB,EAAE,SAAAA,wBAAUj8B,IAAI,EAAE;MACvC,IAAMqlB,KAAK,GAAGyW,uBAAuB,CAACI,OAAO,CAACl8B,IAAI,CAAC;MACnD,IAAIqlB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChByW,uBAAuB,CAACK,MAAM,CAAC9W,KAAK,EAAE,CAAC,CAAC;MAC1C;IACF;EACF,CAAC;AACH,CAAC,CAAE,CAAC;AAAC,IAAA9Y,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEUovB,2BAA2B;;;;;;;;ACxB1C,IAAAnvB,qBAAA,GAAAC,OAAA;AACA,IAAAyvB,wBAAA,GAAAvvB,sBAAA,CAAAF,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AAA8C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAE9C,IAAQ5F,cAAc,GAAKvG,kBAAc,CAAjCuG,cAAc;AACtB,IAAQ60B,0BAA0B,GAAKF,gCAA2B,CAA1DE,0BAA0B;AAClC,IAAM/uB,KAAK,GAAG9F,cAAc,CAAC,CAAC,GAAG,GAAG;AAC7B,SAASm1B,mBAAmBA,CAAC/uB,KAAK,EAAEnM,UAAU,EAAE;EACrD,IAAMm7B,kBAAkB,GAAGP,0BAA0B,CAAC,CAAC;EAEvDO,kBAAkB,CAAC/uB,OAAO,CAAC,UAACiU,IAAI,EAAK;IACnC,IAAA/gB,6CAAuB,EAAC+gB,IAAI,EAAE,QAAQ,EAAElU,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAAC,CAAC;EAC1E,CAAC,CAAC;AACJ;;;;;;;;;;;;;ACbA,IAAAJ,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAoW,cAAA,GAAAlW,sBAAA,CAAAF,OAAA;AACA,IAAAD,qBAAA,GAAAC,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AAA6C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAC7C,IAAQ2V,gBAAgB,GAAKJ,sBAAsB,CAA3CI,gBAAgB;AACjB,SAAS8Z,gBAAgBA,CAAC5Z,WAAW,EAAEC,MAAM,EAAE;EACpD,IAAMlF,OAAO,GAAGxQ,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC7CqI,OAAO,CAAClI,OAAO,IAAAuI,MAAA,CAAI4E,WAAW,EAAG,GAAG,IAAI;EACxCjF,OAAO,CAACjM,SAAS,CAACC,GAAG,IAAAqM,MAAA,CAChB4E,WAAW,qBAAA5E,MAAA,CACX4E,WAAW,sBAChB,CAAC;EACDjF,OAAO,CAAC3J,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAEhD8M,MAAM,CAAC5E,MAAM,CAACN,OAAO,CAAC;AACxB;AAEO,SAAS8e,0BAA0BA,CAAC7Z,WAAW,EAAEC,MAAM,EAAE;EAC9D,IAAMlF,OAAO,GAAGxQ,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC7CqI,OAAO,CAAClI,OAAO,CAACinB,SAAS,GAAG,IAAI;EAChC/e,OAAO,CAAClI,OAAO,IAAAuI,MAAA,CAAI4E,WAAW,EAAG,GAAG,IAAI;EACxCjF,OAAO,CAACjM,SAAS,CAACC,GAAG,IAAAqM,MAAA,CAChB4E,WAAW,kCACd,wBACF,CAAC;EACDjF,OAAO,CAACnd,KAAK,CAACuT,GAAG,GAAG,OAAO;EAC3B4J,OAAO,CAAC3J,EAAE,GAAGa,IAAI,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;;EAEhD;EACA,IAAMjV,KAAK,GAAG4hB,gBAAgB,CAAC,CAAC;EAChC5hB,KAAK,CAAC8hB,WAAW,CAAC,CAACJ,cAAc,CAAC,KAAK,CAAC;EAExC,IAAAliB,uCAAiB,EACfqd,OAAO,EACP,UAAU,EACV,IAAA3d,uCAAiB,EAAC6iB,MAAM,EAAE,UAAU,CAAC,GAAG,CAC1C,CAAC;EACD,IAAAviB,uCAAiB,EAACqd,OAAO,EAAE,QAAQ,EAAE,IAAA3d,uCAAiB,EAAC6iB,MAAM,EAAE,QAAQ,CAAC,CAAC;EACzE1M,uBAAS,CAACC,WAAW,CAACuH,OAAO,CAAC;EAC9BA,OAAO,CAAC3M,gBAAgB,CAAC,cAAc,EAAE,YAAM;IAC7ClQ,KAAK,CAAC8hB,WAAW,CAAC,CAACJ,cAAc,CAAC,IAAI,CAAC;IACvC7E,OAAO,CAAClI,OAAO,CAACknB,UAAU,GAAG,IAAI;IACjC,IAAAr8B,uCAAiB,EACfqd,OAAO,EACP,UAAU,EACV,IAAA3d,uCAAiB,EAAC6iB,MAAM,EAAE,UAAU,CAAC,GAAG,EAC1C,CAAC;EACH,CAAC,CAAC;AACJ;;;;;;;;;;;AChDA,IAAAlW,qBAAA,GAAAC,OAAA;AAKA,IAAAgwB,MAAA,GAAA9vB,sBAAA,CAAAF,OAAA;AACA,IAAAiwB,OAAA,GAAA/vB,sBAAA,CAAAF,OAAA;AACA,IAAA0L,iBAAA,GAAA1L,OAAA;AACA,IAAA8Y,SAAA,GAAA9Y,OAAA;AACA,IAAA2C,YAAA,GAAA3C,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAoW,cAAA,GAAAlW,sBAAA,CAAAF,OAAA;AACA,IAAAkwB,WAAA,GAAAlwB,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AACA,IAAAuR,KAAA,GAAAvR,OAAA;AAA0C,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAkN,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAC1C,IAAQhV,iBAAiB,GAAqBlF,kBAAc,CAApDkF,iBAAiB;EAAEqB,cAAc,GAAKvG,kBAAc,CAAjCuG,cAAc;AACzC,IAAQub,gBAAgB,GAAKJ,sBAAsB,CAA3CI,gBAAgB;AAExB,IAAMzV,KAAK,GAAG9F,cAAc,CAAC,CAAC;AAC9B,IAAM41B,kBAAkB,GAAG,IAAI;AAC/B,IAAMC,kBAAkB,GAAG,IAAI;AAE/B,IAAIC,aAAa;AACV,SAASC,UAAUA,CAAA,EAAG;EAC3BD,aAAa,GAAGF,kBAAkB;EAClC5vB,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC,CAACI,OAAO,CAAC,UAAC2vB,KAAK,EAAK;IAC3DA,KAAK,CAACvrB,MAAM,CAAC,CAAC;EAChB,CAAC,CAAC;AACJ;AAEO,SAASwrB,WAAWA,CAAC7vB,KAAK,EAAEnM,UAAU,EAAE;EAC7C,IAAM8R,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAE9BnE,QAAQ,CACLC,gBAAgB,CAAC,wBAAwB,CAAC,CAC1CI,OAAO,CAAC,UAAC6vB,cAAc,EAAK;IAC3B;IACA,IAAMC,kBAAkB,GAAGD,cAAc,CAAC9rB,qBAAqB,CAAC,CAAC;IACjE,IAAMoP,SAAS,GAAG,IAAAC,wBAAW,EAAC1N,QAAQ,EAAEoqB,kBAAkB,CAAC;IAC3D,IAAI3c,SAAS,IAAI,CAAC0c,cAAc,CAAC5nB,OAAO,CAAC8nB,UAAU,EAAE;MACnD,IAAMJ,KAAK,GAAGE,cAAc,CAAC5tB,aAAa,CAAC,KAAK,CAAC;MACjD0tB,KAAK,CAAC5uB,GAAG,GAAGivB,eAAS;MACrBH,cAAc,CAAC5nB,OAAO,CAAC8nB,UAAU,GAAG,IAAI;MACxC,IAAAd,sCAA0B,EACxB,IAAA5X,2BAAiB,EAAC4Y,0BAA0B,CAAC,EAC7CJ,cACF,CAAC;IACH;IACA,IAAA38B,6CAAuB,EACrB28B,cAAc,EACd,QAAQ,EACR9vB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAChC,CAAC;IACD,IAAI,IAAAjN,uCAAiB,EAACq9B,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE;MACvDA,cAAc,CAACzrB,MAAM,CAAC,CAAC;IACzB;EACF,CAAC,CAAC;EAEJ,IAAM8rB,UAAU,GAAGvwB,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB,CAAC;EACjE;EACA,IAAIswB,UAAU,CAAC7qB,MAAM,GAAG,CAAC,EAAE;IACzB6qB,UAAU,CAAClwB,OAAO,CAAC,UAACkvB,SAAS,EAAK;MAChC,IAAAh8B,6CAAuB,EACrBg8B,SAAS,EACT,QAAQ,EACRnvB,KAAK,GAAGnM,UAAU,GAAG6L,KAAK,GAAG,CAAC,CAChC,CAAC;MACD,IAAIyvB,SAAS,CAACjnB,OAAO,CAACknB,UAAU,EAAE;QAChC,IAAMgB,aAAa,GAAGjB,SAAS,CAACnrB,qBAAqB,CAAC,CAAC;QACvD;QACA,IAAM+J,QAAQ,GAAGzG,IAAI,CAAC8H,IAAI,CACxB9H,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAAC0I,CAAC,GAAG+hB,aAAa,CAAC/hB,CAAC,EAAE,CAAC,CAAC,GACvC/G,IAAI,CAACI,GAAG,CAAC/B,QAAQ,CAACyI,CAAC,GAAGgiB,aAAa,CAAChiB,CAAC,EAAE,CAAC,CAC5C,CAAC;QACD,IAAAR,sBAAgB,EACdjI,QAAQ,EACRwpB,SAAS,EACTiB,aAAa,EACbriB,QAAQ,EACR/N,KAAK,EACL,IACF,CAAC;MACH;IACF,CAAC,CAAC;EACJ;EACA,IAAI0vB,aAAa,IAAI,CAAC,IAAIn3B,iBAAiB,CAAC,CAAC,EAAE;IAC7C83B,WAAW,CAAC,CAAC;IACbX,aAAa,GACXngB,mBAAmB,CAACigB,kBAAkB,EAAEC,kBAAkB,CAAC,GAAG57B,UAAU;EAC5E;EACA67B,aAAa,IAAI1vB,KAAK;AACxB;AAEO,SAASswB,aAAaA,CAAA,EAAG;EAC9B,OAAO5jB,kBAAA,CAAI9M,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC,EAAE4P,GAAG,CAAC,UAACmgB,KAAK,EAAK;IACnE,OAAOA,KAAK,CAAC5rB,qBAAqB,CAAC,CAAC;EACtC,CAAC,CAAC;AACJ;AAEA,IAAMksB,0BAA0B,GAAG,IAAAhZ,0BAAgB,EAAC/B,gBAAgB,CAAC,CAAC,CAAC;AACvE,SAASkb,WAAWA,CAAA,EAAG;EACrB,IAAMT,KAAK,GAAGhwB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAMyP,eAAe,GAAG5X,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EACrDyP,eAAe,CAACtP,OAAO,CAAC4nB,cAAc,GAAG,IAAI;EAC7CtY,eAAe,CAACrT,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAEvDwrB,KAAK,CAAC5uB,GAAG,GAAGuvB,cAAS;EACrBX,KAAK,CAAC1nB,OAAO,CAAC0nB,KAAK,GAAG,IAAI;EAC1BA,KAAK,CAACzrB,SAAS,CAACC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC;EAC5CwrB,KAAK,CAACnpB,EAAE,YAAAgK,MAAA,CAAYnJ,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAE;EACnCkP,eAAe,CAAC9G,MAAM,CAACkf,KAAK,CAAC;EAC7B,IAAA78B,uCAAiB,EAACykB,eAAe,EAAE,QAAQ,EAAE,GAAG,CAAC;EACjD5O,uBAAS,CAAC8H,MAAM,CAAC8G,eAAe,CAAC;AACnC;AACO,SAASjI,mBAAmBA,CAAC9H,GAAG,EAAEF,GAAG,EAAE;EAC5C,OAAOD,IAAI,CAACqJ,KAAK,CAACrJ,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAIf,GAAG,GAAGE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,CAAC;AAC1D;;;;;;;;;;;;;;ACpHA,IAAA+oB,OAAA,GAAAjxB,sBAAA,CAAAF,OAAA;AACA,IAAAoxB,QAAA,GAAAlxB,sBAAA,CAAAF,OAAA;AACA,IAAAqxB,SAAA,GAAAnxB,sBAAA,CAAAF,OAAA;AAA8D,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAEvD,SAASmxB,QAAQA,CAACC,OAAO,EAAE;EAChC;EACA,IAAMnF,WAAW,GAAG7rB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAC;;EAE1D;EACA,IAAMgxB,eAAe,GAAGtlB,KAAK,CAAC6B,IAAI,CAACqe,WAAW,CAAC,CAACE,IAAI,CAClD,UAACC,UAAU;IAAA,OACTA,UAAU,CAAC1pB,aAAa,CAAC,KAAK,CAAC,IAC/B0pB,UAAU,CAAC1pB,aAAa,CAAC,KAAK,CAAC,CAAC6pB,GAAG,CAAC5Z,QAAQ,CAACye,OAAO,CAAC;EAAA,CACzD,CAAC;EAED,IAAIC,eAAe,EAAE;IACnB;IACA,IAAMC,YAAY,GAAGD,eAAe,CAAC3uB,aAAa,CAAC,gBAAgB,CAAC;IACpE,IAAM6uB,iBAAiB,GAAGxO,QAAQ,CAACuO,YAAY,CAACzc,WAAW,CAAC;IAC5Dyc,YAAY,CAACzc,WAAW,MAAA5D,MAAA,CAAMsgB,iBAAiB,GAAG,CAAC,CAAE;EACvD,CAAC,MAAM;IACL;IACA,IAAMrF,gBAAgB,GAAGngB,KAAK,CAAC6B,IAAI,CAACqe,WAAW,CAAC,CAACE,IAAI,CACnD,UAACC,UAAU;MAAA,OAAK,CAACA,UAAU,CAAC1pB,aAAa,CAAC,KAAK,CAAC;IAAA,CAClD,CAAC;IAED,IAAIwpB,gBAAgB,EAAE;MACpB;MACA,IAAMI,IAAI,GAAGlsB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;MAC1C+jB,IAAI,CAAC9qB,GAAG,GAAGgwB,eAAe,CAACJ,OAAO,CAAC,CAAC9E,IAAI;MACxCA,IAAI,CAACC,GAAG,MAAAtb,MAAA,CAAMmgB,OAAO,CAAE;MACvB9E,IAAI,CAAC3nB,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;MAC5BsnB,gBAAgB,CAAC7iB,WAAW,CAACijB,IAAI,CAAC;;MAElC;MACA,IAAMmF,IAAI,GAAGrxB,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;MAC1CkpB,IAAI,CAAC9sB,SAAS,CAACC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC;MAC3C6sB,IAAI,CAAC5c,WAAW,GAAG,GAAG;MACtBqX,gBAAgB,CAAC7iB,WAAW,CAACooB,IAAI,CAAC;IACpC;EACF;AACF;AAEA,IAAMD,eAAe,GAAG;EACtB,SAAS,EAAE;IACTlF,IAAI,EAAEoF;EACR,CAAC;EACD,UAAU,EAAE;IACVpF,IAAI,EAAEqF;EACR,CAAC;EACD,WAAW,EAAE;IACXrF,IAAI,EAAEsF;EACR;AACF,CAAC;;;;;;;;;;;;;;;;;;;ACrDD,IAAAC,OAAA,GAAAhyB,OAAA;AACA,IAAAiyB,eAAA,GAAAjyB,OAAA;AAIA,IAAAkyB,kBAAA,GAAAlyB,OAAA;AAIA,IAAAmyB,iBAAA,GAAAnyB,OAAA;AAIA,IAAA0L,iBAAA,GAAA1L,OAAA;AAOA,IAAAwR,OAAA,GAAAxR,OAAA;AAKA,IAAAoyB,YAAA,GAAApyB,OAAA;AAKA,IAAAqyB,KAAA,GAAAryB,OAAA;AACA,IAAA8Y,SAAA,GAAA9Y,OAAA;AAKA,IAAAsyB,YAAA,GAAAtyB,OAAA;AACA,IAAA0C,gBAAA,GAAA1C,OAAA;AACA,IAAAqkB,KAAA,GAAArkB,OAAA;AAKA,IAAAuyB,cAAA,GAAAvyB,OAAA;AACA,IAAAwyB,gBAAA,GAAAxyB,OAAA;AAKA,IAAAyyB,OAAA,GAAAzyB,OAAA;AAKA,IAAA0yB,MAAA,GAAA1yB,OAAA;AACA,IAAA2yB,KAAA,GAAA3yB,OAAA;AACA,IAAA4yB,KAAA,GAAA5yB,OAAA;AACA,IAAAuR,KAAA,GAAAvR,OAAA;AACA,IAAA6yB,WAAA,GAAA3yB,sBAAA,CAAAF,OAAA;AACA,IAAA8yB,UAAA,GAAA5yB,sBAAA,CAAAF,OAAA;AACA,IAAA+yB,MAAA,GAAA7yB,sBAAA,CAAAF,OAAA;AACA,IAAAgzB,KAAA,GAAA9yB,sBAAA,CAAAF,OAAA;AACA,IAAAizB,KAAA,GAAA/yB,sBAAA,CAAAF,OAAA;AACA,IAAAkzB,gBAAA,GAAAhzB,sBAAA,CAAAF,OAAA;AACA,IAAAmzB,KAAA,GAAAnzB,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAwS,aAAA,GAAAxS,OAAA;AAmCA,IAAAyS,cAAA,GAAAzS,OAAA;AACA,IAAA0rB,gBAAA,GAAA1rB,OAAA;AACA,IAAAquB,gBAAA,GAAAruB,OAAA;AACA,IAAAozB,MAAA,GAAApzB,OAAA;AACA,IAAAqzB,OAAA,GAAArzB,OAAA;AACA,IAAAszB,WAAA,GAAAtzB,OAAA;AACA,IAAAuzB,WAAA,GAAAvzB,OAAA;AACA,IAAAwzB,oBAAA,GAAAxzB,OAAA;AACA,IAAAyvB,wBAAA,GAAAvvB,sBAAA,CAAAF,OAAA;AACA,IAAAyzB,MAAA,GAAAzzB,OAAA;AACA,IAAA2L,UAAA,GAAA3L,OAAA;AACA,IAAA0zB,cAAA,GAAA1zB,OAAA;AAAwD,SAAAE,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAL,OAAA,EAAAK,GAAA;AAAA,SAAAwd,QAAA9R,CAAA,sCAAA8R,OAAA,wBAAA3R,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAJ,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAG,MAAA,IAAAH,CAAA,CAAAgC,WAAA,KAAA7B,MAAA,IAAAH,CAAA,KAAAG,MAAA,CAAA4B,SAAA,qBAAA/B,CAAA,KAAA8R,OAAA,CAAA9R,CAAA;AAAA,SAAA2P,oBAAA,kBA/GxD,qJAAAA,mBAAA,YAAAA,oBAAA,WAAA9T,CAAA,SAAA+T,CAAA,EAAA/T,CAAA,OAAAgU,CAAA,GAAAhc,MAAA,CAAAkO,SAAA,EAAApB,CAAA,GAAAkP,CAAA,CAAAC,cAAA,EAAA9P,CAAA,GAAAnM,MAAA,CAAAkc,cAAA,cAAAH,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,IAAAD,CAAA,CAAA/T,CAAA,IAAAgU,CAAA,CAAA/nB,KAAA,KAAA0Y,CAAA,wBAAAL,MAAA,GAAAA,MAAA,OAAA6P,CAAA,GAAAxP,CAAA,CAAAJ,QAAA,kBAAA6P,CAAA,GAAAzP,CAAA,CAAA0P,aAAA,uBAAAC,CAAA,GAAA3P,CAAA,CAAA4P,WAAA,8BAAAC,OAAAT,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,WAAAhc,MAAA,CAAAkc,cAAA,CAAAH,CAAA,EAAA/T,CAAA,IAAA/T,KAAA,EAAA+nB,CAAA,EAAAS,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAZ,CAAA,CAAA/T,CAAA,WAAAwU,MAAA,mBAAAT,CAAA,IAAAS,MAAA,YAAAA,OAAAT,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,WAAAD,CAAA,CAAA/T,CAAA,IAAAgU,CAAA,gBAAAY,KAAAb,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,QAAAH,CAAA,GAAA3E,CAAA,IAAAA,CAAA,CAAAkG,SAAA,YAAA2O,SAAA,GAAA7U,CAAA,GAAA6U,SAAA,EAAAV,CAAA,GAAAnc,MAAA,CAAA8c,MAAA,CAAAnQ,CAAA,CAAAuB,SAAA,GAAAkO,CAAA,OAAAW,OAAA,CAAAjQ,CAAA,gBAAAX,CAAA,CAAAgQ,CAAA,eAAAloB,KAAA,EAAA+oB,gBAAA,CAAAjB,CAAA,EAAAC,CAAA,EAAAI,CAAA,MAAAD,CAAA,aAAAc,SAAAlB,CAAA,EAAA/T,CAAA,EAAAgU,CAAA,mBAAA9T,IAAA,YAAAgV,GAAA,EAAAnB,CAAA,CAAAzO,IAAA,CAAAtF,CAAA,EAAAgU,CAAA,cAAAD,CAAA,aAAA7T,IAAA,WAAAgV,GAAA,EAAAnB,CAAA,QAAA/T,CAAA,CAAA4U,IAAA,GAAAA,IAAA,MAAAO,CAAA,qBAAAC,CAAA,qBAAAnQ,CAAA,gBAAAJ,CAAA,gBAAAwC,CAAA,gBAAAwN,UAAA,cAAAQ,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAAf,MAAA,CAAAe,CAAA,EAAApB,CAAA,qCAAAqB,CAAA,GAAAxd,MAAA,CAAAyd,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA1B,CAAA,IAAAlP,CAAA,CAAAQ,IAAA,CAAAoQ,CAAA,EAAAvB,CAAA,MAAAoB,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAApP,SAAA,GAAA2O,SAAA,CAAA3O,SAAA,GAAAlO,MAAA,CAAA8c,MAAA,CAAAS,CAAA,YAAAM,sBAAA9B,CAAA,gCAAA7a,OAAA,WAAA8G,CAAA,IAAAwU,MAAA,CAAAT,CAAA,EAAA/T,CAAA,YAAA+T,CAAA,gBAAA+B,OAAA,CAAA9V,CAAA,EAAA+T,CAAA,sBAAAgC,cAAAhC,CAAA,EAAA/T,CAAA,aAAAgW,OAAAhC,CAAA,EAAA7P,CAAA,EAAAQ,CAAA,EAAAwP,CAAA,QAAAC,CAAA,GAAAa,QAAA,CAAAlB,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAA5P,CAAA,mBAAAiQ,CAAA,CAAAlU,IAAA,QAAAoU,CAAA,GAAAF,CAAA,CAAAc,GAAA,EAAAC,CAAA,GAAAb,CAAA,CAAAroB,KAAA,SAAAkpB,CAAA,gBAAAc,OAAA,CAAAd,CAAA,KAAArQ,CAAA,CAAAQ,IAAA,CAAA6P,CAAA,eAAAnV,CAAA,CAAAkW,OAAA,CAAAf,CAAA,CAAAgB,OAAA,EAAAC,IAAA,WAAArC,CAAA,IAAAiC,MAAA,SAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,gBAAAJ,CAAA,IAAAiC,MAAA,UAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,QAAAnU,CAAA,CAAAkW,OAAA,CAAAf,CAAA,EAAAiB,IAAA,WAAArC,CAAA,IAAAO,CAAA,CAAAroB,KAAA,GAAA8nB,CAAA,EAAApP,CAAA,CAAA2P,CAAA,gBAAAP,CAAA,WAAAiC,MAAA,UAAAjC,CAAA,EAAApP,CAAA,EAAAwP,CAAA,SAAAA,CAAA,CAAAC,CAAA,CAAAc,GAAA,SAAAlB,CAAA,EAAA7P,CAAA,oBAAAlY,KAAA,WAAAA,MAAA8nB,CAAA,EAAAjP,CAAA,aAAAuR,2BAAA,eAAArW,CAAA,WAAAA,CAAA,EAAAgU,CAAA,IAAAgC,MAAA,CAAAjC,CAAA,EAAAjP,CAAA,EAAA9E,CAAA,EAAAgU,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAoC,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAArB,iBAAAhV,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,QAAAX,CAAA,GAAAgR,CAAA,mBAAAxQ,CAAA,EAAAwP,CAAA,QAAAhQ,CAAA,KAAAc,CAAA,YAAAqR,KAAA,sCAAAnS,CAAA,KAAAU,CAAA,oBAAAF,CAAA,QAAAwP,CAAA,WAAAloB,KAAA,EAAA8nB,CAAA,EAAAhP,IAAA,eAAAD,CAAA,CAAAyR,MAAA,GAAA5R,CAAA,EAAAG,CAAA,CAAAoQ,GAAA,GAAAf,CAAA,UAAAC,CAAA,GAAAtP,CAAA,CAAA0R,QAAA,MAAApC,CAAA,QAAAE,CAAA,GAAAmC,mBAAA,CAAArC,CAAA,EAAAtP,CAAA,OAAAwP,CAAA,QAAAA,CAAA,KAAAjN,CAAA,mBAAAiN,CAAA,qBAAAxP,CAAA,CAAAyR,MAAA,EAAAzR,CAAA,CAAA4R,IAAA,GAAA5R,CAAA,CAAA6R,KAAA,GAAA7R,CAAA,CAAAoQ,GAAA,sBAAApQ,CAAA,CAAAyR,MAAA,QAAApS,CAAA,KAAAgR,CAAA,QAAAhR,CAAA,GAAAU,CAAA,EAAAC,CAAA,CAAAoQ,GAAA,EAAApQ,CAAA,CAAA8R,iBAAA,CAAA9R,CAAA,CAAAoQ,GAAA,uBAAApQ,CAAA,CAAAyR,MAAA,IAAAzR,CAAA,CAAA+R,MAAA,WAAA/R,CAAA,CAAAoQ,GAAA,GAAA/Q,CAAA,GAAAc,CAAA,MAAAsQ,CAAA,GAAAN,QAAA,CAAAjV,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,oBAAAyQ,CAAA,CAAArV,IAAA,QAAAiE,CAAA,GAAAW,CAAA,CAAAC,IAAA,GAAAF,CAAA,GAAAuQ,CAAA,EAAAG,CAAA,CAAAL,GAAA,KAAA7N,CAAA,qBAAApb,KAAA,EAAAspB,CAAA,CAAAL,GAAA,EAAAnQ,IAAA,EAAAD,CAAA,CAAAC,IAAA,kBAAAwQ,CAAA,CAAArV,IAAA,KAAAiE,CAAA,GAAAU,CAAA,EAAAC,CAAA,CAAAyR,MAAA,YAAAzR,CAAA,CAAAoQ,GAAA,GAAAK,CAAA,CAAAL,GAAA,mBAAAuB,oBAAAzW,CAAA,EAAAgU,CAAA,QAAAlP,CAAA,GAAAkP,CAAA,CAAAuC,MAAA,EAAApS,CAAA,GAAAnE,CAAA,CAAAuE,QAAA,CAAAO,CAAA,OAAAX,CAAA,KAAA4P,CAAA,SAAAC,CAAA,CAAAwC,QAAA,qBAAA1R,CAAA,IAAA9E,CAAA,CAAAuE,QAAA,CAAAmB,MAAA,KAAAsO,CAAA,CAAAuC,MAAA,aAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,EAAA0C,mBAAA,CAAAzW,CAAA,EAAAgU,CAAA,eAAAA,CAAA,CAAAuC,MAAA,kBAAAzR,CAAA,KAAAkP,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,OAAAhQ,SAAA,uCAAAJ,CAAA,iBAAAuC,CAAA,MAAA1C,CAAA,GAAAsQ,QAAA,CAAA9Q,CAAA,EAAAnE,CAAA,CAAAuE,QAAA,EAAAyP,CAAA,CAAAkB,GAAA,mBAAAvQ,CAAA,CAAAzE,IAAA,SAAA8T,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,GAAAvQ,CAAA,CAAAuQ,GAAA,EAAAlB,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,MAAA8M,CAAA,GAAAxP,CAAA,CAAAuQ,GAAA,SAAAf,CAAA,GAAAA,CAAA,CAAApP,IAAA,IAAAiP,CAAA,CAAAhU,CAAA,CAAA8W,UAAA,IAAA3C,CAAA,CAAAloB,KAAA,EAAA+nB,CAAA,CAAAxO,IAAA,GAAAxF,CAAA,CAAA+W,OAAA,eAAA/C,CAAA,CAAAuC,MAAA,KAAAvC,CAAA,CAAAuC,MAAA,WAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,GAAAC,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,IAAA8M,CAAA,IAAAH,CAAA,CAAAuC,MAAA,YAAAvC,CAAA,CAAAkB,GAAA,OAAAhQ,SAAA,sCAAA8O,CAAA,CAAAwC,QAAA,SAAAnP,CAAA,cAAA2P,aAAAjD,CAAA,QAAA/T,CAAA,KAAAiX,MAAA,EAAAlD,CAAA,YAAAA,CAAA,KAAA/T,CAAA,CAAAkX,QAAA,GAAAnD,CAAA,WAAAA,CAAA,KAAA/T,CAAA,CAAAmX,UAAA,GAAApD,CAAA,KAAA/T,CAAA,CAAAoX,QAAA,GAAArD,CAAA,WAAAsD,UAAA,CAAA/M,IAAA,CAAAtK,CAAA,cAAAsX,cAAAvD,CAAA,QAAA/T,CAAA,GAAA+T,CAAA,CAAAwD,UAAA,QAAAvX,CAAA,CAAAE,IAAA,oBAAAF,CAAA,CAAAkV,GAAA,EAAAnB,CAAA,CAAAwD,UAAA,GAAAvX,CAAA,aAAA+U,QAAAhB,CAAA,SAAAsD,UAAA,MAAAJ,MAAA,aAAAlD,CAAA,CAAA7a,OAAA,CAAA8d,YAAA,cAAAQ,KAAA,iBAAA7B,OAAA3V,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAgU,CAAA,GAAAhU,CAAA,CAAAmU,CAAA,OAAAH,CAAA,SAAAA,CAAA,CAAA1O,IAAA,CAAAtF,CAAA,4BAAAA,CAAA,CAAAwF,IAAA,SAAAxF,CAAA,OAAAyX,KAAA,CAAAzX,CAAA,CAAAzB,MAAA,SAAA4F,CAAA,OAAAQ,CAAA,YAAAa,KAAA,aAAArB,CAAA,GAAAnE,CAAA,CAAAzB,MAAA,OAAAuG,CAAA,CAAAQ,IAAA,CAAAtF,CAAA,EAAAmE,CAAA,UAAAqB,IAAA,CAAAvZ,KAAA,GAAA+T,CAAA,CAAAmE,CAAA,GAAAqB,IAAA,CAAAT,IAAA,OAAAS,IAAA,SAAAA,IAAA,CAAAvZ,KAAA,GAAA8nB,CAAA,EAAAvO,IAAA,CAAAT,IAAA,OAAAS,IAAA,YAAAb,CAAA,CAAAa,IAAA,GAAAb,CAAA,gBAAAO,SAAA,CAAA+Q,OAAA,CAAAjW,CAAA,kCAAAqV,iBAAA,CAAAnP,SAAA,GAAAoP,0BAAA,EAAAnR,CAAA,CAAAyR,CAAA,mBAAA3pB,KAAA,EAAAqpB,0BAAA,EAAAZ,YAAA,SAAAvQ,CAAA,CAAAmR,0BAAA,mBAAArpB,KAAA,EAAAopB,iBAAA,EAAAX,YAAA,SAAAW,iBAAA,CAAAqC,WAAA,GAAAlD,MAAA,CAAAc,0BAAA,EAAAhB,CAAA,wBAAAtU,CAAA,CAAA2X,mBAAA,aAAA5D,CAAA,QAAA/T,CAAA,wBAAA+T,CAAA,IAAAA,CAAA,CAAA5N,WAAA,WAAAnG,CAAA,KAAAA,CAAA,KAAAqV,iBAAA,6BAAArV,CAAA,CAAA0X,WAAA,IAAA1X,CAAA,CAAAoG,IAAA,OAAApG,CAAA,CAAA4X,IAAA,aAAA7D,CAAA,WAAA/b,MAAA,CAAA6f,cAAA,GAAA7f,MAAA,CAAA6f,cAAA,CAAA9D,CAAA,EAAAuB,0BAAA,KAAAvB,CAAA,CAAA+D,SAAA,GAAAxC,0BAAA,EAAAd,MAAA,CAAAT,CAAA,EAAAO,CAAA,yBAAAP,CAAA,CAAA7N,SAAA,GAAAlO,MAAA,CAAA8c,MAAA,CAAAc,CAAA,GAAA7B,CAAA,KAAA/T,CAAA,CAAA+X,KAAA,aAAAhE,CAAA,aAAAoC,OAAA,EAAApC,CAAA,OAAA8B,qBAAA,CAAAE,aAAA,CAAA7P,SAAA,GAAAsO,MAAA,CAAAuB,aAAA,CAAA7P,SAAA,EAAAkO,CAAA,iCAAApU,CAAA,CAAA+V,aAAA,GAAAA,aAAA,EAAA/V,CAAA,CAAAgY,KAAA,aAAAjE,CAAA,EAAAC,CAAA,EAAAlP,CAAA,EAAAX,CAAA,EAAAQ,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAAsT,OAAA,OAAA9D,CAAA,OAAA4B,aAAA,CAAAnB,IAAA,CAAAb,CAAA,EAAAC,CAAA,EAAAlP,CAAA,EAAAX,CAAA,GAAAQ,CAAA,UAAA3E,CAAA,CAAA2X,mBAAA,CAAA3D,CAAA,IAAAG,CAAA,GAAAA,CAAA,CAAA3O,IAAA,GAAA4Q,IAAA,WAAArC,CAAA,WAAAA,CAAA,CAAAhP,IAAA,GAAAgP,CAAA,CAAA9nB,KAAA,GAAAkoB,CAAA,CAAA3O,IAAA,WAAAqQ,qBAAA,CAAAD,CAAA,GAAApB,MAAA,CAAAoB,CAAA,EAAAtB,CAAA,gBAAAE,MAAA,CAAAoB,CAAA,EAAAzB,CAAA,iCAAAK,MAAA,CAAAoB,CAAA,6DAAA5V,CAAA,CAAA2Q,IAAA,aAAAoD,CAAA,QAAA/T,CAAA,GAAAhI,MAAA,CAAA+b,CAAA,GAAAC,CAAA,gBAAAlP,CAAA,IAAA9E,CAAA,EAAAgU,CAAA,CAAA1J,IAAA,CAAAxF,CAAA,UAAAkP,CAAA,CAAAkE,OAAA,aAAA1S,KAAA,WAAAwO,CAAA,CAAAzV,MAAA,SAAAwV,CAAA,GAAAC,CAAA,CAAAmE,GAAA,QAAApE,CAAA,IAAA/T,CAAA,SAAAwF,IAAA,CAAAvZ,KAAA,GAAA8nB,CAAA,EAAAvO,IAAA,CAAAT,IAAA,OAAAS,IAAA,WAAAA,IAAA,CAAAT,IAAA,OAAAS,IAAA,QAAAxF,CAAA,CAAA2V,MAAA,GAAAA,MAAA,EAAAZ,OAAA,CAAA7O,SAAA,KAAAC,WAAA,EAAA4O,OAAA,EAAAyC,KAAA,WAAAA,MAAAxX,CAAA,aAAAoY,IAAA,WAAA5S,IAAA,WAAAkR,IAAA,QAAAC,KAAA,GAAA5C,CAAA,OAAAhP,IAAA,YAAAyR,QAAA,cAAAD,MAAA,gBAAArB,GAAA,GAAAnB,CAAA,OAAAsD,UAAA,CAAAne,OAAA,CAAAoe,aAAA,IAAAtX,CAAA,WAAAgU,CAAA,kBAAAA,CAAA,CAAAqE,MAAA,OAAAvT,CAAA,CAAAQ,IAAA,OAAA0O,CAAA,MAAAyD,KAAA,EAAAzD,CAAA,CAAAvS,KAAA,cAAAuS,CAAA,IAAAD,CAAA,MAAAuE,IAAA,WAAAA,KAAA,SAAAvT,IAAA,WAAAgP,CAAA,QAAAsD,UAAA,IAAAE,UAAA,kBAAAxD,CAAA,CAAA7T,IAAA,QAAA6T,CAAA,CAAAmB,GAAA,cAAAqD,IAAA,KAAA3B,iBAAA,WAAAA,kBAAA5W,CAAA,aAAA+E,IAAA,QAAA/E,CAAA,MAAAgU,CAAA,kBAAAwE,OAAA1T,CAAA,EAAAX,CAAA,WAAAgQ,CAAA,CAAAjU,IAAA,YAAAiU,CAAA,CAAAe,GAAA,GAAAlV,CAAA,EAAAgU,CAAA,CAAAxO,IAAA,GAAAV,CAAA,EAAAX,CAAA,KAAA6P,CAAA,CAAAuC,MAAA,WAAAvC,CAAA,CAAAkB,GAAA,GAAAnB,CAAA,KAAA5P,CAAA,aAAAA,CAAA,QAAAkT,UAAA,CAAA9Y,MAAA,MAAA4F,CAAA,SAAAA,CAAA,QAAAQ,CAAA,QAAA0S,UAAA,CAAAlT,CAAA,GAAAgQ,CAAA,GAAAxP,CAAA,CAAA4S,UAAA,iBAAA5S,CAAA,CAAAsS,MAAA,SAAAuB,MAAA,aAAA7T,CAAA,CAAAsS,MAAA,SAAAmB,IAAA,QAAAhE,CAAA,GAAAtP,CAAA,CAAAQ,IAAA,CAAAX,CAAA,eAAA2P,CAAA,GAAAxP,CAAA,CAAAQ,IAAA,CAAAX,CAAA,qBAAAyP,CAAA,IAAAE,CAAA,aAAA8D,IAAA,GAAAzT,CAAA,CAAAuS,QAAA,SAAAsB,MAAA,CAAA7T,CAAA,CAAAuS,QAAA,gBAAAkB,IAAA,GAAAzT,CAAA,CAAAwS,UAAA,SAAAqB,MAAA,CAAA7T,CAAA,CAAAwS,UAAA,cAAA/C,CAAA,aAAAgE,IAAA,GAAAzT,CAAA,CAAAuS,QAAA,SAAAsB,MAAA,CAAA7T,CAAA,CAAAuS,QAAA,qBAAA5C,CAAA,YAAAgC,KAAA,qDAAA8B,IAAA,GAAAzT,CAAA,CAAAwS,UAAA,SAAAqB,MAAA,CAAA7T,CAAA,CAAAwS,UAAA,YAAAN,MAAA,WAAAA,OAAA9C,CAAA,EAAA/T,CAAA,aAAAgU,CAAA,QAAAqD,UAAA,CAAA9Y,MAAA,MAAAyV,CAAA,SAAAA,CAAA,QAAA7P,CAAA,QAAAkT,UAAA,CAAArD,CAAA,OAAA7P,CAAA,CAAA8S,MAAA,SAAAmB,IAAA,IAAAtT,CAAA,CAAAQ,IAAA,CAAAnB,CAAA,wBAAAiU,IAAA,GAAAjU,CAAA,CAAAgT,UAAA,QAAAxS,CAAA,GAAAR,CAAA,aAAAQ,CAAA,iBAAAoP,CAAA,mBAAAA,CAAA,KAAApP,CAAA,CAAAsS,MAAA,IAAAjX,CAAA,IAAAA,CAAA,IAAA2E,CAAA,CAAAwS,UAAA,KAAAxS,CAAA,cAAAwP,CAAA,GAAAxP,CAAA,GAAAA,CAAA,CAAA4S,UAAA,cAAApD,CAAA,CAAAjU,IAAA,GAAA6T,CAAA,EAAAI,CAAA,CAAAe,GAAA,GAAAlV,CAAA,EAAA2E,CAAA,SAAA4R,MAAA,gBAAA/Q,IAAA,GAAAb,CAAA,CAAAwS,UAAA,EAAA9P,CAAA,SAAAoR,QAAA,CAAAtE,CAAA,MAAAsE,QAAA,WAAAA,SAAA1E,CAAA,EAAA/T,CAAA,oBAAA+T,CAAA,CAAA7T,IAAA,QAAA6T,CAAA,CAAAmB,GAAA,qBAAAnB,CAAA,CAAA7T,IAAA,mBAAA6T,CAAA,CAAA7T,IAAA,QAAAsF,IAAA,GAAAuO,CAAA,CAAAmB,GAAA,gBAAAnB,CAAA,CAAA7T,IAAA,SAAAqY,IAAA,QAAArD,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,OAAAqB,MAAA,kBAAA/Q,IAAA,yBAAAuO,CAAA,CAAA7T,IAAA,IAAAF,CAAA,UAAAwF,IAAA,GAAAxF,CAAA,GAAAqH,CAAA,KAAAqR,MAAA,WAAAA,OAAA3E,CAAA,aAAA/T,CAAA,QAAAqX,UAAA,CAAA9Y,MAAA,MAAAyB,CAAA,SAAAA,CAAA,QAAAgU,CAAA,QAAAqD,UAAA,CAAArX,CAAA,OAAAgU,CAAA,CAAAmD,UAAA,KAAApD,CAAA,cAAA0E,QAAA,CAAAzE,CAAA,CAAAuD,UAAA,EAAAvD,CAAA,CAAAoD,QAAA,GAAAE,aAAA,CAAAtD,CAAA,GAAA3M,CAAA,OAAAsR,KAAA,WAAAC,OAAA7E,CAAA,aAAA/T,CAAA,QAAAqX,UAAA,CAAA9Y,MAAA,MAAAyB,CAAA,SAAAA,CAAA,QAAAgU,CAAA,QAAAqD,UAAA,CAAArX,CAAA,OAAAgU,CAAA,CAAAiD,MAAA,KAAAlD,CAAA,QAAAjP,CAAA,GAAAkP,CAAA,CAAAuD,UAAA,kBAAAzS,CAAA,CAAA5E,IAAA,QAAAiE,CAAA,GAAAW,CAAA,CAAAoQ,GAAA,EAAAoC,aAAA,CAAAtD,CAAA,YAAA7P,CAAA,gBAAAmS,KAAA,8BAAAuC,aAAA,WAAAA,cAAA7Y,CAAA,EAAAgU,CAAA,EAAAlP,CAAA,gBAAA0R,QAAA,KAAAjS,QAAA,EAAAoR,MAAA,CAAA3V,CAAA,GAAA8W,UAAA,EAAA9C,CAAA,EAAA+C,OAAA,EAAAjS,CAAA,oBAAAyR,MAAA,UAAArB,GAAA,GAAAnB,CAAA,GAAA1M,CAAA,OAAArH,CAAA;AAAA,SAAAkE,2BAAAC,CAAA,EAAAC,cAAA,QAAAC,EAAA,UAAAC,MAAA,oBAAAH,CAAA,CAAAG,MAAA,CAAAC,QAAA,KAAAJ,CAAA,qBAAAE,EAAA,QAAAG,KAAA,CAAAC,OAAA,CAAAN,CAAA,MAAAE,EAAA,GAAAK,2BAAA,CAAAP,CAAA,MAAAC,cAAA,IAAAD,CAAA,WAAAA,CAAA,CAAA5F,MAAA,qBAAA8F,EAAA,EAAAF,CAAA,GAAAE,EAAA,MAAAM,CAAA,UAAAC,CAAA,YAAAA,EAAA,eAAAC,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAA,EAAA,QAAAH,CAAA,IAAAR,CAAA,CAAA5F,MAAA,WAAAwG,IAAA,mBAAAA,IAAA,SAAA9Y,KAAA,EAAAkY,CAAA,CAAAQ,CAAA,UAAA3E,CAAA,WAAAA,EAAAgF,EAAA,UAAAA,EAAA,KAAAC,CAAA,EAAAL,CAAA,gBAAAM,SAAA,iJAAAC,gBAAA,SAAAC,MAAA,UAAAC,GAAA,WAAAR,CAAA,WAAAA,EAAA,IAAAR,EAAA,GAAAA,EAAA,CAAAiB,IAAA,CAAAnB,CAAA,MAAAW,CAAA,WAAAA,EAAA,QAAAS,IAAA,GAAAlB,EAAA,CAAAmB,IAAA,IAAAL,gBAAA,GAAAI,IAAA,CAAAR,IAAA,SAAAQ,IAAA,KAAAvF,CAAA,WAAAA,EAAAyF,GAAA,IAAAL,MAAA,SAAAC,GAAA,GAAAI,GAAA,KAAAR,CAAA,WAAAA,EAAA,eAAAE,gBAAA,IAAAd,EAAA,CAAAqB,MAAA,UAAArB,EAAA,CAAAqB,MAAA,oBAAAN,MAAA,QAAAC,GAAA;AAAA,SAAAyT,mBAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAArI,GAAA,EAAAqE,GAAA,cAAAiE,IAAA,GAAAJ,GAAA,CAAAlI,GAAA,EAAAqE,GAAA,OAAAjpB,KAAA,GAAAktB,IAAA,CAAAltB,KAAA,WAAAmtB,KAAA,IAAAJ,MAAA,CAAAI,KAAA,iBAAAD,IAAA,CAAApU,IAAA,IAAAmR,OAAA,CAAAjqB,KAAA,YAAAgsB,OAAA,CAAA/B,OAAA,CAAAjqB,KAAA,EAAAmqB,IAAA,CAAA6C,KAAA,EAAAC,MAAA;AAAA,SAAAG,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAA1Z,SAAA,aAAAmY,OAAA,WAAA/B,OAAA,EAAA8C,MAAA,QAAAD,GAAA,GAAAO,EAAA,CAAAG,KAAA,CAAAF,IAAA,EAAAC,IAAA,YAAAP,MAAAhtB,KAAA,IAAA6sB,kBAAA,CAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAjtB,KAAA,cAAAitB,OAAA7T,GAAA,IAAAyT,kBAAA,CAAAC,GAAA,EAAA7C,OAAA,EAAA8C,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAA7T,GAAA,KAAA4T,KAAA,CAAAlZ,SAAA;AAAA,SAAA4F,mBAAAC,GAAA,WAAAC,kBAAA,CAAAD,GAAA,KAAAE,gBAAA,CAAAF,GAAA,KAAAlB,2BAAA,CAAAkB,GAAA,KAAAG,kBAAA;AAAA,SAAAA,mBAAA,cAAAb,SAAA;AAAA,SAAAR,4BAAAP,CAAA,EAAA6B,MAAA,SAAA7B,CAAA,qBAAAA,CAAA,sBAAA8B,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA,OAAAlB,CAAA,GAAA9M,MAAA,CAAAkO,SAAA,CAAA1E,QAAA,CAAA8D,IAAA,CAAAnB,CAAA,EAAA1C,KAAA,aAAAqD,CAAA,iBAAAX,CAAA,CAAAgC,WAAA,EAAArB,CAAA,GAAAX,CAAA,CAAAgC,WAAA,CAAAC,IAAA,MAAAtB,CAAA,cAAAA,CAAA,mBAAAN,KAAA,CAAA6B,IAAA,CAAAlC,CAAA,OAAAW,CAAA,+DAAA3I,IAAA,CAAA2I,CAAA,UAAAmB,iBAAA,CAAA9B,CAAA,EAAA6B,MAAA;AAAA,SAAAF,iBAAAQ,IAAA,eAAAhC,MAAA,oBAAAgC,IAAA,CAAAhC,MAAA,CAAAC,QAAA,aAAA+B,IAAA,+BAAA9B,KAAA,CAAA6B,IAAA,CAAAC,IAAA;AAAA,SAAAT,mBAAAD,GAAA,QAAApB,KAAA,CAAAC,OAAA,CAAAmB,GAAA,UAAAK,iBAAA,CAAAL,GAAA;AAAA,SAAAK,kBAAAL,GAAA,EAAAW,GAAA,QAAAA,GAAA,YAAAA,GAAA,GAAAX,GAAA,CAAArH,MAAA,EAAAgI,GAAA,GAAAX,GAAA,CAAArH,MAAA,WAAAoG,CAAA,MAAA6B,IAAA,OAAAhC,KAAA,CAAA+B,GAAA,GAAA5B,CAAA,GAAA4B,GAAA,EAAA5B,CAAA,IAAA6B,IAAA,CAAA7B,CAAA,IAAAiB,GAAA,CAAAjB,CAAA,UAAA6B,IAAA;AAgHA,IAAQohB,uBAAuB,GAC7BJ,gCAA2B,CADrBI,uBAAuB;EAAED,oBAAoB,GACnDH,gCAA2B,CADIG,oBAAoB;AAErD,IACEhxB,kBAAkB,GA0BhBrK,kBAAc,CA1BhBqK,kBAAkB;EAClBD,kBAAkB,GAyBhBpK,kBAAc,CAzBhBoK,kBAAkB;EAClBG,gBAAgB,GAwBdvK,kBAAc,CAxBhBuK,gBAAgB;EAChBC,gBAAgB,GAuBdxK,kBAAc,CAvBhBwK,gBAAgB;EAChBK,kBAAkB,GAsBhB7K,kBAAc,CAtBhB6K,kBAAkB;EAClBD,kBAAkB,GAqBhB5K,kBAAc,CArBhB4K,kBAAkB;EAClBM,aAAa,GAoBXlL,kBAAc,CApBhBkL,aAAa;EACbG,qBAAqB,GAmBnBrL,kBAAc,CAnBhBqL,qBAAqB;EACrB1B,eAAe,GAkBb3J,kBAAc,CAlBhB2J,eAAe;EACfM,iBAAiB,GAiBfjK,kBAAc,CAjBhBiK,iBAAiB;EACjBC,iBAAiB,GAgBflK,kBAAc,CAhBhBkK,iBAAiB;EACjBJ,UAAU,GAeR9J,kBAAc,CAfhB8J,UAAU;EACVC,UAAU,GAcR/J,kBAAc,CAdhB+J,UAAU;EACVjB,wBAAwB,GAatB9I,kBAAc,CAbhB8I,wBAAwB;EACxBC,wBAAwB,GAYtB/I,kBAAc,CAZhB+I,wBAAwB;EACxBJ,kBAAkB,GAWhB3I,kBAAc,CAXhB2I,kBAAkB;EAClBC,kBAAkB,GAUhB5I,kBAAc,CAVhB4I,kBAAkB;EAClBmC,eAAe,GASb/K,kBAAc,CAThB+K,eAAe;EACfhF,iBAAiB,GAQf/F,kBAAc,CARhB+F,iBAAiB;EACjBP,eAAe,GAObxF,kBAAc,CAPhBwF,eAAe;EACfI,UAAU,GAMR5F,kBAAc,CANhB4F,UAAU;EACVhB,kBAAkB,GAKhB5E,kBAAc,CALhB4E,kBAAkB;EAClBN,mBAAmB,GAIjBtE,kBAAc,CAJhBsE,mBAAmB;EACnBS,oBAAoB,GAGlB/E,kBAAc,CAHhB+E,oBAAoB;EACpBN,kBAAkB,GAEhBzE,kBAAc,CAFhByE,kBAAkB;EAClBgD,wBAAwB,GACtBzH,kBAAc,CADhByH,wBAAwB;AAE1B,IAAMk4B,WAAW,GAAG,GAAG;AACvB,IAAMC,YAAY,GAAG,EAAE;AAChB,IAAIC,oBAAoB,GAAAh0B,OAAA,CAAAg0B,oBAAA,GAAG,OAAO;AAEzC,IAAIC,eAAe,GAAG,KAAK;;AAE3B;;AAEA;AACA;AACA;AACAC,oBAAoB,CAAC,CAAC;AACtB,IAAArP,8BAAiB,EAAC3a,6BAAe,CAAC;AAClC8d,qBAAI,CAACY,IAAI,CAAC,CAAC;AACXK,MAAM,CAAC1kB,gBAAgB,CAAC,QAAQ,EAAE2vB,oBAAoB,CAAC;AACvDxzB,QAAQ,CAAC6D,gBAAgB,CAAC,SAAS,EAAE4vB,WAAW,EAAE;EAAEC,IAAI,EAAE;AAAK,CAAC,CAAC;AACjE1zB,QAAQ,CAAC6D,gBAAgB,CAAC,YAAY,EAAE4vB,WAAW,EAAE;EAAEC,IAAI,EAAE;AAAK,CAAC,CAAC;AACpE,IAAIC,QAAQ;AACZ,IAAI/Q,KAAK;AACT,IAAIgR,cAAc;AAClB,IAAIC,iBAAiB,GAAG,KAAK,CAAC,CAAC;AAC/B,IAAIC,SAAS,GAAG,EAAE;AAClB;AACA3qB,2BAAa,CAACsL,WAAW,GAAG+P,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAC/DD,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACvC/c,IAAI,CAACqJ,KAAK,CAAC,GAAG,CAAC,CAACpI,QAAQ,CAAC,CAAC,CAACorB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AAC7C,IAAIC,cAAc,GAAG,KAAK;AAC1B,IAAIC,QAAQ,GAAG,KAAK;AACpB,IAAIC,gBAAgB,GAAG,IAAI,CAAC,CAAC;AAC7BjqB,iCAAmB,CAAC1F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AACjDyF,iCAAmB,CAAC5W,KAAK,CAACq4B,OAAO,GAAG,MAAM;AAC1C1iB,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;AAC9D/pB,iCAAmB,CAAC7F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;AACjD4F,iCAAmB,CAAC7F,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;AACpD,IAAM2vB,eAAe,GAAGp0B,QAAQ,CAAC2E,cAAc,CAAC,mBAAmB,CAAC;AAEpE,IAAM0vB,cAAc,GAAGr0B,QAAQ,CAAC2E,cAAc,CAAC,iBAAiB,CAAC;AACjE,IAAM2vB,WAAW,GAAGt0B,QAAQ,CAAC2E,cAAc,CAAC,aAAa,CAAC;AAE1D0vB,cAAc,CAACxwB,gBAAgB,CAAC,YAAY,EAAE,YAAM;EAClDywB,WAAW,CAAC/vB,SAAS,CAACC,GAAG,CAAC,wBAAwB,CAAC;AACrD,CAAC,CAAC;AAEF6vB,cAAc,CAACxwB,gBAAgB,CAAC,YAAY,EAAE,YAAM;EAClDywB,WAAW,CAAC/vB,SAAS,CAACE,MAAM,CAAC,wBAAwB,CAAC;AACxD,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS8vB,eAAeA,CAAA,EAAG;EACzB,IAAIpP,KAAK,GAAGnlB,QAAQ,CAACmI,aAAa,CAAC,OAAO,CAAC;EAC3Cgd,KAAK,CAAC/xB,KAAK,GAAGm1B,MAAM,CAACiM,QAAQ,CAACC,IAAI;EAClCz0B,QAAQ,CAACmjB,IAAI,CAACla,WAAW,CAACkc,KAAK,CAAC;EAChCA,KAAK,CAACuP,MAAM,CAAC,CAAC;EACd10B,QAAQ,CAAC20B,WAAW,CAAC,MAAM,CAAC;EAC5B30B,QAAQ,CAACmjB,IAAI,CAACyR,WAAW,CAACzP,KAAK,CAAC;;EAEhC;EACAnlB,QAAQ,CAAC2E,cAAc,CAAC,kBAAkB,CAAC,CAAC8P,WAAW,GAAG,SAAS;;EAEnE;EACA1P,UAAU,CAAC,YAAY;IACrB/E,QAAQ,CAAC2E,cAAc,CAAC,kBAAkB,CAAC,CAAC8P,WAAW,GAAG,WAAW;EACvE,CAAC,EAAE,IAAI,CAAC;AACV;AAEA,IAAIzU,QAAQ,CAAC2E,cAAc,CAAC,kBAAkB,CAAC,EAAE;EAC/C3E,QAAQ,CACL2E,cAAc,CAAC,kBAAkB,CAAC,CAClCd,gBAAgB,CAAC,OAAO,EAAE0wB,eAAe,CAAC;AAC/C;AAEA,IAAMM,WAAW,GAAG70B,QAAQ,CAAC2E,cAAc,CAAC,aAAa,CAAC;AAC1DkwB,WAAW,CAAChxB,gBAAgB,CAAC,OAAO,EAAE,YAAY;EAChDylB,WAAW,CAAC,CAAC;EACb,IAAIte,8BAAgB,CAAC3X,KAAK,CAACq4B,OAAO,KAAK,MAAM,EAAE;IAC7C1gB,8BAAgB,CAAC3X,KAAK,CAACq4B,OAAO,GAAG,MAAM;EACzC,CAAC,MAAM;IACL1gB,8BAAgB,CAAC3X,KAAK,CAACq4B,OAAO,GAAG,MAAM;EACzC;EACAmJ,WAAW,CAACC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAEF,IAAIC,eAAe;;AAEnB;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EACxCt3B,iBAAiB,CAAC,IAAI,CAAC;EACvB;EACAu3B,YAAY,CAACH,eAAe,CAAC;;EAE7B;EACAA,eAAe,GAAGhwB,UAAU,CAC1B,YAAM;IACJpH,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC,EACDs3B,QAAQ,GAAGA,QAAQ,GAAGf,gBACxB,CAAC;;EAED;EACA,IAAI32B,UAAU,CAAC,CAAC,EAAE;IAChB23B,YAAY,CAACH,eAAe,CAAC;EAC/B;AACF;AAEAnB,cAAc,GAAGuB,WAAW,CAAC1vB,4BAAU,EAAE,GAAG,CAAC;AAE7C,SAAS2vB,cAAcA,CAAA,EAAG,CAAC;AAE3B,IAAIC,eAAe,GAAG,CAAC;AACvB,IAAIC,iBAAiB,GAAG32B,aAAa,CAAC,CAAC;AACvC,IAAI42B,mBAAmB,GAAG,KAAK;AAC/B,IAAIC,kBAAkB,GAAG,IAAI,CAAC,CAAC;;AAE/B,SAASC,aAAaA,CAACtd,KAAK,EAAErlB,IAAI,EAAE4iC,OAAO,EAAE;EAC3C,IAAMphB,IAAI,GAAGxhB,IAAI,CAAC2hB,WAAW;EAC7B,IAAI0D,KAAK,IAAI,CAAC,EAAE;IACdrlB,IAAI,CAAC2hB,WAAW,GAAGH,IAAI,CAACqhB,SAAS,CAAC,CAAC,EAAExd,KAAK,CAAC;IAC3CpT,UAAU,CAAC,YAAM;MACf0wB,aAAa,CAACtd,KAAK,GAAG,CAAC,EAAErlB,IAAI,EAAE4iC,OAAO,CAAC;IACzC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC;EACf,CAAC,MAAM,CACP;AACF;AAEO,SAASrH,kBAAkBA,CAChCuH,YAAY,EAGZ;EAAA,IAFAC,kBAAkB,GAAA5uB,SAAA,CAAAvB,MAAA,QAAAuB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EAAA,IACzB6uB,gBAAgB,GAAA7uB,SAAA,CAAAvB,MAAA,QAAAuB,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EAEvB,IAAMyuB,OAAO,GAAG,GAAG;EACnB3wB,UAAU,CAAC,YAAM;IACfgxB,wBAAwB,CAAC,CAAC,EAAEH,YAAY,EAAE7qB,kCAAoB,EAAE,GAAG,CAAC;IACpE;;IAEAhG,UAAU,CAAC,YAAM;MACf0wB,aAAa,CACX1qB,kCAAoB,CAAC0J,WAAW,CAAC/O,MAAM,GAAG,CAAC,EAC3CqF,kCAAoB,EACpB2qB,OACF,CAAC;IACH,CAAC,EAAEG,kBAAkB,CAAC;EACxB,CAAC,EAAEC,gBAAgB,CAAC;AACtB;AAEA,SAASE,eAAeA,CAAA,EAAG;EACzB,IAAIC,SAAS,CAAC,CAAC,EAAE,OAAOC,UAAU,CAAC,CAAC;EACpCC,wBAAwB,CAAC,CAAC;EAC1BC,kBAAkB,CAAC,CAAC;EACpB,IAAI/9B,kBAAkB,CAAC,CAAC,EAAE;IACxBg+B,kBAAkB,CAAC,CAAC;EACtB;EAEA,IAAIt+B,mBAAmB,CAAC,CAAC,EAAE;IACzBu+B,mBAAmB,CAAC,CAAC;EACvB;EACA,IAAI99B,oBAAoB,CAAC,CAAC,EAAE;IAC1B+9B,oBAAoB,CAAC,CAAC;EACxB;EACA,IAAIr+B,kBAAkB,CAAC,CAAC,EAAE;IACxBs+B,kBAAkB,CAAC,CAAC;EACtB;AACF;AAEA,IAAMC,oBAAoB,GAAG;EAC3B,CAAC,EAAE1I,mBAAY;EACfH,KAAK,EAAEO,4BAAgB;EACvB,CAAC,EAAED;AACL,CAAC;AAED,SAASwI,MAAMA,CAACC,IAAI,EAAE;EACpB,IAAI1C,QAAQ,EAAE;IACZ;IACA;EACF;EAEA,IAAIN,QAAQ,IAAI,IAAI,EAAE;IACpBA,QAAQ,GAAGgD,IAAI;IACfpO,MAAM,CAACH,qBAAqB,CAACsO,MAAM,CAAC;IACpC;EACF;EAEA,IAAIE,SAAS,GAAG,CAAC;EACjB;EACA,IAAIx2B,KAAK,GAAGw2B,SAAS;EACrB,IAAI/C,iBAAiB,IAAI,CAACn2B,iBAAiB,CAAC,CAAC,EAAE;IAC7Cs3B,sBAAsB,CAAC,CAAC;IACxB1L,WAAW,CAAC,CAAC;IACbvkB,UAAU,CAAC,YAAM;MACf8uB,iBAAiB,GAAG,KAAK,CAAC,CAAC;MAC3BvK,WAAW,CAAC,CAAC;IACf,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,CAAC;EACV;;EAEA,IAAMuN,cAAc,GAAGJ,oBAAoB,CAACj4B,eAAe,CAAC,CAAC,CAAC;EAC9D,IAAIq4B,cAAc,EAAE;IAClBA,cAAc,CAAC7I,KAAK,EAAE5tB,KAAK,EAAEk1B,iBAAiB,CAAC;EACjD;EACA,IAAA30B,0CAAuB,EAACP,KAAK,EAAEk1B,iBAAiB,CAAC;EACjD;EACA,IAAAn1B,oBAAY,EAACC,KAAK,EAAEk1B,iBAAiB,CAAC;EACtC,IAAAv0B,wCAAsB,EAACX,KAAK,EAAEk1B,iBAAiB,CAAC;EAChD,IAAA70B,oCAAoB,EAACL,KAAK,EAAEk1B,iBAAiB,CAAC;EAC9C,IAAAjiB,oBAAY,EAACjT,KAAK,EAAEk1B,iBAAiB,CAAC;EACtC;EACA;EACA;EACA;EACA,IAAAnG,wCAAmB,EAAC/uB,KAAK,EAAEk1B,iBAAiB,CAAC;EAC7C;EACA;EACA,IAAAhmB,gBAAU,EAAClP,KAAK,EAAEk1B,iBAAiB,CAAC;EACpC;EACA,IAAAvxB,4BAAU,EACR3D,KAAK,EACLk1B,iBAAiB,EACjB/4B,wBAAwB,CAAC,CAAC,EAC1BH,kBAAkB,CAAC,CACrB,CAAC;EACD06B,gBAAgB,CAAC12B,KAAK,CAAC;EACvB22B,WAAW,CAAC32B,KAAK,CAAC;EAClB,IAAAyR,0BAAe,EAACzR,KAAK,EAAEk1B,iBAAiB,CAAC;EACzCU,eAAe,CAAC,CAAC;EACjBrC,QAAQ,GAAGgD,IAAI;EACfpO,MAAM,CAACH,qBAAqB,CAACsO,MAAM,CAAC;AACtC;AAEA,SAASM,eAAeA,CAACxmB,OAAO,EAAE;EAChCvP,gCAAe,CAACM,SAAS,CAACiG,IAAI,CAAC,CAAC;EAChC,IAAMyvB,UAAU,GAAGj3B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAChD8uB,UAAU,CAAC1yB,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;EAC1CyyB,UAAU,CAAC5jC,KAAK,CAACwV,QAAQ,GAAG,UAAU;EACtC2H,OAAO,CAACvH,WAAW,CAACguB,UAAU,CAAC;EAC/BA,UAAU,CAACxiB,WAAW,GAAG,KAAK;EAC9BwiB,UAAU,CAACpzB,gBAAgB,CAAC,cAAc,EAAE,YAAM;IAChDozB,UAAU,CAACxyB,MAAM,CAAC,CAAC;EACrB,CAAC,CAAC;EACF,OAAO,IAAI;AACb;AAEA,IAAIyyB,iBAAiB,GAAG,CAAC,CAAC,CAAC;;AAE3B,SAASC,eAAeA,CAAA,EAAG;EACzB,IAAAjsB,4BAAa,EAACX,qCAAuB,CAAC;EACtC,IAAAW,4BAAa,EAACT,wCAA0B,CAAC;EACzC2sB,aAAa,CAACp5B,gBAAgB,CAAC,CAAC,CAAC;EACjCC,gBAAgB,CAAC,IAAI,CAAC;EACtBi5B,iBAAiB,GAAG,CAAC;EACrBxsB,2BAAa,CAACrX,KAAK,CAACs1B,KAAK,GAAG,MAAM,CAAC,CAAC;EACpCrqB,kBAAkB,CAAC,IAAI,CAAC;EACxB4L,mCAAqB,CAACuK,WAAW,GAAG,IAAI;EACxCjK,wCAA0B,CAACiK,WAAW,GAAG,GAAG;EAC5C3W,kBAAkB,CAAC,CAAC,CAAC;AACvB;AAEA,SAASu5B,oBAAoBA,CAAA,EAAG;EAC9BD,aAAa,CAACp5B,gBAAgB,CAAC,CAAC,CAAC;EACjCM,kBAAkB,CAAC,IAAI,CAAC;EACxB,IAAMzK,aAAa,GAAGshC,WAAW,CAAC,YAAM;IACtC72B,kBAAkB,CAACD,kBAAkB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAChD,IAAMi5B,aAAa,GAAIj5B,kBAAkB,CAAC,CAAC,GAAG,IAAI,GAAI,GAAG,CAAC,CAAC;;IAE3D,IAAIA,kBAAkB,CAAC,CAAC,IAAI,CAAC,EAAE;MAC7B84B,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLzsB,2BAAa,CAACrX,KAAK,CAACs1B,KAAK,MAAA9X,MAAA,CAAMymB,aAAa,MAAG;IACjD;EACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACTr5B,gBAAgB,CAACpK,aAAa,CAAC;AACjC;AAEO,SAAS0jC,iBAAiBA,CAAC/mB,OAAO,EAAE;EACzC,IAAIA,OAAO,CAAClI,OAAO,CAACinB,SAAS,IAAI,CAAC/e,OAAO,CAAClI,OAAO,CAACknB,UAAU,EAAE,OAAO,KAAK;AAC5E;AAEA,SAAS2G,wBAAwBA,CAAA,EAAG;EAClC,IAAMpwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAA2hB,mCAAkB,EAAC,CAAC,CAAC0R,IAAI,CAAC,UAAChnB,OAAO,EAAK;IACrC,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC;MACA/F,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC,CAACpC,MAAM,CAAC,CAAC;MAC5C,IAAI0P,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;MACjD;MACA,IAAIsW,sBAAsB,KAAK,CAAC,EAAE;QAChCA,sBAAsB,IAAIwO,QAAQ,CAACnS,OAAO,CAACmV,UAAU,CAAC,GAAG,CAAC;QAC1D7nB,kBAAkB,CAACqW,sBAAsB,CAAC;MAC5C,CAAC,MAAM;QACLA,sBAAsB,IAAIwO,QAAQ,CAACnS,OAAO,CAACmV,UAAU,CAAC;QACtD7nB,kBAAkB,CAACqW,sBAAsB,CAAC;MAC5C;MACAC,yBAAyB,CAAC,CAAC;MAC3B,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEO,SAASA,yBAAyBA,CAAA,EAAG;EAC1C,IAAAnJ,2BAAY,EAACV,qCAAuB,CAAC;EACrC,IAAAU,2BAAY,EAACR,wCAA0B,CAAC;EACxC2sB,aAAa,CAACp5B,gBAAgB,CAAC,CAAC,CAAC;EACjCq5B,oBAAoB,CAAC,CAAC;EACtBntB,mCAAqB,CAACuK,WAAW,OAAA5D,MAAA,CAAOhT,kBAAkB,CAAC,CAAC,CAAE;AAChE;AAEA,IAAMo3B,QAAQ,GAAG,IAAI;AACrB,IAAMwC,cAAc,GAAG,EAAE;AAEzB,SAASC,SAASA,CAAClnB,OAAO,EAAE;EAC1B;EACA,IAAMmnB,UAAU,GAAGjwB,IAAI,CAACgB,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;EAC7C1I,QAAQ,CAAC43B,eAAe,CAACvkC,KAAK,CAACC,WAAW,CACxC,gBAAgB,EAChBqkC,UAAU,GAAG,IACf,CAAC;AACH;AAEA,SAASE,iBAAiBA,CAACpvB,MAAM,EAAE;EACjC,OAAOf,IAAI,CAACG,GAAG,CAAC,EAAE,GAAGY,MAAM,GAAG,IAAI,EAAE,EAAE,CAAC;AACzC;AAEA,IAAIqvB,eAAe,GAAG,CAAC;AACvB,IAAIC,gBAAgB,GAAG,CAAC;AAExB,SAAS3B,kBAAkBA,CAAA,EAAG;EAC5B,IAAMrwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAAyL,kBAAY,EAAC,CAAC,CAAC4nB,IAAI,CAAC,UAAChnB,OAAO,EAAK;IAC/B,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC,IAAMmC,WAAW,GAAGlI,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC;;MAEvD;MACA,IAAMowB,UAAU,GAAGj3B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;MAChD,IAAID,WAAW,CAACI,OAAO,CAACmI,GAAG,KAAK,MAAM,EAAE;QACtC,IAAAsgB,uBAAQ,EAAC7oB,WAAW,CAACI,OAAO,CAACjB,IAAI,CAAC;MACpC,CAAC,MAAM;QACL2wB,aAAa,CAACf,UAAU,EAAE/uB,WAAW,CAAC;MACxC;MACAA,WAAW,CAACzD,MAAM,CAAC,CAAC;MACpBM,UAAU,CAAC,YAAM;QACfkyB,UAAU,CAACxyB,MAAM,CAAC,CAAC;MACrB,CAAC,EAAE,GAAG,CAAC;;MAEP;MACAxD,gCAAe,CAACO,UAAU,CAACgG,IAAI,CAAC,CAAC;MACjC,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEA,SAASywB,yBAAyBA,CAACpvB,QAAQ,EAAE;EAC3C5H,gCAAe,CAACM,SAAS,CAACiG,IAAI,CAAC,CAAC;EAChC,IAAMyvB,UAAU,GAAGj3B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAChD8uB,UAAU,CAAC1yB,SAAS,CAACC,GAAG,CAAC,QAAQ,EAAE,uBAAuB,CAAC;EAC3DyyB,UAAU,CAAC5jC,KAAK,CAACwV,QAAQ,GAAG,UAAU;EACtCouB,UAAU,CAAC3uB,OAAO,CAAC4vB,aAAa,GAAG,IAAI;EACvC;EACAjB,UAAU,CAAC5jC,KAAK,CAACuT,GAAG,MAAAiK,MAAA,CAAMhI,QAAQ,CAAC2F,CAAC,GAAG,GAAG,OAAI;EAC9CxF,uBAAS,CAACC,WAAW,CAACguB,UAAU,CAAC;EACjCA,UAAU,CAACxiB,WAAW,GAAG,KAAK;;EAE9B;EACAqa,oBAAoB,CAACmI,UAAU,CAAC;;EAEhC;EACAA,UAAU,CAACpzB,gBAAgB,CAAC,cAAc,EAAE,YAAM;IAChDozB,UAAU,CAACxyB,MAAM,CAAC,CAAC;IACnBsqB,uBAAuB,CAACkI,UAAU,CAAC;EACrC,CAAC,CAAC;EAEF,OAAO,IAAI;AACb;AAEA,SAASX,mBAAmBA,CAAA,EAAG;EAC7B,IAAMvwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAAyiB,oBAAa,EAAC,CAAC,CAAC4Q,IAAI,CAAC,UAAChnB,OAAO,EAAK;IAChC,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC,IAAMoyB,iBAAiB,GAAG;QAAE1pB,CAAC,EAAE1I,QAAQ,CAAC0I,CAAC;QAAED,CAAC,EAAEzI,QAAQ,CAACyI;MAAE,CAAC;MAE1D,IAAI4pB,YAAY,GAAGzV,QAAQ,CAAC3Y,uBAAS,CAACyK,WAAW,EAAE,EAAE,CAAC;MACtD2jB,YAAY,IAAI,CAAC;MACjBpuB,uBAAS,CAACyK,WAAW,GAAG2jB,YAAY;MACpC,IAAMC,YAAY,GAAGr4B,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC;MACxDoxB,yBAAyB,CAACE,iBAAiB,CAAC;MAC5CE,YAAY,CAAC5zB,MAAM,CAAC,CAAC;MACrB;;MAEA;MACA;;MAEA;MACA;;MAEA,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEA,SAAS+xB,kBAAkBA,CAAA,EAAG;EAC5B,IAAMzwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAA0iB,kBAAY,EAAC,CAAC,CAAC2Q,IAAI,CAAC,UAAChnB,OAAO,EAAK;IAC/B,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC,IAAM+gB,IAAI,GAAG9mB,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC;MAChDxN,UAAU,CAAC,IAAI,CAAC;MAChBG,iBAAiB,CAAC,CAAC,CAAC;MACpBstB,IAAI,CAACriB,MAAM,CAAC,CAAC;MACbM,UAAU,CAAC,YAAM;QACf1L,UAAU,CAAC,KAAK,CAAC;QACjBG,iBAAiB,CAAC,CAAC,CAAC;MACtB,CAAC,EAAEP,eAAe,CAAC,CAAC,CAAC;MACrB,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEA,SAASo9B,kBAAkBA,CAAA,EAAG;EAC5B,IAAMtwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAAkjB,kBAAY,EAAC,CAAC,CAACmQ,IAAI,CAAC,UAAChnB,OAAO,EAAK;IAC/B,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC,IAAMuyB,WAAW,GAAGt4B,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC;MACvDyxB,WAAW,CAAC7zB,MAAM,CAAC,CAAC;MACpBjH,UAAU,CAAC,IAAI,CAAC;MAChB;MACA6E,sBAAQ,CAACkC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;;MAEzC;MACAO,UAAU,CAAC,YAAM;QACfvH,UAAU,CAAC,KAAK,CAAC;QACjBG,iBAAiB,CAAC,KAAK,CAAC;QACxB;QACA0E,sBAAQ,CAACkC,SAAS,CAACE,MAAM,CAAC,iBAAiB,CAAC;MAC9C,CAAC,EAAErH,eAAe,CAAC,CAAC,CAAC;MACrB43B,sBAAsB,CAAC53B,eAAe,CAAC,CAAC,CAAC;MAEzC,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;AAEA,SAASm5B,oBAAoBA,CAAA,EAAG;EAC9B,IAAMxwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAC9B,IAAAwiB,sBAAc,EAAC,CAAC,CAAC6Q,IAAI,CAAC,UAAChnB,OAAO,EAAK;IACjC,IAAIiD,WAAW,CAACjD,OAAO,CAACV,IAAI,EAAE/J,QAAQ,CAAC,EAAE;MACvC,IAAMwyB,aAAa,GAAGv4B,QAAQ,CAAC2E,cAAc,CAAC6L,OAAO,CAAC3J,EAAE,CAAC;MACzD0xB,aAAa,CAAC9zB,MAAM,CAAC,CAAC;MACtBzE,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACI,OAAO,CAAC,UAACkI,IAAI,EAAK;QACzDA,IAAI,CAACD,OAAO,CAACE,MAAM,GAAG,MAAM;QAC5BD,IAAI,CAACD,OAAO,CAAC4G,cAAc,GAAG,MAAM;QACpC3G,IAAI,CAACD,OAAO,CAAC+F,SAAS,KAAK,OAAO;MACpC,CAAC,CAAC;MACF,OAAO,IAAI;IACb;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMmqB,mBAAmB,GAAGx4B,QAAQ,CAACsC,aAAa,CAChD,8BACF,CAAC;AAED,SAAS01B,aAAaA,CAAC1jB,IAAI,EAAEmkB,aAAa,EAAE;EAAA,IAAAC,qBAAA;EAC1C,IAAI,CAACx9B,wBAAwB,CAAC,CAAC,EAAE;IAC/BoZ,IAAI,CAAC/P,SAAS,CAACC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC;EAChD,CAAC,MAAM;IACL8P,IAAI,CAAC/P,SAAS,CAACC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;EAC3C;EACA8P,IAAI,CAACjhB,KAAK,CAACwV,QAAQ,GAAG,UAAU;EAChCyL,IAAI,CAACjhB,KAAK,CAAC2S,IAAI,GAAGyyB,aAAa,CAAC1vB,UAAU,GAAG,IAAI;EACjDuL,IAAI,CAACjhB,KAAK,CAACuT,GAAG,GAAG6xB,aAAa,CAAC3vB,SAAS,GAAG,EAAE,GAAG,IAAI;EACpD4uB,SAAS,CAACpjB,IAAI,CAAC;EACfmkB,aAAa,CAAClkB,UAAU,CAACC,YAAY,CAACF,IAAI,EAAEmkB,aAAa,CAAC;EAC1D,IAAIE,YAAY,EAAElwB,MAAM;EACxB,IAAI0L,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;EAEjD86B,YAAY,GAAGF,aAAa,aAAbA,aAAa,gBAAAC,qBAAA,GAAbD,aAAa,CAAEnwB,OAAO,cAAAowB,qBAAA,uBAAtBA,qBAAA,CAAwBjwB,MAAM;EAC7CA,MAAM,GAAGkwB,YAAY,GAAGxkB,sBAAsB;EAE9CO,qBAAqB,CAACjM,MAAM,CAAC;EAC7B,IAAMmwB,QAAQ,GAAGf,iBAAiB,CAACpvB,MAAM,CAAC;EAC1C6L,IAAI,CAACjhB,KAAK,CAACulC,QAAQ,GAAGA,QAAQ,GAAG,IAAI;EACrCtkB,IAAI,CAACG,WAAW,OAAA5D,MAAA,CAAOpI,MAAM,CAAE;EAC/B;EACA,IAAMowB,QAAQ,GAAG74B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC9C0wB,QAAQ,CAACpkB,WAAW,OAAA5D,MAAA,CAAO8nB,YAAY,OAAA9nB,MAAA,CAAIsD,sBAAsB,CAAE;EACnE0kB,QAAQ,CAACt0B,SAAS,CAACC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC;;EAEnD;EACA,IAAMs0B,gBAAgB,GACpBN,mBAAmB,CAACl2B,aAAa,CAAC,oBAAoB,CAAC;EACzD,IAAIw2B,gBAAgB,EAAE;IACpBA,gBAAgB,CAACr0B,MAAM,CAAC,CAAC;EAC3B;;EAEA;EACA+zB,mBAAmB,CAACvvB,WAAW,CAAC4vB,QAAQ,CAAC;EAEzC,IAAIA,QAAQ,EAAE;IACZ;IACA9zB,UAAU,CAAC,YAAM;MACf8zB,QAAQ,CAACp0B,MAAM,CAAC,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV;AACF;AAEA,IAAIs0B,mBAAmB,GAAG,CAAC;AAEpB,SAASrkB,qBAAqBA,CAACtU,KAAK,EAAE;EAC3C,IAAM44B,YAAY,GAAGpW,KAAK;EAC1B,IAAMqW,UAAU,GAAGvxB,IAAI,CAACmhB,IAAI,CAACoM,QAAQ,GAAGwC,cAAc,CAAC;EACvD,IAAMyB,eAAe,GAAG94B,KAAK,GAAG64B,UAAU;EAC1C,IAAI9kB,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;EACjD,IAAMs7B,UAAU,GAAGhE,WAAW,CAAC,YAAM;IACnCvS,KAAK,IAAIsW,eAAe;IACxBH,mBAAmB,IAAIG,eAAe;IACtChwB,uBAAS,CAACuL,WAAW,GAAG/M,IAAI,CAACqJ,KAAK,CAAC6R,KAAK,CAAC,CAACja,QAAQ,CAAC,CAAC,CAACorB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAEnE,IAAI5f,sBAAsB,GAAG,CAAC,EAAE;MAC9B+iB,iBAAiB,IAAIgC,eAAe;MACpC1uB,wCAA0B,CAACiK,WAAW,GAAG/M,IAAI,CAACqJ,KAAK,CAACmmB,iBAAiB,CAAC,CACnEvuB,QAAQ,CAAC,CAAC,CACVorB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACnB;IACA,IAAInR,KAAK,IAAIoW,YAAY,GAAG54B,KAAK,EAAE;MACjC;MACAg3B,aAAa,CAAC+B,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE1B,cAAc,CAAC;AACpB;AAEA,SAASxB,SAASA,CAAA,EAAG;EACnB;EACA,IAAMlwB,QAAQ,GAAG,IAAA5B,6BAAW,EAAC,CAAC;EAE9B,IAAMi1B,WAAW,GAAG,IAAAzkB,sBAAc,EAAC,CAAC;EACpC,IAAM0kB,SAAS,GAAG,IAAAxe,kBAAY,EAAC,CAAC;EAChC,IAAMye,gBAAgB,GAAG,IAAA7f,gCAAmB,EAAC,CAAC;EAC9C,IAAM8f,aAAa,MAAA1oB,MAAA,CAAA/D,kBAAA,CAAOssB,WAAW,GAAAtsB,kBAAA,CAAKusB,SAAS,GAAAvsB,kBAAA,CAAKwsB,gBAAgB,EAAC;;EAEzE;EACA,IAAME,yBAAyB,GAAGD,aAAa,CAAC/B,IAAI,CAAC,UAAC1nB,IAAI;IAAA,OACxD2D,WAAW,CAAC3D,IAAI,EAAE/J,QAAQ,CAAC;EAAA,CAC7B,CAAC;;EAED;EACA,IAAIiE,uBAAS,CAACyK,WAAW,KAAK,GAAG,EAAE;IACjCzL,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,qBAAqB,CAAC;IACjEnrB,uBAAS,CAACzE,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACzC,OAAO,IAAI;EACb,CAAC,CAAC;EAAA,KACG,IAAI+0B,yBAAyB,IAAI,CAAC97B,iBAAiB,CAAC,CAAC,IAAI,CAACH,UAAU,CAAC,CAAC,EAAE;IAC3E;IACA,IAAI,CAACs2B,iBAAiB,EAAE;MACtB;MACA5yB,gCAAe,CAACQ,UAAU,CAAC+F,IAAI,CAAC,CAAC;MACjC,IAAI4wB,YAAY,GAAGzV,QAAQ,CAAC3Y,uBAAS,CAACyK,WAAW,EAAE,EAAE,CAAC;MACtD,IAAI,CAACmK,KAAK,CAACwZ,YAAY,CAAC,EAAE;QACxBA,YAAY,IAAI,CAAC;QACjBpuB,uBAAS,CAACyK,WAAW,GAAG2jB,YAAY;MACtC;MACAjB,eAAe,CAAC,CAAC;MACjB;MACAtD,iBAAiB,GAAG,IAAI;MACxB;MACAxxB,sBAAQ,CAACkC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;MACzC;MACAwE,uBAAS,CAACzE,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;MACtC;;MAEA;MACAO,UAAU,CAAC,YAAM;QACf1C,sBAAQ,CAACkC,SAAS,CAACE,MAAM,CAAC,iBAAiB,CAAC;QAC5CpC,sBAAQ,CAACkC,SAAS,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACjD,CAAC,EAAE,GAAG,CAAC;MACPO,UAAU,CAAC,YAAM;QACf8uB,iBAAiB,GAAG,KAAK;QACzBxxB,sBAAQ,CAACkC,SAAS,CAACE,MAAM,CAAC,uBAAuB,CAAC;MACpD,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,MAAM,IAAI+0B,yBAAyB,IAAI97B,iBAAiB,CAAC,CAAC,EAAE,CAC7D;AACF;AAEA,IAAM+7B,UAAU,GAAGz5B,QAAQ,CAAC2E,cAAc,CAAC,YAAY,CAAC;AACxD,IAAI+0B,oBAAoB,GAAG,KAAK;AAChC,IAAMC,cAAc,GAAG35B,QAAQ,CAAC2E,cAAc,CAAC,kBAAkB,CAAC;AAClE;AACA80B,UAAU,CAAC51B,gBAAgB,CAAC,OAAO,EAAE,YAAY;EAC/C,IAAI,CAAC61B,oBAAoB,EAAE;IACzBv6B,MAAM,CAAC2Y,IAAI,CAAC7W,gCAAe,CAAC,CAACZ,OAAO,CAAC,UAAU2X,GAAG,EAAE;MAClD/W,gCAAe,CAAC+W,GAAG,CAAC,CAAC4hB,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC,CAAC;IACFD,cAAc,CAACv4B,GAAG,GAAGy4B,mBAAO;IAC5BH,oBAAoB,GAAG,IAAI;IAC3BD,UAAU,CAAC3E,IAAI,CAAC,CAAC;EACnB,CAAC,MAAM;IACL31B,MAAM,CAAC2Y,IAAI,CAAC7W,gCAAe,CAAC,CAACZ,OAAO,CAAC,UAAU2X,GAAG,EAAE;MAClD/W,gCAAe,CAAC+W,GAAG,CAAC,CAAC4hB,IAAI,CAAC,KAAK,CAAC;IAClC,CAAC,CAAC;IACFD,cAAc,CAACv4B,GAAG,GAAG04B,kBAAS;IAC9BJ,oBAAoB,GAAG,KAAK;IAC5BD,UAAU,CAAC3E,IAAI,CAAC,CAAC;EACnB;AACF,CAAC,CAAC;AAEK,SAASrhB,WAAWA,CAACsmB,KAAK,EAAEC,KAAK,EAAE;EACxC,OACED,KAAK,CAAC/zB,IAAI,GAAGg0B,KAAK,CAAC/zB,KAAK,IACxB8zB,KAAK,CAACnzB,GAAG,GAAGozB,KAAK,CAACrzB,MAAM,IACxBozB,KAAK,CAAC9zB,KAAK,GAAG+zB,KAAK,CAACh0B,IAAI,IACxB+zB,KAAK,CAACpzB,MAAM,GAAGqzB,KAAK,CAACpzB,GAAG;AAE5B;AAEA,SAASkwB,gBAAgBA,CAAC12B,KAAK,EAAE;EAC/Bk1B,iBAAiB,IAAIl1B,KAAK,GAAGtB,qBAAqB,CAAC,CAAC;AACtD;;AAEA;AACA,IAAMm7B,YAAY,GAAGj6B,QAAQ,CAAC2E,cAAc,CAAC,UAAU,CAAC;AACxD,IAAMu1B,gBAAgB,GAAGl6B,QAAQ,CAAC2E,cAAc,CAAC,cAAc,CAAC;AAEhE,SAASw1B,sBAAsBA,CAACC,gBAAgB,EAAE;EAChD;EACA,IAAMC,UAAU,GAAG,CAAC,CAAC,CAAC;EACtB,OAAO3yB,IAAI,CAACqJ,KAAK,CAACqpB,gBAAgB,GAAGC,UAAU,CAAC;AAClD;AAEA,SAASC,aAAaA,CAAA,EAAG;EACvBvB,mBAAmB,GAAG,CAAC;EACvB;EACA,IAAMwB,YAAY,GAAG5X,QAAQ,CAACuX,gBAAgB,CAACzlB,WAAW,EAAE,EAAE,CAAC;EAC/DylB,gBAAgB,CAACzlB,WAAW,GAAG8lB,YAAY,GAAG,CAAC;EAC/C,IAAIn+B,kBAAkB,CAAC,CAAC,KAAK,WAAW,EAAE;IACxCo+B,eAAe,CAACn6B,OAAO,CAAC,UAAC4N,IAAI,EAAK;MAChC,IAAMwsB,WAAW,GAAGpyB,kBAAkB,CAAC0jB,IAAI,CACzC,UAAC2O,OAAO;QAAA,OAAKA,OAAO,CAACrzB,IAAI,KAAK4G,IAAI,CAAC5G,IAAI;MAAA,CACzC,CAAC;MAED4G,IAAI,CAAC0sB,SAAS,GAAGF,WAAW,CAAChyB,MAAM;MACnCwF,IAAI,CAACwd,MAAM,CAACmP,mBAAmB,CAAC;IAClC,CAAC,CAAC;EACJ;EACA,IAAIL,YAAY,KAAK,CAAC,EAAE;IACtB,IAAAnO,wBAAkB,EAAC,CAAC;EACtB,CAAC,MAAM;IACL,IAAAO,iBAAW,EAAC,CAAC;EACf;EACA;EACAsN,YAAY,CAAC7mC,KAAK,GAAG,CAAC;EACtB;EACA0gC,SAAS,GAAGqG,sBAAsB,CAACrG,SAAS,CAAC;AAC/C;AAEA,SAASiD,WAAWA,CAAC32B,KAAK,EAAE;EAC1BwiB,KAAK,IAAIxiB,KAAK,GAAG,IAAI;EACrB24B,mBAAmB,IAAI34B,KAAK,GAAG,IAAI;EACnC8I,uBAAS,CAACuL,WAAW,GAAG/M,IAAI,CAACqJ,KAAK,CAAC6R,KAAK,CAAC,CAACja,QAAQ,CAAC,CAAC,CAACorB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;EAErE;EACA,IAAI8G,QAAQ,GAAI9B,mBAAmB,GAAGjF,SAAS,GAAI,GAAG;EACtDmG,YAAY,CAAC7mC,KAAK,GAAGynC,QAAQ;EAE7B,IACEjY,KAAK,GAAGzZ,2BAAa,CAACsL,WAAW,IACjC,CAACuf,cAAc,IACf7qB,2BAAa,CAACsL,WAAW,KAAK,QAAQ,EACtC;IACAxT,gCAAe,CAACM,SAAS,CAACiG,IAAI,CAAC,CAAC;IAChCwsB,cAAc,GAAG,IAAI;EACvB;EAEA,IAAI+E,mBAAmB,IAAIjF,SAAS,EAAE;IACpCwG,aAAa,CAAC,CAAC;EACjB;AACF;AAEA,SAASQ,sBAAsBA,CAAClY,KAAK,EAAE;EACrC,IAAIA,KAAK,GAAGzZ,2BAAa,CAACsL,WAAW,EAAE;IACrCtL,2BAAa,CAACsL,WAAW,GAAG/M,IAAI,CAACqJ,KAAK,CAAC6R,KAAK,CAAC,CAACja,QAAQ,CAAC,CAAC,CAACorB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACvEvP,YAAY,CAACuW,OAAO,CAAC,iBAAiB,EAAE5xB,2BAAa,CAACsL,WAAW,CAAC;EACpE;EACA,IAAIumB,+BAA+B,CAACpY,KAAK,CAAC,EAAE;IAC1C,OAAO,IAAI;EACb;AACF;AAEA,SAASqY,aAAaA,CAAA,EAAG;EACvBC,mBAAmB,CAAC,CAAC;EACrBC,cAAc,CAAC,CAAC;EAChBC,eAAe,CAAC,CAAC;EACjBC,aAAa,CAAC,CAAC;EACf,IAAAllB,uBAAa,EAAC,CAAC;EACf,IAAA4Z,iBAAU,EAAC,CAAC;AACd;AAEA,SAASmL,mBAAmBA,CAAA,EAAG;EAC7B,IAAAh7B,mBAAW,EAAC,CAAC;EACb,IAAAM,mCAAmB,EAAC,CAAC;EACrB,IAAAM,uCAAqB,EAAC,CAAC;EACvB,IAAAytB,2BAAe,EAAC,CAAC;AACnB;AAEA,SAAS4M,cAAcA,CAAA,EAAG;EACxB,IAAA9oB,mBAAW,EAAC,CAAC;EACb,IAAAiI,eAAS,EAAC,CAAC;EACX,IAAA1B,6BAAgB,EAAC,CAAC;AACpB;AAEA,SAASwiB,eAAeA,CAAA,EAAG;EACzB,IAAA33B,2BAAS,EAAC,CAAC;AACb;AAEA,SAAS43B,aAAaA,CAAA,EAAG;EACvB,IAAA3V,gCAAe,EAAC,CAAC;EACjB,IAAA3X,eAAS,EAAC,CAAC;EACX,IAAAwY,mBAAW,EAAC,CAAC;AACf;AAEA,SAASkN,WAAWA,CAAA,EAAG;EACrBpF,kBAAkB,UAAAxd,MAAA,CAAUrS,eAAe,CAAC,CAAC,MAAG,CAAC;EACjD44B,aAAa,CAACxD,cAAc,CAAC,CAAC,CAAC;EAC/B5qB,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;EAC9DR,QAAQ,GAAG,IAAI;EACfK,cAAc,GAAG,KAAK;EACtBpR,KAAK,GAAG,CAAC;EACT0Y,UAAU,CAAC,CAAC;EACZx9B,kBAAkB,CAAC,CAAC,CAAC;EACrB,IAAIqW,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;EACjDo9B,aAAa,CAAC,CAAC;EACf54B,sBAAQ,CAACkC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;EACjCyF,mCAAqB,CAACuK,WAAW,OAAA5D,MAAA,CAAOsD,sBAAsB,CAAE;EAChEnK,uBAAS,CAACyK,WAAW,GAAG,EAAE;EAC1BrL,6BAAe,CAAC7E,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EACrC6E,2BAAa,CAAC9E,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EACnC+E,8BAAgB,CAAChF,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EAC9C;EACA,IAAM+2B,UAAU,GAAG,CACjB;IACE1Y,QAAQ,EAAE,MAAM;IAChBD,KAAK,EAAE;EACT,CAAC,EACD;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IACEC,QAAQ,EAAE,MAAM;IAChBD,KAAK,EAAE;EACT,CAAC,EACD;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IAAEC,QAAQ,EAAE,KAAK;IAAED,KAAK,EAAE;EAAS,CAAC,EACpC;IACEC,QAAQ,EAAE,MAAM;IAChBD,KAAK,EAAE;EACT,CAAC,EACD;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IAAEC,QAAQ,EAAE,MAAM;IAAED,KAAK,EAAE;EAAS,CAAC,EACrC;IAAEC,QAAQ,EAAE,OAAO;IAAED,KAAK,EAAE;EAAS,CAAC,EACtC;IACEC,QAAQ,EAAE,OAAO;IACjBD,KAAK,EAAE;EACT,CAAC,EACD;IAAEC,QAAQ,EAAE,OAAO;IAAED,KAAK,EAAE;EAAS,CAAC,EACtC;IAAEC,QAAQ,EAAE,OAAO;IAAED,KAAK,EAAE;EAAM,CAAC,CACpC;EACD2Y,UAAU,CAACl7B,OAAO,CAAC,UAAC4N,IAAI,EAAEkK,KAAK,EAAK;IAClC,IAAMqjB,UAAU,GAAGx7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAChDqzB,UAAU,CAACj3B,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IACxCg3B,UAAU,CAAC7P,SAAS,MAAA9a,MAAA,CAAM5C,IAAI,CAAC4U,QAAQ,SAAAhS,MAAA,CAAM5C,IAAI,CAAC2U,KAAK,CAAE;IACzD,IAAM6Y,aAAa,GAAGz7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDszB,aAAa,CAACl3B,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7CqF,wBAAU,CAACZ,WAAW,CAACuyB,UAAU,CAAC;IAClC;IACA,IAAIrjB,KAAK,GAAGojB,UAAU,CAAC71B,MAAM,GAAG,CAAC,EAAE;MACjCmE,wBAAU,CAACZ,WAAW,CAACwyB,aAAa,CAAC;IACvC;EACF,CAAC,CAAC;EACFF,UAAU,CAACl7B,OAAO,CAAC,UAAC4N,IAAI,EAAEkK,KAAK,EAAK;IAClC,IAAMqjB,UAAU,GAAGx7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAChDqzB,UAAU,CAACj3B,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IACxCg3B,UAAU,CAAC7P,SAAS,MAAA9a,MAAA,CAAM5C,IAAI,CAAC4U,QAAQ,SAAAhS,MAAA,CAAM5C,IAAI,CAAC2U,KAAK,CAAE;IACzD,IAAM6Y,aAAa,GAAGz7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDszB,aAAa,CAACl3B,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7CsF,yBAAW,CAACb,WAAW,CAACuyB,UAAU,CAAC;IACnC;IACA,IAAIrjB,KAAK,GAAGojB,UAAU,CAAC71B,MAAM,GAAG,CAAC,EAAE;MACjCoE,yBAAW,CAACb,WAAW,CAACwyB,aAAa,CAAC;IACxC;EACF,CAAC,CAAC;EACFF,UAAU,CAACl7B,OAAO,CAAC,UAAC4N,IAAI,EAAEkK,KAAK,EAAK;IAClC,IAAMqjB,UAAU,GAAGx7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IAChDqzB,UAAU,CAACj3B,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IACxCg3B,UAAU,CAAC7P,SAAS,MAAA9a,MAAA,CAAM5C,IAAI,CAAC4U,QAAQ,SAAAhS,MAAA,CAAM5C,IAAI,CAAC2U,KAAK,CAAE;IACzD,IAAM6Y,aAAa,GAAGz7B,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;IACnDszB,aAAa,CAACl3B,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7CuF,yBAAW,CAACd,WAAW,CAACuyB,UAAU,CAAC;IACnC;IACA,IAAIrjB,KAAK,GAAGojB,UAAU,CAAC71B,MAAM,GAAG,CAAC,EAAE;MACjCqE,yBAAW,CAACd,WAAW,CAACwyB,aAAa,CAAC;IACxC;EACF,CAAC,CAAC;EACF;EACA;;EAEAlT,MAAM,CAACH,qBAAqB,CAACsO,MAAM,CAAC;AACtC;AAEA,IAAI1I,KAAK,GAAG,CAAC;AACb,IAAImL,UAAU;AAEd,SAASuC,WAAWA,CAAA,EAAG;EACrB1N,KAAK,EAAE;EACPrjB,kCAAoB,CAAC8J,WAAW,GAAGknB,UAAU,CAAC3N,KAAK,CAAC;AACtD;AAEA,SAAS2N,UAAUA,CAACC,OAAO,EAAE;EAC3B,IAAMC,OAAO,GAAGn0B,IAAI,CAACqJ,KAAK,CAAC6qB,OAAO,GAAG,EAAE,CAAC;EACxC,IAAME,gBAAgB,GAAGF,OAAO,GAAG,EAAE;EACrC,UAAA/qB,MAAA,CAAUgrB,OAAO,OAAAhrB,MAAA,CAAIirB,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAAjrB,MAAA,CAAGirB,gBAAgB;AAC1E;AAEA,SAASR,UAAUA,CAAA,EAAG;EACpBnC,UAAU,GAAGhE,WAAW,CAACuG,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/C;;AAEA,SAASK,SAASA,CAAA,EAAG;EACnB3E,aAAa,CAAC+B,UAAU,CAAC;AAC3B;;AAEA;AACO,SAAS7P,WAAWA,CAAA,EAAG;EAC5B2K,QAAQ,GAAG,CAACA,QAAQ;EACpB;EACA,IAAIA,QAAQ,EAAE;IACZ;IACAG,eAAe,CAAChzB,GAAG,GAAG46B,aAAO;IAC7BD,SAAS,CAAC,CAAC,CAAC,CAAC;IACbzU,qBAAI,CAACgC,WAAW,CAAC,CAAC;EACpB,CAAC,MAAM;IACL;IACA8K,eAAe,CAAChzB,GAAG,GAAG66B,cAAQ;IAC9B3U,qBAAI,CAACgC,WAAW,CAAC,CAAC;IAClBgS,UAAU,CAAC,CAAC,CAAC,CAAC;IACd/S,MAAM,CAACH,qBAAqB,CAACsO,MAAM,CAAC;EACtC;AACF;AAEA,SAASwF,qBAAqBA,CAAC/jB,KAAK,EAAEyK,KAAK,EAAE;EAC3CrZ,8BAAgB,CAAChF,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EAC9C,IAAM6sB,IAAI,GAAGlZ,KAAK,GAAG,CAAC;EACtBzO,mCAAqB,CAAC+K,WAAW,GAAG/M,IAAI,CAACy0B,KAAK,CAACvZ,KAAK,CAAC;EACrD,IAAMwZ,mBAAmB,GAAGp8B,QAAQ,CAAC2E,cAAc,CAAC,uBAAuB,CAAC;EAC5Ey3B,mBAAmB,CAAC3nB,WAAW,MAAA5D,MAAA,CAAMwgB,IAAI,EAAAxgB,MAAA,CAAG,IAAAmT,sBAAS,EAACqN,IAAI,CAAC,CAAE;EAC7D,IAAMgL,oBAAoB,GAAGr8B,QAAQ,CAAC2E,cAAc,CAAC,mBAAmB,CAAC;EACzE,IAAM23B,4BAA4B,GAAGt8B,QAAQ,CAAC2E,cAAc,CAC1D,yBACF,CAAC;EACD,IAAM43B,gCAAgC,GAAGv8B,QAAQ,CAAC2E,cAAc,CAC9D,gCACF,CAAC;EACD,IAAM63B,mBAAmB,GAAGx8B,QAAQ,CAAC2E,cAAc,CAAC,wBAAwB,CAAC;EAC7E,IAAM83B,iBAAiB,GAAGz8B,QAAQ,CAAC2E,cAAc,CAAC,mBAAmB,CAAC;EACtE2F,oCAAsB,CAAC/F,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;EACpD6F,oCAAsB,CAAC/F,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;EACjDO,UAAU,CAAC,YAAM;IACfu3B,4BAA4B,CAAC/3B,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;IAC9D63B,4BAA4B,CAAC/3B,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EAC5D,CAAC,EAAE,IAAI,CAAC;EACRO,UAAU,CAAC,YAAM;IACfgxB,wBAAwB,CAAC,CAAC,EAAE,aAAa,EAAEsG,oBAAoB,EAAE,GAAG,CAAC;EACvE,CAAC,EAAE,IAAI,CAAC;EACRt3B,UAAU,CAAC,YAAM;IACfgxB,wBAAwB,CACtB,CAAC,EACD,sCAAsC,EACtCwG,gCAAgC,EAChC,GACF,CAAC;EACH,CAAC,EAAE,IAAI,CAAC;EACRx3B,UAAU,CAAC,YAAM;IACf03B,iBAAiB,CAACC,KAAK,CAAC,CAAC;IACzBF,mBAAmB,CAACj4B,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;IACrD+3B,mBAAmB,CAACj4B,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;EACtD,CAAC,EAAE,KAAK,CAAC;AACX;AAAC,SAEcu2B,+BAA+BA,CAAAhZ,EAAA;EAAA,OAAA2a,gCAAA,CAAA/b,KAAA,OAAA3Z,SAAA;AAAA,EAqC9C;AAAA,SAAA01B,iCAAA;EAAAA,gCAAA,GAAAnc,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CArCA,SAAA+B,QAA+C8B,KAAK;IAAA,OAAA3H,mBAAA,GAAAc,IAAA,UAAAiF,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAA1B,IAAA,GAAA0B,QAAA,CAAAtU,IAAA;QAAA;UAAAsU,QAAA,CAAA1B,IAAA;UAAA0B,QAAA,CAAAtU,IAAA;UAAA,OAE1C,IAAAkU,0BAAoB,EAAC,CAAC,CAACtD,IAAI,CAAC,UAAC+E,IAAI,EAAK;YAC1C;YACA,IAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,UAACnH,CAAC,EAAEoH,CAAC,EAAK;cAC3C,OAAOC,QAAQ,CAACD,CAAC,CAACE,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAACrH,CAAC,CAACsH,KAAK,EAAE,EAAE,CAAC;YACtD,CAAC,CAAC;YACF;YACA,IAAMga,eAAe,GAAGra,UAAU,CAC/BlD,OAAO,CAAC,CAAC,CACT0M,IAAI,CAAC,UAAC8Q,IAAI;cAAA,OAAKla,QAAQ,CAACka,IAAI,CAACja,KAAK,EAAE,EAAE,CAAC,GAAGD,QAAQ,CAACC,KAAK,EAAE,EAAE,CAAC;YAAA,EAAC;YACjE;YACA,IAAMzK,KAAK,GAAGoK,UAAU,CAAClD,OAAO,CAAC,CAAC,CAAC2P,OAAO,CAAC4N,eAAe,CAAC;YAC3D;YACA,IAAIzkB,KAAK,KAAKoK,UAAU,CAAC7c,MAAM,GAAG,CAAC,EAAE;cACnC;cACAw2B,qBAAqB,CAAC/jB,KAAK,EAAEyK,KAAK,CAAC;cACnC,OAAO,IAAI;YACb,CAAC,MAAM;cACL7d,UAAU,CAAC,YAAM;gBACf/E,QAAQ,CAAC6D,gBAAgB,CAAC,SAAS,EAAE4vB,WAAW,EAAE;kBAAEC,IAAI,EAAE;gBAAK,CAAC,CAAC;gBACjE1zB,QAAQ,CAAC6D,gBAAgB,CAAC,YAAY,EAAE4vB,WAAW,EAAE;kBACnDC,IAAI,EAAE;gBACR,CAAC,CAAC;gBACFrqB,2BAAa,CAAC9E,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;cACxC,CAAC,EAAE,GAAG,CAAC;cACPM,UAAU,CAAC,YAAM;gBACf+3B,WAAW,CAAC,CAAC,CAAC;cAChB,CAAC,EAAE,IAAI,CAAC;cACR;YACF;UACF,CAAC,CAAC;QAAA;UAAA7b,QAAA,CAAAtU,IAAA;UAAA;QAAA;UAAAsU,QAAA,CAAA1B,IAAA;UAAA0B,QAAA,CAAAK,EAAA,GAAAL,QAAA;UAEFvO,OAAO,CAACC,GAAG,CAAAsO,QAAA,CAAAK,EAAM,CAAC;QAAC;QAAA;UAAA,OAAAL,QAAA,CAAAxB,IAAA;MAAA;IAAA,GAAAqB,OAAA;EAAA,CAEtB;EAAA,OAAA6b,gCAAA,CAAA/b,KAAA,OAAA3Z,SAAA;AAAA;AAGD,SAAS81B,0BAA0BA,CAACna,KAAK,EAAE;EACzC,OAAOA,KAAK,CAACoa,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,CAAC;AAC1C;;AAEA;AAAA,SACeC,oBAAoBA,CAAA;EAAA,OAAAC,qBAAA,CAAAvc,KAAA,OAAA3Z,SAAA;AAAA;AAAA,SAAAk2B,sBAAA;EAAAA,qBAAA,GAAA3c,iBAAA,eAAAvF,mBAAA,GAAA8D,IAAA,CAAnC,SAAA0C,SAAA;IAAA,IAAA6D,SAAA,EAAA8X,GAAA,EAAAC,kBAAA;IAAA,OAAApiB,mBAAA,GAAAc,IAAA,UAAA6F,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAtC,IAAA,GAAAsC,SAAA,CAAAlV,IAAA;QAAA;UACQ2Y,SAAS,GAAGtlB,QAAQ,CAAC2E,cAAc,CAAC,mBAAmB,CAAC,CAACvR,KAAK,EACpE;UAAA,MACI,CAAC,IAAAiyB,4BAAa,EAAC,CAAC,IAAI,CAACC,SAAS;YAAAzD,SAAA,CAAAlV,IAAA;YAAA;UAAA;UAChChD,mCAAqB,CAAC8K,WAAW,GAAG,qBAAqB;UACzD9K,mCAAqB,CAACpF,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;UAAC,OAAAod,SAAA,CAAA7D,MAAA;QAAA;UAAA6D,SAAA,CAAAlV,IAAA;UAAA,OAI/B,IAAAmW,wBAAkB,EAClCwC,SAAS,EACTyX,0BAA0B,CAACrzB,mCAAqB,CAAC+K,WAAW,CAC9D,CAAC;QAAA;UAHK2oB,GAAG,GAAAvb,SAAA,CAAAhE,IAAA;UAAA,MAMLuf,GAAG,KAAK,qBAAqB;YAAAvb,SAAA,CAAAlV,IAAA;YAAA;UAAA;UAC/BhD,mCAAqB,CAAC8K,WAAW,GAAG2oB,GAAG;UACvCzzB,mCAAqB,CAACpF,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;UAAC,OAAAod,SAAA,CAAA7D,MAAA;QAAA;UAG/C1T,oCAAsB,CAAC/F,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;UACrDyF,iCAAmB,CAAC5W,KAAK,CAACq4B,OAAO,GAAG,MAAM;UAC1C6H,eAAe,GAAG,CAACA,eAAe;UAC5B8J,kBAAkB,GAAGr9B,QAAQ,CAAC2E,cAAc,CAAC,qBAAqB,CAAC;UACzE04B,kBAAkB,CAAC94B,SAAS,CAACE,MAAM,CAAC,qBAAqB,CAAC;UAC1D64B,OAAO,GAAG,IAAI;UACdC,cAAc,CAAC,CAAC;UAChBhK,eAAe,GAAG,CAACA,eAAe;UAClCvqB,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,EAAE,CAAC;UAC9CqJ,WAAW,CAAC,CAAC;UACbvzB,iCAAmB,CAACkqB,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;UACpElqB,iCAAmB,CAAC1F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;UACjD64B,kBAAkB,CAAC94B,SAAS,CAACC,GAAG,CAAC,0BAA0B,CAAC;UAC5DyF,iCAAmB,CAAC1F,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;UACpDM,UAAU,CAAC,YAAM;YACfwuB,eAAe,GAAG,IAAI;YACtBtpB,iCAAmB,CAAC1F,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;YACpDwF,iCAAmB,CAAC1F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;YACjDmF,mCAAqB,CAACpF,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;UAC7C,CAAC,EAAE,IAAI,CAAC;QAAC;QAAA;UAAA,OAAAqd,SAAA,CAAApC,IAAA;MAAA;IAAA,GAAAgC,QAAA;EAAA,CAEZ;EAAA,OAAA0b,qBAAA,CAAAvc,KAAA,OAAA3Z,SAAA;AAAA;AAEDjH,QAAQ,CAAC6D,gBAAgB,CAAC,OAAO,EAAE,UAAU45B,KAAK,EAAE;EAClD,IAAMpJ,cAAc,GAAGr0B,QAAQ,CAAC2E,cAAc,CAAC,iBAAiB,CAAC;EACjE,IAAM2vB,WAAW,GAAGt0B,QAAQ,CAAC2E,cAAc,CAAC,aAAa,CAAC;EAE1D,IACE,CAAC0vB,cAAc,CAACqJ,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,IACtC,CAACrJ,WAAW,CAACoJ,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EACnC;IACAtJ,cAAc,CAAC9vB,SAAS,CAACE,MAAM,CAAC,sBAAsB,CAAC;EACzD;AACF,CAAC,CAAC;AAEF,SAASm5B,wBAAwBA,CAAA,EAAG;EAClC,IAAMvJ,cAAc,GAAGr0B,QAAQ,CAAC2E,cAAc,CAAC,iBAAiB,CAAC;EACjE0vB,cAAc,CAAC9vB,SAAS,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACtD;AAEA,IAAIxE,QAAQ,CAAC2E,cAAc,CAAC,eAAe,CAAC,EAAE;EAC5C3E,QAAQ,CACL2E,cAAc,CAAC,eAAe,CAAC,CAC/Bd,gBAAgB,CAAC,OAAO,EAAEq5B,oBAAoB,CAAC;AACpD;AAEA,IAAIW,WAAW,GAAG,kBAAkB;AAEpC,SAASC,cAAcA,CAAA,EAAG;EACxBC,0BAA0B,CAAC,WAAW,CAAC;AACzC;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC5BD,0BAA0B,CAAC,eAAe,CAAC;AAC7C;AACA,SAASE,qBAAqBA,CAAA,EAAG;EAC/BF,0BAA0B,CAAC,kBAAkB,CAAC;AAChD;AAEA,SAASA,0BAA0BA,CAACG,IAAI,EAAE;EACxC,IAAMC,OAAO,GAAGn+B,QAAQ,CAAC2E,cAAc,CAACk5B,WAAW,CAAC;EACpDM,OAAO,CAAC55B,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;EAClC25B,OAAO,CAAC55B,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;EACrC,IAAM25B,aAAa,GAAGp+B,QAAQ,CAAC2E,cAAc,CAAC05B,WAAW,CAACR,WAAW,CAAC,CAAC;EACvEO,aAAa,CAAC75B,SAAS,CAACE,MAAM,CAAC,yBAAyB,CAAC;EACzDo5B,WAAW,GAAGK,IAAI;EAClB,IAAMI,OAAO,GAAGt+B,QAAQ,CAAC2E,cAAc,CAACk5B,WAAW,CAAC;EACpDS,OAAO,CAAC/5B,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;EAClC85B,OAAO,CAAC/5B,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;EACrC,IAAM85B,SAAS,GAAGv+B,QAAQ,CAAC2E,cAAc,CAAC05B,WAAW,CAACC,OAAO,CAACz3B,EAAE,CAAC,CAAC;EAClE03B,SAAS,CAACh6B,SAAS,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACpD;AAEAxE,QAAQ,CACL2E,cAAc,CAAC,kBAAkB,CAAC,CAClCd,gBAAgB,CAAC,OAAO,EAAE26B,uBAAuB,CAAC;AAErDx+B,QAAQ,CACL2E,cAAc,CAAC,mBAAmB,CAAC,CACnCd,gBAAgB,CAAC,OAAO,EAAE26B,uBAAuB,CAAC;AAErDx+B,QAAQ,CACL2E,cAAc,CAAC,aAAa,CAAC,CAC7Bd,gBAAgB,CAAC,OAAO,EAAE+5B,wBAAwB,CAAC;AAEtD59B,QAAQ,CACL2E,cAAc,CAAC,uBAAuB,CAAC,CACvCd,gBAAgB,CAAC,OAAO,EAAEi6B,cAAc,CAAC;AAE5C99B,QAAQ,CACL2E,cAAc,CAAC,2BAA2B,CAAC,CAC3Cd,gBAAgB,CAAC,OAAO,EAAEm6B,kBAAkB,CAAC;AAEhDh+B,QAAQ,CACL2E,cAAc,CAAC,8BAA8B,CAAC,CAC9Cd,gBAAgB,CAAC,OAAO,EAAEo6B,qBAAqB,CAAC;AAEnD,IAAMI,WAAW,GAAG;EAClB,WAAW,EAAE,uBAAuB;EACpC,kBAAkB,EAAE,8BAA8B;EAClD,eAAe,EAAE;AACnB,CAAC;AAEDN,0BAA0B,CAAC,kBAAkB,CAAC;AAE9C,IAAIT,OAAO;AACX,SAASE,WAAWA,CAAA,EAAG;EACrBF,OAAO,GAAG,KAAK;AACjB;AAEA,SAASkB,uBAAuBA,CAAA,EAAG;EACjC,IAAMnB,kBAAkB,GAAGr9B,QAAQ,CAAC2E,cAAc,CAAC,qBAAqB,CAAC;EACzE,IAAI4uB,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,EAAE;IACzD8J,kBAAkB,CAAC94B,SAAS,CAACE,MAAM,CAAC,qBAAqB,CAAC;IAC1D64B,OAAO,GAAG,IAAI;IACdC,cAAc,CAAC,CAAC;IAChBhK,eAAe,GAAG,CAACA,eAAe;IAClCvqB,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;IAC5D,IAAMsK,aAAa,GAAG/2B,IAAI,CAACgB,MAAM,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IAC5D3D,UAAU,CAAC,YAAM;MACfy4B,WAAW,CAAC,CAAC;MACbvzB,iCAAmB,CAACkqB,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;MACpElqB,iCAAmB,CAAC1F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;MACjD64B,kBAAkB,CAAC94B,SAAS,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAC5DyF,iCAAmB,CAAC1F,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;IACtD,CAAC,EAAEg6B,aAAa,CAAC;EACnB,CAAC,MAAM;IACLhL,WAAW,CAAC,CAAC;IACb6J,OAAO,GAAG,IAAI;IACdC,cAAc,CAAC,CAAC;IAChBhK,eAAe,GAAG,CAACA,eAAe;IAClCtpB,iCAAmB,CAACkqB,YAAY,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;IACtEkJ,kBAAkB,CAAC94B,SAAS,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACvDO,UAAU,CAAC,YAAM;MACfy4B,WAAW,CAAC,CAAC;MACbvzB,iCAAmB,CAAC5W,KAAK,CAACq4B,OAAO,GAAG,MAAM;MAC1C1iB,uBAAS,CAACmrB,YAAY,CAAC,kBAAkB,EAAE,cAAc,CAAC;MAC1DlqB,iCAAmB,CAAC1F,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;MACpDwF,iCAAmB,CAAC1F,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IACnD,CAAC,EAAE,IAAI,CAAC;EACV;AACF;AAEA,SAAS+4B,cAAcA,CAAA,EAAG;EACxB,IAAI,CAACD,OAAO,EAAE;IACZ;EACF;EACAjzB,6BAAe,CAACoK,WAAW,GAAG,EAAE;EAChCiqB,cAAc,CAAC,CAAC,EAAE,KAAK,EAAEr0B,6BAAe,EAAE,GAAG,CAAC;EAC9C,IAAMs0B,UAAU,GAAG,IAAI;EACvB55B,UAAU,CAACw4B,cAAc,EAAEoB,UAAU,CAAC;AACxC;AAEA,SAASzI,UAAUA,CAAA,EAAG;EACpB5sB,8BAAgB,CAACmL,WAAW,GAAG,EAAE;EACjC;EACA;EACAxT,gCAAe,CAACC,GAAG,CAACsG,IAAI,CAAC,CAAC;EAC1B,IAAAnD,6BAAW,EAAC,CAAC;EACby2B,sBAAsB,CAAClY,KAAK,CAAC;AAC/B;AAEA,SAAS4Q,oBAAoBA,CAAA,EAAG;EAC9B,IAAIoL,iBAAiB;EACrB,IAAIrW,MAAM,CAACE,UAAU,GAAGF,MAAM,CAACG,WAAW,GAAG0K,WAAW,GAAGC,YAAY,EAAE;IACvEuL,iBAAiB,GAAGrW,MAAM,CAACE,UAAU,GAAG2K,WAAW;EACrD,CAAC,MAAM;IACLwL,iBAAiB,GAAGrW,MAAM,CAACG,WAAW,GAAG2K,YAAY;EACvD;EAEArqB,uBAAS,CAAC3V,KAAK,CAACs1B,KAAK,MAAA9X,MAAA,CAAMuiB,WAAW,GAAGwL,iBAAiB,OAAI;EAC9D51B,uBAAS,CAAC3V,KAAK,CAACu1B,MAAM,MAAA/X,MAAA,CAAMwiB,YAAY,GAAGuL,iBAAiB,OAAI;AAClE;AAEA,SAASC,uBAAuBA,CAAA,EAAG;EACjC,IAAIC,WAAW,GAAG9+B,QAAQ,CAAC2E,cAAc,CAAC,aAAa,CAAC;EAExD,IAAKo6B,QAAQ,CAAC,CAAC,IAAIxW,MAAM,CAACyW,WAAW,KAAK,CAAC,IAAKzW,MAAM,CAACyW,WAAW,KAAK,GAAG,EAAE;IAC1E;IACAF,WAAW,CAACzrC,KAAK,CAACq4B,OAAO,GAAG,MAAM;EACpC,CAAC,MAAM;IACL;IACAoT,WAAW,CAACzrC,KAAK,CAACq4B,OAAO,GAAG,MAAM;EACpC;AACF;AAEA,SAASqT,QAAQA,CAAA,EAAG;EAClB,OAAO,eAAe,CAACz7B,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAClD;;AAEA;AACAq7B,uBAAuB,CAAC,CAAC;;AAEzB;AACAtW,MAAM,CAAC1kB,gBAAgB,CAAC,mBAAmB,EAAEg7B,uBAAuB,CAAC;AAErE,IAAMI,UAAU,GAAG,WAAW;AAE9B,SAASnC,WAAWA,CAAC3kB,KAAK,EAAE;EAC1B,IAAIA,KAAK,GAAG8mB,UAAU,CAACv5B,MAAM,EAAE;IAC7B4D,8BAAgB,CAACmL,WAAW,IAAIwqB,UAAU,CAACzf,MAAM,CAACrH,KAAK,CAAC;IACxDpT,UAAU,CAAC;MAAA,OAAM+3B,WAAW,CAAC3kB,KAAK,GAAG,CAAC,CAAC;IAAA,GAAE,GAAG,CAAC,CAAC,CAAC;EACjD,CAAC,MAAM;IACL5O,8BAAgB,CAAChF,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;IACjD8E,8BAAgB,CAAChF,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EAChD;AACF;AAEA,SAASk6B,cAAcA,CAACvmB,KAAK,EAAE7D,IAAI,EAAExhB,IAAI,EAAE4iC,OAAO,EAAE;EAClD,IAAIvd,KAAK,GAAG7D,IAAI,CAAC5O,MAAM,EAAE;IACvB5S,IAAI,CAAC64B,SAAS,aAAA9a,MAAA,CAAayD,IAAI,CAACkL,MAAM,CAACrH,KAAK,CAAC,YAAS;IACtDpT,UAAU,CAAC,YAAM;MACf4G,KAAK,CAAC6B,IAAI,CAAC1a,IAAI,CAACosC,QAAQ,CAAC,CAAC7+B,OAAO,CAAC,UAAC8+B,IAAI,EAAEhnB,KAAK,EAAK;QACjDpT,UAAU,CAAC,YAAM;UACfo6B,IAAI,CAAC56B,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;QAC5B,CAAC,EAAE2T,KAAK,GAAG,EAAE,CAAC;MAChB,CAAC,CAAC;MACFumB,cAAc,CAACvmB,KAAK,GAAG,CAAC,EAAE7D,IAAI,EAAExhB,IAAI,EAAE4iC,OAAO,CAAC;IAChD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC,MAAM;IACL5iC,IAAI,CAACyR,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;IACrC3R,IAAI,CAACyR,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EACpC;AACF;AAEA,SAASuxB,wBAAwBA,CAAC5d,KAAK,EAAE7D,IAAI,EAAExhB,IAAI,EAAE4iC,OAAO,EAAE;EAC5D,IAAIvd,KAAK,GAAG7D,IAAI,CAAC5O,MAAM,EAAE;IACvB5S,IAAI,CAAC2hB,WAAW,IAAIH,IAAI,CAACkL,MAAM,CAACrH,KAAK,CAAC;IACtCpT,UAAU,CAAC,YAAM;MACfgxB,wBAAwB,CAAC5d,KAAK,GAAG,CAAC,EAAE7D,IAAI,EAAExhB,IAAI,EAAE4iC,OAAO,CAAC;IAC1D,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC;EACf,CAAC,MAAM;IACL5iC,IAAI,CAACyR,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;IACrC3R,IAAI,CAACyR,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;EACpC;AACF;AAEO,IAAI6D,kBAAkB,GAAA/I,OAAA,CAAA+I,kBAAA,GAAG,CAC9B;EAAEhB,IAAI,EAAE,WAAW;EAAE8I,MAAM,EAAE,EAAE;EAAE1H,MAAM,EAAE;AAAG,CAAC,EAC7C;EAAEpB,IAAI,EAAE,aAAa;EAAE8I,MAAM,EAAE,EAAE;EAAE1H,MAAM,EAAE;AAAG,CAAC,EAC/C;EAAEpB,IAAI,EAAE,WAAW;EAAE8I,MAAM,EAAE,GAAG;EAAE1H,MAAM,EAAE;AAAI,CAAC,EAC/C;EAAEpB,IAAI,EAAE,SAAS;EAAE8I,MAAM,EAAE,GAAG;EAAE1H,MAAM,EAAE;AAAI,CAAC,EAC7C;EAAEpB,IAAI,EAAE,UAAU;EAAE8I,MAAM,EAAE,GAAG;EAAE1H,MAAM,EAAE;AAAK,CAAC,CAChD;;AAED;;AAEA,SAASqkB,iBAAiBA,CAAA,EAAG;EAC3B,IAAMuE,IAAI,GAAG,CAAC;EAEd,IAAI+G,YAAY,GAAGzV,QAAQ,CAAC3Y,uBAAS,CAACyK,WAAW,EAAE,EAAE,CAAC;EACtD2jB,YAAY,IAAI/G,IAAI;EACpBrnB,uBAAS,CAACyK,WAAW,GAAG2jB,YAAY;EACpC,IAAMgH,eAAe,GAAGp/B,QAAQ,CAACsC,aAAa,CAAC,mBAAmB,CAAC;EACnE00B,eAAe,CAACoI,eAAe,CAAC;AAClC;AAEA,SAASC,uBAAuBA,CAAA,EAAG;EACjC,IAAMC,SAAS,GAAG,GAAG;EACrB,IAAMC,OAAO,GAAG,IAAI;EACpB,IAAM9H,cAAc,GAAG,IAAI,CAAC,CAAC;;EAE7B,IAAI+H,WAAW,GAAGF,SAAS;EAC3B,IAAMnG,UAAU,GAAGhE,WAAW,CAAC,YAAM;IACnC;IACAqK,WAAW,IAAI,GAAG,CAAC,CAAC;;IAEpB;IACAA,WAAW,GAAG93B,IAAI,CAACG,GAAG,CAAC23B,WAAW,EAAED,OAAO,CAAC;;IAE5C;IACAlK,eAAe,GAAGmK,WAAW;IAE7B,IAAIA,WAAW,IAAID,OAAO,EAAE;MAC1B;MACAnI,aAAa,CAAC+B,UAAU,CAAC;MACzB9D,eAAe,GAAGkK,OAAO;IAC3B;EACF,CAAC,EAAE9H,cAAc,CAAC;AACpB;AAEA,SAASgI,oBAAoBA,CAAA,EAAG;EAC9B,IAAMpnB,WAAW,GAAG3Q,IAAI,CAACgB,MAAM,CAAC,CAAC;EACjC,IAAI4P,qBAAqB,GAAG,CAAC;EAAC,IAAAhI,SAAA,GAAAjF,0BAAA,CAEThD,kBAAkB;IAAAkI,KAAA;EAAA;IAAvC,KAAAD,SAAA,CAAAtE,CAAA,MAAAuE,KAAA,GAAAD,SAAA,CAAArE,CAAA,IAAAC,IAAA,GAAyC;MAAA,IAA9BwzB,MAAM,GAAAnvB,KAAA,CAAAnd,KAAA;MACfklB,qBAAqB,IAAIonB,MAAM,CAACvvB,MAAM;MACtC,IAAIkI,WAAW,IAAIC,qBAAqB,EAAE;QACxC,OAAOonB,MAAM;MACf;IACF;;IAEA;EAAA,SAAAlzB,GAAA;IAAA8D,SAAA,CAAAnJ,CAAA,CAAAqF,GAAA;EAAA;IAAA8D,SAAA,CAAAlE,CAAA;EAAA;EACA,OAAO/D,kBAAkB,CAACA,kBAAkB,CAAC3C,MAAM,GAAG,CAAC,CAAC;AAC1D;AAEA,SAASwnB,iBAAiBA,CAAA,EAAG;EAC3B,IAAIyS,WAAW,GAAG,CAAC;EACnB,IAAIxrB,sBAAsB,GAAGtW,kBAAkB,CAAC,CAAC;EAEjD,KAAK,IAAIiO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,IAAM8zB,iBAAiB,GAAGH,oBAAoB,CAAC,CAAC;IAChDE,WAAW,IAAIC,iBAAiB,CAACn3B,MAAM,GAAG0L,sBAAsB;EAClE;EAEAO,qBAAqB,CAACirB,WAAW,CAAC;;EAElC;EACA;EACAjtB,OAAO,CAACC,GAAG,cAAA9B,MAAA,CAAc8uB,WAAW,kCAA+B,CAAC;AACtE;AAEA,SAASE,kBAAkBA,CAACzsC,KAAK,EAAE0sC,UAAU,EAAE;EAC7C,OAAO1sC,KAAK,IAAI,CAAC,GAAG0sC,UAAU,CAAC;AACjC;AAEA,SAASC,cAAcA,CAAA,EAAG;EACxB,IAAMC,mBAAmB,GAAG,GAAG,CAAC,CAAC;EACjCxjC,wBAAwB,CACtBqjC,kBAAkB,CAACtjC,wBAAwB,CAAC,CAAC,EAAEyjC,mBAAmB,CACpE,CAAC;AACH;AAIA;AACA,IAAIzrC,eAAe;AACnB,IAAIimC,eAAe,GAAG,EAAE;AAExB,SAAS/M,gBAAgBA,CAAA,EAAG;EAC1B,IAAI+M,eAAe,KAAK,EAAE,EAAE;IAC1BA,eAAe,CAACn6B,OAAO,CAAC,UAAC4/B,OAAO,EAAK;MACnCvtB,OAAO,CAACC,GAAG,IAAA9B,MAAA,CACNovB,OAAO,CAAC1yB,IAAI,eAAAsD,MAAA,CAAYovB,OAAO,CAACC,KAAK,cAAArvB,MAAA,CAAWovB,OAAO,CAAC7sC,KAAK,CAClE,CAAC;IACH,CAAC,CAAC;EACJ;EACAiJ,kBAAkB,CAAC,WAAW,CAAC;AACjC;;;ACz6CA,IAAI8jC,UAAU,GAAG,4BAA4B;AAE7C,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,MAAM;AAEpC,SAASA,MAAMA,CAACC,UAAU,EAAE;EAC1BJ,SAAS,CAAC3zB,IAAI,CAAC,IAAI,EAAE+zB,UAAU,CAAC;EAChC,IAAI,CAACC,GAAG,GAAG;IACTne,IAAI,EAAE+d,MAAM,CAACC,MAAM,CAACI,OAAO;IAC3BC,gBAAgB,EAAE,EAAE;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,SAAAA,CAAUpgB,EAAE,EAAE;MACpB,IAAI,CAACkgB,gBAAgB,CAAClvB,IAAI,CAACgP,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;IAClD,CAAC;IACDqgB,OAAO,EAAE,SAAAA,CAAUrgB,EAAE,EAAE;MACrB,IAAI,CAACmgB,iBAAiB,CAACnvB,IAAI,CAACgP,EAAE,CAAC;IACjC;EACF,CAAC;EAED4f,MAAM,CAACC,MAAM,CAACI,OAAO,GAAG,IAAI;AAC9B;AAEAL,MAAM,CAACC,MAAM,CAACC,MAAM,GAAGA,MAAM;AAC7B,IAAIQ,aAAa,EAAEC,cAAc;AAEjC,IAAItrB,MAAM,GAAG2qB,MAAM,CAACC,MAAM,CAAC5qB,MAAM;AACjC,IAAI,CAAC,CAACA,MAAM,IAAI,CAACA,MAAM,CAACurB,eAAe,KAAK,OAAOC,SAAS,KAAK,WAAW,EAAE;EAC5E,IAAIC,QAAQ,GAAG,MAA4B3M,QAAQ,CAAC2M,QAAQ;EAC5D,IAAIC,QAAQ,GAAG5M,QAAQ,CAAC4M,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI;EAC5D,IAAIC,EAAE,GAAG,IAAIH,SAAS,CAACE,QAAQ,GAAG,KAAK,GAAGD,QAAQ,GAAG,GAAG,UAAuB,GAAG,GAAG,CAAC;EACtFE,EAAE,CAACC,SAAS,GAAG,UAAS7D,KAAK,EAAE;IAC7BsD,aAAa,GAAG,CAAC,CAAC;IAClBC,cAAc,GAAG,EAAE;IAEnB,IAAI1e,IAAI,GAAGc,IAAI,CAACme,KAAK,CAAC9D,KAAK,CAACnb,IAAI,CAAC;IAEjC,IAAIA,IAAI,CAACjb,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAIm6B,OAAO,GAAG,KAAK;MACnBlf,IAAI,CAACmf,MAAM,CAACphC,OAAO,CAAC,UAASqhC,KAAK,EAAE;QAClC,IAAI,CAACA,KAAK,CAACC,KAAK,EAAE;UAChB,IAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEL,KAAK,CAAC76B,EAAE,CAAC;UAC9D,IAAI+6B,SAAS,EAAE;YACbJ,OAAO,GAAG,IAAI;UAChB;QACF;MACF,CAAC,CAAC;;MAEF;MACAA,OAAO,GAAGA,OAAO,IAAIlf,IAAI,CAACmf,MAAM,CAACO,KAAK,CAAC,UAASN,KAAK,EAAE;QACrD,OAAOA,KAAK,CAACr6B,IAAI,KAAK,KAAK,IAAIq6B,KAAK,CAACO,SAAS,CAACC,EAAE;MACnD,CAAC,CAAC;MAEF,IAAIV,OAAO,EAAE;QACX9uB,OAAO,CAACyvB,KAAK,CAAC,CAAC;QAEf7f,IAAI,CAACmf,MAAM,CAACphC,OAAO,CAAC,UAAUqhC,KAAK,EAAE;UACnCU,QAAQ,CAACN,MAAM,CAACC,aAAa,EAAEL,KAAK,CAAC;QACvC,CAAC,CAAC;QAEFV,cAAc,CAAC3gC,OAAO,CAAC,UAAUwc,CAAC,EAAE;UAClCwlB,YAAY,CAACxlB,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM,IAAI2X,QAAQ,CAAC8N,MAAM,EAAE;QAAE;QAC5B9N,QAAQ,CAAC8N,MAAM,CAAC,CAAC;MACnB;IACF;IAEA,IAAIhgB,IAAI,CAACjb,IAAI,KAAK,QAAQ,EAAE;MAC1Bg6B,EAAE,CAACkB,KAAK,CAAC,CAAC;MACVlB,EAAE,CAACmB,OAAO,GAAG,YAAY;QACvBhO,QAAQ,CAAC8N,MAAM,CAAC,CAAC;MACnB,CAAC;IACH;IAEA,IAAIhgB,IAAI,CAACjb,IAAI,KAAK,gBAAgB,EAAE;MAClCqL,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAExC8vB,kBAAkB,CAAC,CAAC;IACtB;IAEA,IAAIngB,IAAI,CAACjb,IAAI,KAAK,OAAO,EAAE;MACzBqL,OAAO,CAAC6N,KAAK,CAAC,eAAe,GAAG+B,IAAI,CAAC/B,KAAK,CAACmiB,OAAO,GAAG,IAAI,GAAGpgB,IAAI,CAAC/B,KAAK,CAACoiB,KAAK,CAAC;MAE7EF,kBAAkB,CAAC,CAAC;MAEpB,IAAIG,OAAO,GAAGC,kBAAkB,CAACvgB,IAAI,CAAC;MACtCtiB,QAAQ,CAACmjB,IAAI,CAACla,WAAW,CAAC25B,OAAO,CAAC;IACpC;EACF,CAAC;AACH;AAEA,SAASH,kBAAkBA,CAAA,EAAG;EAC5B,IAAIG,OAAO,GAAG5iC,QAAQ,CAAC2E,cAAc,CAACw7B,UAAU,CAAC;EACjD,IAAIyC,OAAO,EAAE;IACXA,OAAO,CAACn+B,MAAM,CAAC,CAAC;EAClB;AACF;AAEA,SAASo+B,kBAAkBA,CAACvgB,IAAI,EAAE;EAChC,IAAIsgB,OAAO,GAAG5iC,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC3Cy6B,OAAO,CAAC/7B,EAAE,GAAGs5B,UAAU;;EAEvB;EACA,IAAIuC,OAAO,GAAG1iC,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC3C,IAAI26B,UAAU,GAAG9iC,QAAQ,CAACmI,aAAa,CAAC,KAAK,CAAC;EAC9Cu6B,OAAO,CAACK,SAAS,GAAGzgB,IAAI,CAAC/B,KAAK,CAACmiB,OAAO;EACtCI,UAAU,CAACC,SAAS,GAAGzgB,IAAI,CAAC/B,KAAK,CAACoiB,KAAK;EAEvCC,OAAO,CAACjX,SAAS,GACf,wNAAwN,GACtN,mFAAmF,GACnF,yEAAyE,GACzE,qEAAqE,GAAG+W,OAAO,CAAC/W,SAAS,GAAG,QAAQ,GACpG,OAAO,GAAGmX,UAAU,CAACnX,SAAS,GAAG,QAAQ,GAC3C,QACD;EAED,OAAOiX,OAAO;AAEhB;AAEA,SAASI,UAAUA,CAAC1C,MAAM,EAAEz5B,EAAE,EAAE;EAC9B,IAAIo8B,OAAO,GAAG3C,MAAM,CAAC2C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,EAAE;EACX;EAEA,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,CAAC,EAAExmB,CAAC,EAAEymB,GAAG;EAEb,KAAKD,CAAC,IAAIF,OAAO,EAAE;IACjB,KAAKtmB,CAAC,IAAIsmB,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACvBC,GAAG,GAAGH,OAAO,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACxmB,CAAC,CAAC;MACtB,IAAIymB,GAAG,KAAKv8B,EAAE,IAAK8E,KAAK,CAACC,OAAO,CAACw3B,GAAG,CAAC,IAAIA,GAAG,CAACA,GAAG,CAAC19B,MAAM,GAAG,CAAC,CAAC,KAAKmB,EAAG,EAAE;QACpEq8B,OAAO,CAACzxB,IAAI,CAAC0xB,CAAC,CAAC;MACjB;IACF;EACF;EAEA,IAAI7C,MAAM,CAAC5qB,MAAM,EAAE;IACjBwtB,OAAO,GAAGA,OAAO,CAACryB,MAAM,CAACmyB,UAAU,CAAC1C,MAAM,CAAC5qB,MAAM,EAAE7O,EAAE,CAAC,CAAC;EACzD;EAEA,OAAOq8B,OAAO;AAChB;AAEA,SAASd,QAAQA,CAAC9B,MAAM,EAAEoB,KAAK,EAAE;EAC/B,IAAIuB,OAAO,GAAG3C,MAAM,CAAC2C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAIA,OAAO,CAACvB,KAAK,CAAC76B,EAAE,CAAC,IAAI,CAACy5B,MAAM,CAAC5qB,MAAM,EAAE;IACvC,IAAI+K,EAAE,GAAG,IAAI4iB,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE3B,KAAK,CAACO,SAAS,CAACC,EAAE,CAAC;IACzER,KAAK,CAACC,KAAK,GAAG,CAACsB,OAAO,CAACvB,KAAK,CAAC76B,EAAE,CAAC;IAChCo8B,OAAO,CAACvB,KAAK,CAAC76B,EAAE,CAAC,GAAG,CAAC4Z,EAAE,EAAEihB,KAAK,CAAC4B,IAAI,CAAC;EACtC,CAAC,MAAM,IAAIhD,MAAM,CAAC5qB,MAAM,EAAE;IACxB0sB,QAAQ,CAAC9B,MAAM,CAAC5qB,MAAM,EAAEgsB,KAAK,CAAC;EAChC;AACF;AAEA,SAASG,cAAcA,CAACvB,MAAM,EAAEz5B,EAAE,EAAE;EAClC,IAAIo8B,OAAO,GAAG3C,MAAM,CAAC2C,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,OAAO,CAACp8B,EAAE,CAAC,IAAIy5B,MAAM,CAAC5qB,MAAM,EAAE;IACjC,OAAOmsB,cAAc,CAACvB,MAAM,CAAC5qB,MAAM,EAAE7O,EAAE,CAAC;EAC1C;EAEA,IAAIk6B,aAAa,CAACl6B,EAAE,CAAC,EAAE;IACrB;EACF;EACAk6B,aAAa,CAACl6B,EAAE,CAAC,GAAG,IAAI;EAExB,IAAI08B,MAAM,GAAGjD,MAAM,CAACkD,KAAK,CAAC38B,EAAE,CAAC;EAE7Bm6B,cAAc,CAACvvB,IAAI,CAAC,CAAC6uB,MAAM,EAAEz5B,EAAE,CAAC,CAAC;EAEjC,IAAI08B,MAAM,IAAIA,MAAM,CAAC9C,GAAG,IAAI8C,MAAM,CAAC9C,GAAG,CAACE,gBAAgB,CAACj7B,MAAM,EAAE;IAC9D,OAAO,IAAI;EACb;EAEA,OAAOs9B,UAAU,CAAClB,MAAM,CAACC,aAAa,EAAEl7B,EAAE,CAAC,CAAC2wB,IAAI,CAAC,UAAU3wB,EAAE,EAAE;IAC7D,OAAOg7B,cAAc,CAACC,MAAM,CAACC,aAAa,EAAEl7B,EAAE,CAAC;EACjD,CAAC,CAAC;AACJ;AAEA,SAASw7B,YAAYA,CAAC/B,MAAM,EAAEz5B,EAAE,EAAE;EAChC,IAAI08B,MAAM,GAAGjD,MAAM,CAACkD,KAAK,CAAC38B,EAAE,CAAC;EAC7By5B,MAAM,CAACI,OAAO,GAAG,CAAC,CAAC;EACnB,IAAI6C,MAAM,EAAE;IACVA,MAAM,CAAC9C,GAAG,CAACne,IAAI,GAAGge,MAAM,CAACI,OAAO;EAClC;EAEA,IAAI6C,MAAM,IAAIA,MAAM,CAAC9C,GAAG,IAAI8C,MAAM,CAAC9C,GAAG,CAACG,iBAAiB,CAACl7B,MAAM,EAAE;IAC/D69B,MAAM,CAAC9C,GAAG,CAACG,iBAAiB,CAACvgC,OAAO,CAAC,UAAUojC,EAAE,EAAE;MACjDA,EAAE,CAACnD,MAAM,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM,CAACkD,KAAK,CAAC38B,EAAE,CAAC;EACvBy5B,MAAM,CAACz5B,EAAE,CAAC;EAEV08B,MAAM,GAAGjD,MAAM,CAACkD,KAAK,CAAC38B,EAAE,CAAC;EACzB,IAAI08B,MAAM,IAAIA,MAAM,CAAC9C,GAAG,IAAI8C,MAAM,CAAC9C,GAAG,CAACE,gBAAgB,CAACj7B,MAAM,EAAE;IAC9D69B,MAAM,CAAC9C,GAAG,CAACE,gBAAgB,CAACtgC,OAAO,CAAC,UAAUojC,EAAE,EAAE;MAChDA,EAAE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF","file":"game-manager.e0ee197a.js","sourceRoot":"../../src/public","sourcesContent":["export function getCustomProperty(elem, prop) {\n  return parseFloat(getComputedStyle(elem).getPropertyValue(prop)) || 0;\n}\n\nexport function setCustomProperty(elem, prop, value) {\n  elem.style.setProperty(prop, value);\n}\n\nexport function incrementCustomProperty(elem, prop, inc) {\n  setCustomProperty(elem, prop, getCustomProperty(elem, prop) + inc);\n}\n","// state.js\nconst StateSingleton = (function () {\n  //default state\n  let state = {\n    multiplierRatio: 1,\n    timerInterval: 3,\n    phaseTimerInterval: 10,\n    multiplierTimer: 5000,\n    currentPhase: 1,\n    speedScale: 0.9,\n    speedScaleIncrease: 0.000015,\n    jumpCountLimit: 1,\n\n    obstaclePoints: 5,\n    lastPhase: 0,\n    gravityFallAdjustment: 0.021,\n    selectedStarter: null,\n\n    //elements\n    isCoinsRunning: true,\n    isPlatformRunning: false,\n    isCactusRunning: false,\n    isBirdRunning: true,\n    isGroundEnemyRunning: true,\n    isCrateRunning: true,\n\n    //world\n    isGroundRunning: true,\n    isGroundLayer2Running: true,\n    isGroundLayer3Running: true,\n    groundSpeed: 0.04,\n    groundEnemySpeedFactor: 0.05,\n    isFlagCreated: true,\n    platformSpeed: 0.035,\n\n    //items\n    platformCoinIntervalMax: 2000,\n    platformCoinIntervalMin: 1000,\n    groundCoinIntervalMin: 50,\n    groundCoinIntervalMax: 1000,\n    cactusIntervalMin: 900,\n    cactusIntervalMax: 1400,\n    isMultiplierRunning: false,\n    isMagnetRunning: false,\n    isStarRunning: false,\n    starDuration: 10000,\n    playerImmunity: false,\n    hasStar: false,\n    hasLeaf: false,\n    leafDuration: 10000,\n    isMagnetItem: false,\n    isStarColliding: true,\n    isMagnetColliding: true,\n    isLeafColliding: true,\n    isHeartColliding: true,\n    groundSpawnReady: true,\n    nextGroundSpawnType: '',\n  };\n\n  return {\n    getGroundSpawnReady: function () {\n      return state.groundSpawnReady;\n    },\n    setGroundSpawnReady: function (newGroundSpawnReady) {\n      state.groundSpawnReady = newGroundSpawnReady;\n    },\n    getCactusIntervalMin: function () {\n      return state.cactusIntervalMin;\n    },\n    setCactusIntervalMin: function (newCactusIntervalMin) {\n      state.cactusIntervalMin = newCactusIntervalMin;\n    },\n    getCactusIntervalMax: function () {\n      return state.cactusIntervalMax;\n    },\n    setCactusIntervalMax: function (newCactusIntervalMax) {\n      state.cactusIntervalMax = newCactusIntervalMax;\n    },\n    getNextGroundSpawnType: function () {\n      return state.nextGroundSpawnType;\n    },\n    setNextGroundSpawnType: function (newNextGroundSpawnType) {\n      state.nextGroundSpawnType = newNextGroundSpawnType;\n    },\n    getPlatformCoinIntervalMin: function () {\n      return state.platformCoinIntervalMin;\n    },\n    setPlatformCoinIntervalMax: function (newPlatformCoinIntervalMax) {\n      state.platformCoinIntervalMax = newPlatformCoinIntervalMax;\n    },\n    getGroundCoinMinInterval: function () {\n      return state.groundCoinIntervalMin;\n    },\n    setGroundCoinMinInterval: function (newGroundCoinMinInterval) {\n      state.groundCoinIntervalMin = newGroundCoinMinInterval;\n    },\n    getGroundCoinMaxInterval: function () {\n      return state.groundCoinIntervalMax;\n    },\n    setGroundCoinMaxInterval: function (newGroundCoinMaxInterval) {\n      state.groundCoinIntervalMax = newGroundCoinMaxInterval;\n    },\n    getIsHeartColliding: function () {\n      return state.isHeartColliding;\n    },\n    setIsHeartColliding: function (newIsHeartColliding) {\n      state.isHeartColliding = newIsHeartColliding;\n    },\n    getIsLeafColliding: function () {\n      return state.isLeafColliding;\n    },\n    setIsLeafColliding: function (newIsLeafColliding) {\n      state.isLeafColliding = newIsLeafColliding;\n    },\n    getIsStarColliding: function () {\n      return state.isStarColliding;\n    },\n    setIsStarColliding: function (newIsStarColliding) {\n      state.isStarColliding = newIsStarColliding;\n    },\n    getIsMagnetColliding: function () {\n      return state.isMagnetColliding;\n    },\n    setIsMagnetColliding: function (newIsMagnetColliding) {\n      state.isMagnetColliding = newIsMagnetColliding;\n    },\n    getIsCrateRunning: function () {\n      return state.isCrateRunning;\n    },\n    setIsCrateRunning: function (newIsCrateRunning) {\n      state.isCrateRunning = newIsCrateRunning;\n    },\n    getIsGroundEnemyRunning: function () {\n      return state.isGroundEnemyRunning;\n    },\n    setIsGroundEnemyRunning: function (newIsGroundEnemyRunning) {\n      state.isGroundEnemyRunning = newIsGroundEnemyRunning;\n    },\n    getLeafDuration: function () {\n      return state.leafDuration;\n    },\n    setLeafDuration: function (newLeafDuration) {\n      state.leafDuration = newLeafDuration;\n    },\n    getHasLeaf: function () {\n      return state.hasLeaf;\n    },\n    setHasLeaf: function (newHasLeaf) {\n      state.hasLeaf = newHasLeaf;\n    },\n    getJumpCountLimit: function () {\n      return state.jumpCountLimit;\n    },\n    setJumpCountLimit: function (newJumpCountLimit) {\n      state.jumpCountLimit = newJumpCountLimit;\n    },\n    getPlatformSpeed: function () {\n      return state.platformSpeed;\n    },\n    setPlatformSpeed: function (newPlatformSpeed) {\n      state.platformSpeed = newPlatformSpeed;\n    },\n    getIsFlagCreated: function () {\n      return state.isFlagCreated;\n    },\n    setIsFlagCreated: function (newIsFlagCreated) {\n      state.isFlagCreated = newIsFlagCreated;\n    },\n    getGroundSpeed: function () {\n      return state.groundSpeed;\n    },\n    setGroundSpeed: function (newGroundSpeed) {\n      state.groundSpeed = newGroundSpeed;\n    },\n    getGroundEnemySpeedFactor: function () {\n      return state.groundEnemySpeedFactor;\n    },\n    setGroundEnemySpeedFactor: function (newGroundEnemySpeedFactor) {\n      state.groundEnemySpeedFactor = newGroundEnemySpeedFactor;\n    },\n    getIsMultiplierRunning: function () {\n      return state.isMultiplierRunning;\n    },\n    setIsMultiplierRunning: function (newIsMultiplierRunning) {\n      state.isMultiplierRunning = newIsMultiplierRunning;\n    },\n    getIsMagnetRunning: function () {\n      return state.isMagnetRunning;\n    },\n    setIsMagnetRunning: function (newIsMagnetRunning) {\n      state.isMagnetRunning = newIsMagnetRunning;\n    },\n    getIsStarRunning: function () {\n      return state.isStarRunning;\n    },\n    setIsStarRunning: function (newIsStarRunning) {\n      state.isStarRunning = newIsStarRunning;\n    },\n    getIsGroundRunning: function () {\n      return state.isGroundRunning;\n    },\n    setIsGroundRunning: function (newIsGroundRunning) {\n      state.isGroundRunning = newIsGroundRunning;\n    },\n    getIsGroundLayer2Running: function () {\n      return state.isGroundLayer2Running;\n    },\n    setIsGroundLayer2Running: function (newIsGroundLayer2Running) {\n      state.isGroundLayer2Running = newIsGroundLayer2Running;\n    },\n    getIsGroundLayer3Running: function () {\n      return state.isGroundLayer3Running;\n    },\n    setIsGroundLayer3Running: function (newIsGroundLayer3Running) {\n      state.isGroundLayer3Running = newIsGroundLayer3Running;\n    },\n    getIsPlatformRunning: function () {\n      return state.isPlatformRunning;\n    },\n    setIsPlatformRunning: function (newIsPlatformRunning) {\n      state.isPlatformRunning = newIsPlatformRunning;\n    },\n    getIsCactusRunning: function () {\n      return state.isCactusRunning;\n    },\n    setIsCactusRunning: function (newIsCactusRunning) {\n      state.isCactusRunning = newIsCactusRunning;\n    },\n    getIsBirdRunning: function () {\n      return state.isBirdRunning;\n    },\n    setIsBirdRunning: function (newIsBirdRunning) {\n      state.isBirdRunning = newIsBirdRunning;\n    },\n    getIsCoinsRunning: function () {\n      return state.isCoinsRunning;\n    },\n    setIsCoinsRunning: function (newIsCoinsRunning) {\n      state.isCoinsRunning = newIsCoinsRunning;\n    },\n    getSelectedStarter: function () {\n      return state.selectedStarter;\n    },\n    setSelectedStarter: function (newSelectedStarter) {\n      state.selectedStarter = newSelectedStarter;\n    },\n    getGravityFallAdjustment: function () {\n      return state.gravityFallAdjustment;\n    },\n    setGravityFallAdjustment: function (newGravityFallAdjustment) {\n      state.gravityFallAdjustment = newGravityFallAdjustment;\n    },\n    getLastPhase: function () {\n      return state.lastPhase;\n    },\n    setLastPhase: function (newLastPhase) {\n      state.lastPhase = newLastPhase;\n    },\n    getIsMagnetItem: function () {\n      return state.isMagnetItem;\n    },\n    setIsMagnetItem: function (newBoolean) {\n      state.isMagnetItem = newBoolean;\n    },\n    getObstaclePoints: function () {\n      return state.obstaclePoints;\n    },\n    setObstaclePoints: function (newPoints) {\n      state.obstaclePoints = newPoints;\n    },\n    getObstaclePoints: function () {\n      return state.obstaclePoints;\n    },\n    setObstaclePoints: function (newPoints) {\n      state.obstaclePoints = newPoints;\n    },\n    getStarDuration: function () {\n      return state.starDuration;\n    },\n    setStarDuration: function (newDuration) {\n      state.starDuration = newDuration;\n    },\n    getHasStar: function () {\n      return state.hasStar;\n    },\n    setHasStar: function (newHasStar) {\n      state.hasStar = newHasStar;\n    },\n    getPlayerImmunity: function () {\n      return state.playerImmunity;\n    },\n    setPlayerImmunity: function (newImmunity) {\n      state.playerImmunity = newImmunity;\n    },\n    getMultiplierRatio: function () {\n      return state.multiplierRatio;\n    },\n    setMultiplierRatio: function (newRatio) {\n      state.multiplierRatio = newRatio;\n    },\n    getTimerInterval: function () {\n      return state.timerInterval;\n    },\n    setTimerInterval: function (newInterval) {\n      state.timerInterval = newInterval;\n    },\n    getPhaseTimerInterval: function () {\n      return state.phaseTimerInterval;\n    },\n    setPhaseTimerInterval: function (newInterval) {\n      state.phaseTimerInterval = newInterval;\n    },\n    getMultiplierTimer: function () {\n      return state.multiplierTimer;\n    },\n    setMultiplierTimer: function (newTimer) {\n      state.multiplierTimer = newTimer;\n    },\n    getCurrentPhase: function () {\n      return state.currentPhase;\n    },\n    setCurrentPhase: function (newPhase) {\n      state.currentPhase = newPhase;\n    },\n    getSpeedScale: function () {\n      return state.speedScale;\n    },\n    setSpeedScale: function (newSpeedScale) {\n      state.speedScale = newSpeedScale;\n    },\n    getSpeedScaleIncrease: function () {\n      return state.speedScaleIncrease;\n    },\n    setSpeedScaleIncrease: function (newSpeedScaleIncrease) {\n      state.speedScaleIncrease = newSpeedScaleIncrease;\n    },\n    updateState: function (newValues) {\n      Object.assign(state, newValues);\n    },\n  };\n})();\n\nexport default StateSingleton;\n\n// // To get the current phase\n// const currentPhase = StateSingleton.getCurrentPhase();\n\n// // To set a new phase\n// StateSingleton.setCurrentPhase(2);\n\n// // To update other properties in the state object\n// StateSingleton.updateState({ someProperty: 'new value' });\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport StateSingleton from '../game-state.js';\nconst { getGroundSpeed } = StateSingleton;\nconst SPEED = getGroundSpeed();\nconst groundElems = document.querySelectorAll('[data-ground]');\n\nexport function setupGround() {\n  setCustomProperty(groundElems[0], '--left', 0);\n  setCustomProperty(groundElems[1], '--left', 250);\n}\n\nexport function updateGround(delta, speedScale) {\n  groundElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -250) {\n      incrementCustomProperty(ground, '--left', 500);\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport StateSingleton from '../game-state.js';\nconst { getIsGroundLayer2Running } = StateSingleton;\nconst SPEED = 0.02;\nconst groundLayerTwoElems = document.querySelectorAll(\n  '[data-ground-layer-two]'\n);\n\nexport function setupGroundLayerTwo() {\n  setCustomProperty(groundLayerTwoElems[0], '--left', 0);\n  setCustomProperty(groundLayerTwoElems[1], '--left', 220);\n}\n\nexport function updateGroundLayerTwo(delta, speedScale) {\n  groundLayerTwoElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -220) {\n      if (!getIsGroundLayer2Running()) {\n        incrementCustomProperty(ground, '--left', 439);\n      } else {\n        incrementCustomProperty(ground, '--left', 439);\n      }\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport StateSingleton from '../game-state.js';\nconst { getIsGroundLayer2Running } = StateSingleton;\nconst SPEED = 0.017;\nconst groundLayerTwoElems = document.querySelectorAll(\n  '[data-ground-layer-two-two]'\n);\n\nexport function setupGroundLayerTwoTwo() {\n  setCustomProperty(groundLayerTwoElems[0], '--left', 0);\n  setCustomProperty(groundLayerTwoElems[1], '--left', 220);\n}\n\nexport function updateGroundLayerTwoTwo(delta, speedScale) {\n  groundLayerTwoElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -220) {\n      if (!getIsGroundLayer2Running()) {\n        incrementCustomProperty(ground, '--left', 400);\n      } else {\n        incrementCustomProperty(ground, '--left', 520);\n        ground.style.zIndex = '-1';\n      }\n    }\n  });\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\n\nconst SPEED = 0.007;\nconst groundLayerThreeElems = document.querySelectorAll(\n  '[data-ground-layer-three]'\n);\n\nexport function setupGroundLayerThree() {\n  setCustomProperty(groundLayerThreeElems[0], '--left', 0);\n  setCustomProperty(groundLayerThreeElems[1], '--left', 200);\n}\n\nexport function updateGroundLayerThree(delta, speedScale) {\n  groundLayerThreeElems.forEach((ground) => {\n    incrementCustomProperty(ground, '--left', delta * speedScale * SPEED * -1);\n\n    if (getCustomProperty(ground, '--left') <= -200) {\n      incrementCustomProperty(ground, '--left', 400);\n    }\n  });\n}\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import { Howl, Howler } from 'howler';\nexport const soundController = {\n  die: new Howl({\n    src: ['sounds/die.wav'],\n    volume: 0,\n  }),\n  jump: new Howl({\n    src: ['sounds/jump.wav'],\n    volume: 0,\n  }),\n  beatScore: new Howl({\n    src: ['sounds/beatScore.wav'],\n    volume: 0,\n  }),\n  pickupCoin: new Howl({\n    src: ['sounds/pickupCoin.wav'],\n    volume: 0,\n  }),\n  takeDamage: new Howl({\n    src: ['sounds/takeDamage.wav'],\n    volume: 0,\n  }),\n};\n","import {\n  incrementCustomProperty,\n  setCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport lionJumpImg1 from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionJumpImg2 from '../public/imgs/nittany-lion/jump-animation/Jump-2.png';\nimport lionLoseImg from '../public/imgs/nittany-lion/jump-animation/Jump-1.png';\nimport lionRunImg1 from '../public/imgs/nittany-lion/run-cycle/Run-1.png';\nimport lionRunImg2 from '../public/imgs/nittany-lion/run-cycle/Run-2.png';\nimport lionRunImg3 from '../public/imgs/nittany-lion/run-cycle/Run-3.png';\nimport lionRunImg4 from '../public/imgs/nittany-lion/run-cycle/Run-4.png';\nimport lionIdleImg1 from '../public/imgs/nittany-lion/rest-animation/Rest-1.png';\nimport lionIdleImg2 from '../public/imgs/nittany-lion/rest-animation/Rest-2.png';\nimport lionIdleImg3 from '../public/imgs/nittany-lion/rest-animation/Rest-3.png';\nimport { soundController } from '../utility/sound-controller.js';\nimport { collectableOptions } from '../game-manager.js';\nimport StateSingleton from '../game-state.js';\nconst { getHasLeaf, getJumpCountLimit, getGravityFallAdjustment } =\n  StateSingleton;\nconst dinoElem = document.querySelector('[data-dino]');\nconst dinoImg = document.querySelector('.dino-img');\nconst JUMP_SPEED = 0.245;\nconst DOUBLE_JUMP_SPEED = 0.23; // Adjust this as needed\nconst GRAVITY = 0.0009;\nconst DINO_FRAME_COUNT = 4;\nconst FRAME_TIME = 85;\nconst BOTTOM_ANCHOR = 19.5;\n\nlet isJumping;\nlet canDoubleJump;\nlet jumpCount;\nlet dinoFrame;\nlet currentFrameTime;\nlet yVelocity;\nlet jumpAnimationInProgress;\nlet newSelectedStarter;\nfunction isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nexport function setupDino() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n  canDoubleJump = true;\n  jumpCount = 0;\n  dinoFrame = 0;\n  currentFrameTime = 0;\n  yVelocity = 0;\n  setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n\n  // Function to check if the device is a mobile device\n  if (isMobileDevice()) {\n    document.removeEventListener('touchstart', onJump);\n    document.removeEventListener('touchend', onJumpEnd);\n    document.addEventListener('touchstart', onJump);\n    document.addEventListener('touchend', onJumpEnd);\n    document.addEventListener('touchstart', onDive);\n  } else {\n    document.removeEventListener('keydown', onJump);\n    document.removeEventListener('keyup', onJumpEnd);\n    document.addEventListener('keyup', onJumpEnd);\n    document.addEventListener('keydown', onJump);\n    document.addEventListener('keydown', onDive);\n  }\n}\n\nexport function updateDino(\n  delta,\n  speedScale,\n  gravityFallAdjustment,\n  selectedStarter\n) {\n  if (!newSelectedStarter) {\n    newSelectedStarter = selectedStarter;\n  }\n  handleRun(delta, speedScale, newSelectedStarter);\n  handleJump(delta, gravityFallAdjustment);\n  handleDive(delta);\n}\n\nexport function getDinoRect() {\n  return dinoElem.getBoundingClientRect();\n}\n\nexport function setDinoLose() {\n  dinoImg.src = lionLoseImg;\n  dinoImg.classList.add('leap');\n  dinoImg.classList.remove('flash-animation');\n  const spotlight = document.getElementById('spotlight');\n  spotlight.classList.add('close-spotlight');\n}\n\nfunction startJump(selectedStarter) {\n  if (!jumpAnimationInProgress) {\n    jumpAnimationInProgress = true;\n    dinoImg.src = lionJumpImg1;\n    if (selectedStarter === 'Coins') {\n      createCoinAboveDino();\n    }\n\n    setTimeout(function () {\n      dinoImg.src = lionJumpImg2;\n    }, 200); // Adjust the delay as needed\n  }\n}\n\nfunction endJump() {\n  isJumping = false;\n  jumpAnimationInProgress = false;\n  isFalling = false;\n}\n\nlet dropOffPlatform = false;\nlet currentIdleImageIndex = 0;\n\nconst imagePaths = [\n  lionIdleImg1,\n  lionIdleImg2,\n  lionIdleImg1,\n  lionIdleImg2,\n  lionIdleImg1,\n  lionIdleImg2,\n  lionIdleImg3,\n  // Add more image paths as needed\n];\n\nexport function handleIdle() {\n  dinoImg.src = imagePaths[currentIdleImageIndex];\n  currentIdleImageIndex = (currentIdleImageIndex + 1) % imagePaths.length; // Loop back to the first image when reaching the end\n  // Call the updateImage function at a specific interval (e.g., every 200 milliseconds)\n}\n\nfunction handleRun(delta, speedScale, selectedStarter) {\n  if (isJumping) {\n    startJump(selectedStarter);\n    return;\n  }\n\n  // Check if there is a collision and a current platform ID is set\n  if (collisionDetected && currentPlatformId) {\n    const currentPlatform = document.getElementById(currentPlatformId);\n    const currentPlatformRect = currentPlatform.getBoundingClientRect();\n    const dinoRect = getDinoRect();\n    canDoubleJump = true;\n    jumpCount = 0;\n    // Check if the dino has reached the end of the current platform\n    if (dinoRect.left >= currentPlatformRect.right) {\n      dropOffPlatform = true;\n      const currentBottom = getCustomProperty(dinoElem, '--bottom');\n      yVelocity -= GRAVITY * delta - getGravityFallAdjustment() / 6; // Increase or decrease gravityAdjustment as needed\n      incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n      if (currentBottom <= BOTTOM_ANCHOR) {\n        setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n        canDoubleJump = true;\n        jumpCount = 0;\n      }\n      // Dino reached the end of the current platform, end the jump\n      canDoubleJump = true;\n      jumpCount = 0;\n\n      // Reset the current platform ID\n      currentPlatformId = null;\n      collisionDetected = false;\n    }\n  }\n  if (dropOffPlatform === true) {\n    const currentBottom = getCustomProperty(dinoElem, '--bottom');\n    yVelocity -= GRAVITY * delta - getGravityFallAdjustment() / 6; // Increase or decrease gravityAdjustment as needed\n    incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n    if (currentBottom <= BOTTOM_ANCHOR) {\n      setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n      endJump();\n      canDoubleJump = true;\n      jumpCount = 0;\n      dropOffPlatform = false;\n    }\n  }\n  if (currentFrameTime >= FRAME_TIME) {\n    dinoFrame = (dinoFrame + 1) % DINO_FRAME_COUNT;\n\n    // Use a switch statement to set the image source based on the current frame\n    switch (dinoFrame) {\n      case 0:\n        dinoImg.src = lionRunImg1;\n        break;\n      case 1:\n        dinoImg.src = lionRunImg2;\n        break;\n      case 2:\n        dinoImg.src = lionRunImg3;\n        break;\n      case 3:\n        dinoImg.src = lionRunImg4;\n        break;\n      // Add more cases if you have more frames\n    }\n\n    currentFrameTime -= FRAME_TIME;\n  }\n  currentFrameTime += delta * speedScale;\n}\n\nfunction isCollidingWithPlatforms() {\n  // Check for collision with the top surface of platforms\n  const dinoRect = getDinoRect();\n  const platforms = document.querySelectorAll('[data-platform]');\n  platforms.forEach((platform) => {\n    const platformRect = platform.getBoundingClientRect();\n    if (\n      dinoRect.bottom >= platformRect.top &&\n      dinoRect.bottom <= platformRect.bottom &&\n      dinoRect.right > platformRect.left &&\n      dinoRect.left < platformRect.right\n    ) {\n      endJump();\n\n      // Collision with the top surface of a platform\n      dinoElem.style.bottom = platformRect.top;\n      collisionDetected = true;\n\n      currentPlatformId = platform.id;\n    }\n  });\n}\n\nlet jumpStartTime;\nlet maxJumpTime = 90; // Maximum duration for the jump in milliseconds\nlet minJumpTime = 70; // Minimum jump time in milliseconds\nlet currentPlatformId; // Variable to store the ID of the current platform\nlet collisionDetected = false;\nlet isFalling = false;\nfunction handleJump(delta, gravityFallAdjustment = 0.01) {\n  if (!isJumping) return;\n\n  // Adjusting fall speed when jumping on the way down\n  if (yVelocity <= 0) {\n    isFalling = true;\n    // Set interval to adjust fall speed every 5 seconds (adjust the interval as needed)\n    yVelocity -= getHasLeaf()\n      ? GRAVITY * delta - gravityFallAdjustment / 4\n      : GRAVITY * delta + gravityFallAdjustment; // Increase or decrease gravityAdjustment as needed\n  } else {\n    yVelocity -= GRAVITY * delta;\n  }\n\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  const currentBottom = getCustomProperty(dinoElem, '--bottom');\n\n  if (isFalling) {\n    // Check for collision with the top surface of platforms\n    isCollidingWithPlatforms();\n  }\n\n  // Check for collision with the ground or platforms\n  if (currentBottom <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    canDoubleJump = true;\n    jumpCount = 0;\n    endJump();\n  }\n\n  if (jumpCount === 1 && canDoubleJump) {\n    yVelocity = DOUBLE_JUMP_SPEED;\n    canDoubleJump = false;\n  }\n}\n\n//handles jump key press event\nfunction onJump(e) {\n  if (\n    (e.code !== 'Space' && e.type !== 'touchstart') ||\n    (isJumping && jumpCount >= getJumpCountLimit())\n  )\n    return;\n  endJump();\n  startJump(newSelectedStarter);\n\n  // Record the timestamp when the jump key is pressed\n  jumpStartTime = Date.now();\n  soundController.jump.play();\n  isJumping = true;\n  yVelocity = JUMP_SPEED;\n  jumpCount++;\n}\n\n//handles jump key release event\nfunction onJumpEnd(e) {\n  if ((e.code !== 'Space' && e.type !== 'touchend') || isFalling) return;\n\n  // Calculate the time the jump key has been held down\n  let jumpTime = Date.now() - jumpStartTime;\n\n  // Ensure jumpTime is not lower than minJumpTime\n  jumpTime = Math.max(jumpTime, minJumpTime);\n\n  if (maxJumpTime >= jumpTime + 5) {\n    // Calculate jump strength based on jump time\n    let jumpStrength = Math.min(jumpTime / maxJumpTime, 1); // Normalize between 0 and 1\n    jumpStrength = Math.pow(jumpStrength, 2); // Apply a power function for smoother acceleration\n\n    // Calculate jump velocity\n    const jumpVelocity = JUMP_SPEED * jumpStrength;\n\n    // Set the yVelocity to the calculated jump velocity\n    yVelocity = jumpVelocity;\n  }\n}\n\nconst DIVE_SPEED = 0.2; // Adjust the dive speed as needed\nlet isDiving = false;\n\nfunction handleDive(delta) {\n  if (!isDiving) return;\n  incrementCustomProperty(dinoElem, '--bottom', yVelocity * delta);\n\n  if (getCustomProperty(dinoElem, '--bottom') <= BOTTOM_ANCHOR) {\n    setCustomProperty(dinoElem, '--bottom', BOTTOM_ANCHOR);\n    isDiving = false;\n    jumpCount = 0;\n  }\n  yVelocity -= GRAVITY * delta;\n}\n\nfunction onDive(e) {\n  if ((e.code !== 'ArrowDown' && e.type !== 'touchstart') || isDiving) return;\n\n  yVelocity = -DIVE_SPEED; // Negative value for diving down\n  isDiving = true;\n\n  // Add any additional logic you need for the dive action\n\n  // Optional: You might want to reset isJumping and jumpCount here if needed\n  isJumping = false;\n  jumpCount = 0;\n}\n\nfunction createCoinAboveDino() {\n  const coinElement = document.createElement('div');\n\n  let selectedCollectable = collectableOptions[0];\n\n  coinElement.dataset.coin = true;\n  coinElement.dataset.type = selectedCollectable.type;\n  coinElement.dataset.locked = 'false';\n  coinElement.dataset.points = selectedCollectable.points;\n  coinElement.classList.add('pop-up-gold-coin', 'collectable');\n  coinElement.id = Math.random().toString(16).slice(2);\n\n  // Set the initial position of the coin above the dino\n  coinElement.style.position = 'absolute';\n  coinElement.style.top = dinoElem.offsetTop - 50 + 'px'; // Adjust the vertical position as needed\n  coinElement.style.left = dinoElem.offsetLeft + 50 + 'px'; // Center above the dino\n  // Append the coin element to the document body or another container\n  const worldElem = document.querySelector('[data-world]');\n  worldElem.appendChild(coinElement);\n}\n","// sharedElements.js\nconst worldElem = document.querySelector('[data-world]');\nconst scoreElem = document.querySelector('[data-score]');\nconst highScoreElem = document.querySelector('[data-high-score]');\nconst startScreenElem = document.querySelector('[data-start-screen]');\nconst endScreenElem = document.querySelector('[data-game-over-screen]');\nconst gameOverTextElem = document.querySelector('[data-game-over-text]');\nconst gameOverIconElem = document.getElementById('game-over-icon');\nconst leaderboardElem = document.querySelector('[data-leaderboard-body]');\nconst scoreMultiplierElem = document.querySelector('[data-score-multiplier]');\nconst scoreNewHighScoreElem = document.querySelector(\n  '[data-score-new-high-score]'\n);\nconst scoreErrorMessageElem = document.querySelector(\n  '[data-score-error-message]'\n);\nconst multiplierTimerElem = document.querySelector('[data-multiplier-timer]');\nconst tickerElem = document.querySelector('[data-ticker]');\nconst tickerElem2 = document.querySelector('[data-ticker2]');\nconst tickerElem3 = document.querySelector('[data-ticker3]');\nconst livesElem = document.querySelector('[data-lives]');\nconst dinoElem = document.querySelector('[data-dino]');\nconst scrollableTableElem = document.querySelector('[data-scrollable-table]');\nconst currentMultiplierElem = document.querySelector(\n  '[data-current-multiplier]'\n);\nconst plusPointsElem = document.querySelector('[data-plus-points]');\nconst tickerContainerElem = document.querySelector('[data-ticker-container]');\nconst loadingTextElem = document.querySelector('[data-loading-text]');\nconst submitNewScoreFormElem = document.querySelector(\n  '[data-submit-new-score-form]'\n);\nconst interfaceComboContainer = document.getElementById(\n  'interface-combo-container'\n);\nconst currentMultiplierScoreElem = document.querySelector(\n  '[data-current-multiplier-score]'\n);\nconst currentComboScoreContainer = document.getElementById(\n  'current-combo-score-container'\n);\nconst timerProgress = document.getElementById('timerProgress');\nconst currentGameTimerElem = document.querySelector(\n  '[data-current-game-timer]'\n);\n\nconst gameLoadingScreenElem = document.querySelector(\n  '[data-game-loading-screen]'\n);\n\nconst gameLoadingTextElem = document.querySelector('[data-game-loading-text]');\nconst bonusElem = document.querySelector('[data-bonus]');\nconst gameNotificationElem = document.querySelector(\n  '[data-notification-screen]'\n);\nconst pausedScreenElem = document.querySelector('[data-paused-screen]');\nexport {\n  bonusElem,\n  pausedScreenElem,\n  gameNotificationElem,\n  gameLoadingTextElem,\n  gameLoadingScreenElem,\n  currentGameTimerElem,\n  timerProgress,\n  worldElem,\n  scoreElem,\n  highScoreElem,\n  startScreenElem,\n  endScreenElem,\n  gameOverTextElem,\n  gameOverIconElem,\n  leaderboardElem,\n  scoreMultiplierElem,\n  scoreNewHighScoreElem,\n  scoreErrorMessageElem,\n  multiplierTimerElem,\n  tickerElem,\n  tickerElem2,\n  tickerElem3,\n  livesElem,\n  dinoElem,\n  scrollableTableElem,\n  currentMultiplierElem,\n  plusPointsElem,\n  tickerContainerElem,\n  loadingTextElem,\n  submitNewScoreFormElem,\n  interfaceComboContainer,\n  currentMultiplierScoreElem,\n  currentComboScoreContainer,\n};\n","function toggleElemOn(elem) {\n  const classList = elem.classList;\n  classList.remove('hide-element');\n  classList.add('show-element');\n}\nfunction toggleElemOff(elem) {\n  const classList = elem.classList;\n  classList.add('hide-element');\n  classList.remove('show-element');\n}\n\nexport { toggleElemOff, toggleElemOn };\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport { getDinoRect } from './player-controller';\nimport { collectableOptions } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport { addToSpawnQueue } from './groundQue';\nconst {\n  getMagnetSpeedFactor,\n  getIsCoinsRunning,\n  getGroundSpeed,\n  getPlatformSpeed,\n  getGroundCoinMaxInterval,\n  getGroundCoinMinInterval,\n} = StateSingleton;\n\nconst SPEED = getGroundSpeed();\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCoinTime;\nlet isCoinSpawned = true;\n\nexport function setupCoin() {\n  nextCoinTime = getGroundCoinMinInterval();\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    coin.remove();\n  });\n}\n\nexport function moveItemToPlayer(\n  dinoRect,\n  item,\n  itemRect,\n  distance,\n  delta,\n  extraFactor = 0\n) {\n  // Enter the locking phase\n  if (item.dataset.isLocking === 'false') {\n    const angle = Math.atan2(dinoRect.y - itemRect.y, dinoRect.x - itemRect.x);\n    let distanceFactor = 0.0005 * distance;\n\n    const speed = SPEED * delta * distanceFactor;\n    // Additional logic to move the coin in the opposite direction before locking\n    const oppositeDirectionX = Math.cos(angle) * speed * -1 * 2;\n    const oppositeDirectionY = Math.sin(angle) * speed * 2;\n\n    incrementCustomProperty(item, '--left', oppositeDirectionX);\n    incrementCustomProperty(item, '--bottom', oppositeDirectionY);\n\n    setTimeout(() => {\n      item.dataset.locked = 'true';\n      item.dataset.isLocking = 'true';\n    }, item.dataset.isLockingDuration); // Adjust the timeout duration as needed\n  } else {\n    //lock the coin on the player\n    item.dataset.locked = 'true';\n    const angle = Math.atan2(dinoRect.y - itemRect.y, dinoRect.x - itemRect.x);\n    let magneticSpeedFactor =\n      item.dataset.isMagnetLocked === 'true'\n        ? item.dataset.isMagnetSpeedFactor\n        : 1;\n    let distanceFactor = extraFactor + 0.0025 * distance;\n    const speed = SPEED * delta * magneticSpeedFactor + distanceFactor;\n\n    // Calculate incremental movement based on angle and speed\n    const deltaX = Math.cos(angle) * speed;\n    const deltaY = Math.sin(angle) * speed;\n\n    // Update coin position incrementally\n    incrementCustomProperty(item, '--left', deltaX);\n    incrementCustomProperty(item, '--bottom', deltaY * -1);\n  }\n}\n\nexport function updateCoin(delta, speedScale) {\n  document.querySelectorAll('[data-coin]').forEach((coin) => {\n    // Get positions of the dinosaur and coin\n    const dinoRect = getDinoRect();\n    const coinRect = coin.getBoundingClientRect();\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - coinRect.x, 2) +\n        Math.pow(dinoRect.y - coinRect.y, 2)\n    );\n\n    // If the distance is less than 40px, move the coin towards the dinosaur\n    if (coin.dataset.locked === 'true' || distance < 225) {\n      moveItemToPlayer(dinoRect, coin, coinRect, distance, delta);\n    } else {\n      // Move the coin to the left if not close to the dinosaur\n      if (coin.dataset.cloudChild) {\n        incrementCustomProperty(\n          coin,\n          '--left',\n          delta * speedScale * getPlatformSpeed() * -1\n        );\n      } else {\n        incrementCustomProperty(\n          coin,\n          '--left',\n          delta * speedScale * SPEED * -1\n        );\n      }\n    }\n\n    // Remove the coin if it goes off the screen\n    if (getCustomProperty(coin, '--left') <= -100) {\n      coin.remove();\n    }\n  });\n\n  if (nextCoinTime <= 0 && getIsCoinsRunning()) {\n    addToSpawnQueue('coin');\n    isCoinSpawned = false;\n    nextCoinTime =\n      randomNumberBetween(\n        getGroundCoinMinInterval(),\n        getGroundCoinMaxInterval()\n      ) / speedScale;\n  }\n\n  nextCoinTime -= delta;\n}\n\nexport function getCoinRects() {\n  return [...document.querySelectorAll('[data-coin]')].map((coin) => {\n    return {\n      id: coin.id,\n      rect: coin.getBoundingClientRect(),\n    };\n  });\n}\n\nexport function createCoins() {\n  isCoinSpawned = true;\n  // Calculate the total weight\n  const totalWeight = collectableOptions.reduce(\n    (sum, item) => sum + item.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random collectable based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedCollectable;\n  for (const item of collectableOptions) {\n    cumulativeWeight += item.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedCollectable = item;\n      break;\n    }\n  }\n  const element = document.createElement('div');\n  element.dataset.coin = true;\n  element.dataset.type = selectedCollectable.type;\n  element.dataset.locked = 'false';\n  element.dataset.isLocking = 'false';\n  element.dataset.isMagnetSpeedFactor = randomNumberBetween(1.3, 2.4);\n  element.dataset.isLockingDuration = randomNumberBetween(100, 300);\n  element.dataset.points = selectedCollectable.points;\n  if (\n    selectedCollectable.type === 'red-gem' ||\n    selectedCollectable.type === 'blue-gem' ||\n    selectedCollectable.type === 'green-gem'\n  ) {\n    element.dataset.gem = true;\n  }\n  element.classList.add(selectedCollectable.type, 'collectable', 'move-bottom');\n  element.id = Math.random().toString(16).slice(2);\n  setCustomProperty(element, '--left', 100);\n  const initialKeyframe = getRandomKeyframe();\n  element.style.animationDelay = `-${initialKeyframe}%`;\n  worldElem.append(element);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function getRandomKeyframe() {\n  // Return a random number between 0 and 100 (percentage)\n  return Math.floor(Math.random() * 101);\n}\n","import { createCoins } from './coin';\nimport { generateRandomCacti } from './cactus';\n\nimport StateSingleton from '../game-state';\nconst { setNextGroundSpawnType, getGroundSpawnReady, setGroundSpawnReady } =\n  StateSingleton;\n\nconst spawnFunctions = {\n  cactus: generateRandomCacti,\n  coin: createCoins,\n};\n\nconst spawnQueue = []; // Queue to store items waiting to be spawned\nlet spawnDelay;\nlet lastTypeSpawned;\n\nexport function addToSpawnQueue(spawnType) {\n  // Add the spawnType to the queue\n  spawnQueue.push(spawnType);\n  // If no item is currently being spawned, start spawning\n}\n\nexport function spawnNextItem(delta, speedScale) {\n  // Check if there are items in the spawn queue\n  if (spawnQueue.length > 0) {\n    setGroundSpawnReady(false);\n    // Get the next item from the queue\n    const nextSpawnType = spawnQueue.shift();\n\n    setNextGroundSpawnType(nextSpawnType);\n    // Set the flag to indicate that an item is currently being spawned\n\n    // Call the appropriate function based on the spawnType\n    if (spawnFunctions[nextSpawnType]) {\n      // Adjust the spawn delay based on the types of items in the queue\n      if (\n        (nextSpawnType === 'cactus' && lastTypeSpawned === 'coin') ||\n        (nextSpawnType === 'coin' && lastTypeSpawned === 'cactus') ||\n        (nextSpawnType === 'cactus' && lastTypeSpawned === 'cactus')\n      ) {\n        // If a cactus is followed by a coin or cactus followed by cactus, add a delay\n        spawnDelay = 5000 / (delta * speedScale);\n      } else {\n        // Otherwise, use the default delay\n        spawnDelay = 0;\n      }\n\n      setTimeout(() => {\n        lastTypeSpawned = nextSpawnType;\n        setGroundSpawnReady(true);\n        spawnFunctions[nextSpawnType]();\n      }, spawnDelay);\n      // After the delay and spawning, call spawnNextItem to spawn the next item in the queue\n    } else {\n      // Handle unknown spawn types or add additional types\n    }\n  } else {\n    return;\n    // No items in the queue, reset the flag\n  }\n}\n\n// Example usage:\n// addToSpawnQueue('cactus');\n// addToSpawnQueue('coin');\n\nexport function updateGroundQue(delta, speedScale) {\n  if (getGroundSpawnReady()) {\n    spawnNextItem(delta, speedScale);\n  }\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport bush1 from '../public/imgs/obstacles/bushes/Bush-1.png';\nimport rock1 from '../public/imgs/obstacles/rocks/Rock-1.png';\nimport rock2 from '../public/imgs/obstacles/rocks/Rock-2.png';\nimport { getDinoRect } from './player-controller';\nimport { isCollision, updateMultiplierInterface } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport {\n  currentMultiplierElem,\n  interfaceComboContainer,\n  currentComboScoreContainer,\n} from '../elements-refs';\nimport { toggleElemOn } from '../utility/toggle-element';\nimport { updateScoreWithPoints } from '../game-manager';\nimport { addToSpawnQueue } from './groundQue';\nconst {\n  setMultiplierRatio,\n  getMultiplierRatio,\n  getPlayerImmunity,\n  getHasStar,\n  getObstaclePoints,\n  getIsCactusRunning,\n  getCactusIntervalMax,\n  getCactusIntervalMin,\n  getGroundSpeed,\n} = StateSingleton;\nconst cactiPositions = [];\n\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextCactusTime;\nexport function setupCactus() {\n  nextCactusTime = getCactusIntervalMin();\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    cactus.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return cactiPositions.includes(position);\n}\n\nlet groupIdCounter = 0; // Counter to generate unique groupIds\nlet isCactusSpawned = true;\n\nexport function generateRandomCacti() {\n  isCactusSpawned = true;\n  console.log('cactus spawned');\n  const minCacti = 1;\n  const maxCacti = 2; // Adjust the range as needed\n  let groupId; // Declare groupId outside the loop\n\n  const numberOfCacti = randomNumberBetween(minCacti, maxCacti);\n\n  if (numberOfCacti >= minCacti) {\n    groupId = groupIdCounter++;\n    for (let i = 0; i < numberOfCacti; i++) {\n      let newPosition;\n      do {\n        newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n      } while (isPositionOccupied(newPosition));\n\n      cactiPositions.push({\n        position: newPosition,\n        groupId: groupId,\n      });\n      createCactus(newPosition, groupId);\n    }\n  } else {\n    let newPosition;\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    cactiPositions.push({\n      position: newPosition,\n    });\n    createCactus(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  cactiPositions.length = 0;\n}\n\nconst distanceThreshold = 200; // Adjust this threshold as needed\nlet cactusGroups = new Map(); // Declare cactusGroups outside the updateCactus function\n\nexport function updateCactus(delta, speedScale) {\n  document.querySelectorAll('[data-cactus]').forEach((cactus) => {\n    // Check if the comboIncremented flag is already set for this cactus\n    const comboIncremented = cactus.dataset.comboIncremented === 'true';\n\n    // Get positions of the dinosaur and cactus\n    const dinoRect = getDinoRect();\n    const cactusRect = cactus.getBoundingClientRect();\n\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - cactusRect.x, 2) +\n        Math.pow(dinoRect.y - cactusRect.y, 2)\n    );\n    const collision = isCollision(dinoRect, cactusRect);\n\n    // Check if the cactus belongs to a group\n    const groupId = cactus.dataset.groupId;\n    const isGrouped = groupId !== undefined;\n\n    // Initialize groupFlags to an empty object\n    let groupFlags = {};\n    // Check if the dinosaur is within the threshold near the cactus\n    const isDinoNearCactus = distance < distanceThreshold;\n\n    // Check if there was a collision in the previous frame\n    const hadCollision = cactus.dataset.hadCollision === 'true';\n\n    // Check if the cactus has moved past the dinosaur\n    const hasPassedDino = cactusRect.right < dinoRect.left;\n\n    if (isGrouped) {\n      // Check if this cactus belongs to a group\n      if (!cactusGroups.has(groupId)) {\n        // If the group does not exist, create it\n        cactusGroups.set(groupId, {\n          isDinoNear: false,\n          hadCollision: false,\n          comboIncremented: false,\n        });\n      }\n\n      // Update the group's flags based on individual cactuses\n      groupFlags = cactusGroups.get(groupId);\n\n      // Update the flags for this cactus in the group\n      groupFlags.isDinoNear =\n        groupFlags.isDinoNear || cactus.dataset.isDinoNear === 'true';\n      groupFlags.hadCollision = groupFlags.hadCollision || hadCollision;\n\n      // Check if the cactus has moved past the dinosaur within the group\n      groupFlags.hasPassedDino = groupFlags.hasPassedDino || hasPassedDino;\n    }\n\n    if (isDinoNearCactus) {\n      // If the dinosaur is within the threshold, set the flag to true\n      cactus.dataset.isDinoNear = 'true';\n    } else {\n      // If the dinosaur is not within the threshold, set the flag to false\n      cactus.dataset.isDinoNear = 'false';\n    }\n\n    if (\n      isGrouped &&\n      groupFlags.isDinoNear &&\n      !groupFlags.hadCollision &&\n      groupFlags.hasPassedDino &&\n      !groupFlags.comboIncremented\n    ) {\n      // Increment combo only if there was no collision in the previous frame\n      // and the cactus group has moved past the dinosaur without a new collision\n      let currentMultiplierRatio = getMultiplierRatio();\n      setMultiplierRatio((currentMultiplierRatio += 1));\n      updateMultiplierInterface();\n      // const newElement = document.createElement('div');\n      // newElement.classList.add('one-up');\n      // newElement.style.position = 'absolute';\n      // newElement.textContent = '+1x';\n      // cactus.appendChild(newElement);\n      // setTimeout(() => {\n      //   newElement.remove();\n      // }, 600);\n      // Set the comboIncremented flag for the entire group\n      groupFlags.comboIncremented = true;\n    }\n\n    if (\n      !cactus.dataset.hadCollision &&\n      collision === true &&\n      !cactus.dataset.scoreUpdated\n    ) {\n      if (getPlayerImmunity() && getHasStar()) {\n        const text = document.createElement('div');\n        text.classList.add('enemy-plus-points');\n        text.style.position = 'absolute';\n        text.style.left = cactus.offsetLeft + 'px';\n        text.style.top = cactus.offsetTop - 70 + 'px';\n        cactus.parentNode.insertBefore(text, cactus);\n        const points = getMultiplierRatio() * getObstaclePoints();\n        text.textContent = `+${points}`;\n        updateScoreWithPoints(points);\n        cactus.classList.add('enemy-die');\n        cactus.dataset.scoreUpdated = true;\n        text.addEventListener('animationend', () => {\n          text.remove();\n        });\n        // After the transition, remove the cactus\n        cactus.addEventListener('animationend', () => {\n          cactus.remove();\n        });\n      } else {\n        cactus.dataset.hadCollision = true;\n      }\n    }\n\n    incrementCustomProperty(\n      cactus,\n      '--left',\n      delta * speedScale * getGroundSpeed() * -1\n    );\n    if (getCustomProperty(cactus, '--left') <= -100) {\n      cactus.remove();\n    }\n  });\n\n  if (nextCactusTime <= 0 && getIsCactusRunning()) {\n    addToSpawnQueue('cactus');\n    isCactusSpawned = false;\n    nextCactusTime =\n      randomNumberBetween(getCactusIntervalMin(), getCactusIntervalMax()) /\n      speedScale;\n  }\n  nextCactusTime -= delta;\n}\n\nexport function getCactusRects() {\n  return [...document.querySelectorAll('[data-cactus]')].map((cactus) => {\n    return cactus.getBoundingClientRect();\n  });\n}\n\n// Array of possible cactus images with associated weights\nconst cactusImages = [\n  { src: bush1, weight: 5 },\n  { src: rock1, weight: 3 },\n  { src: rock2, weight: 4 },\n  // Add more image sources with corresponding weights\n];\n\nfunction createCactus(newPosition, groupId) {\n  // Calculate the total weight\n  const totalWeight = cactusImages.reduce(\n    (sum, image) => sum + image.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random cactus image based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedImage;\n  for (const image of cactusImages) {\n    cumulativeWeight += image.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedImage = image;\n      break;\n    }\n  }\n\n  const cactus = document.createElement('img');\n  cactus.dataset.cactus = true;\n  cactus.src = selectedImage.src;\n  cactus.classList.add('cactus', 'game-element');\n  // Randomly flip the cloud horizontally\n  if (Math.random() < 0.5) {\n    cactus.style.transform = 'scaleX(-1)';\n  }\n  // Set the groupId as a data attribute on the cactus element\n  cactus.dataset.groupId = groupId;\n\n  setCustomProperty(cactus, '--left', newPosition);\n  setCustomProperty(cactus, 'height', '6.3%');\n  setCustomProperty(cactus, '--bottom', `${randomNumberBetween(15.5, 17.5)}`);\n\n  worldElem.append(cactus);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import StateSingleton from './game-state';\n\nconst {\n  setIsStarColliding,\n  setIsMagnetColliding,\n  setIsHeartColliding,\n  setIsLeafColliding,\n} = StateSingleton;\n\n// state.js\nconst ItemDropStateSingleton = (function () {\n  //default state\n  let state = {\n    star: { weight: 8, colliderSetter: setIsStarColliding },\n    // magnet: { weight: 4, colliderSetter: setIsMagnetColliding },\n    heart: { weight: 12, colliderSetter: setIsHeartColliding },\n    // leaf: { weight: 12, colliderSetter: setIsLeafColliding },\n    // empty: { weight: 2 },\n  };\n\n  return {\n    getItemDropState: function () {\n      return state;\n    },\n    updateState: function (newValues) {\n      Object.assign(state, newValues);\n    },\n  };\n})();\n\nexport default ItemDropStateSingleton;\n","import StateSingleton from '../game-state';\n\nexport function createChildItems(elementName, parent) {\n  const element = document.createElement('div');\n  element.dataset[`${elementName}`] = true;\n  element.classList.add(\n    `${elementName}-item-cloud`,\n    `${elementName}-cloud-item-asset`\n  );\n  element.id = Math.random().toString(16).slice(2);\n\n  parent.append(element);\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport cloud1Img from '../public/imgs/cloud/Cloud-1.png';\nimport cloud2Img from '../public/imgs/cloud/Cloud-2.png';\nimport { getDinoRect } from './player-controller';\nimport { isCollision, updateMultiplierInterface } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport ItemDropStateSingleton from '../item-drop-state';\nimport { createChildItems } from '../utility/child-items';\nimport { collectableOptions } from '../game-manager';\nimport { getRandomKeyframe } from './coin';\nconst { getIsPlatformRunning, getPlatformSpeed } = StateSingleton;\nconst { getItemDropState } = ItemDropStateSingleton;\nconst platformPositions = [];\n\nconst SPEED = getPlatformSpeed();\nconst platform_INTERVAL_MIN = 1000;\nconst platform_INTERVAL_MAX = 1500;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextPlatformTime;\nexport function setupPlatform() {\n  nextPlatformTime = platform_INTERVAL_MIN;\n  document.querySelectorAll('[data-platform]').forEach((platform) => {\n    platform.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return platformPositions.includes(position);\n}\n\nfunction generateRandomPlatforms() {\n  const minPlatforms = 1;\n  const maxPlatforms = 1; // Adjust the range as needed\n\n  const numberOfPlatforms = randomNumberBetween(minPlatforms, maxPlatforms);\n\n  if (numberOfPlatforms >= minPlatforms) {\n    for (let i = 0; i < numberOfPlatforms; i++) {\n      let newPosition;\n      do {\n        newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n      } while (isPositionOccupied(newPosition));\n\n      platformPositions.push({\n        position: newPosition,\n      });\n      createPlatform(newPosition);\n    }\n  } else {\n    let newPosition;\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    platformPositions.push({\n      position: newPosition,\n    });\n    createPlatform(newPosition);\n  }\n\n  platformPositions.length = 0;\n}\n\nconst distanceThreshold = 200; // Adjust this threshold as needed\n\nexport function updatePlatform(delta, speedScale) {\n  document.querySelectorAll('[data-platform]').forEach((platform) => {\n    // Get positions of the dinosaur and platform\n    const dinoRect = getDinoRect();\n    const platformRect = platform.getBoundingClientRect();\n\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - platformRect.x, 2) +\n        Math.pow(dinoRect.y - platformRect.y, 2)\n    );\n    const collision = isCollision(dinoRect, platformRect);\n\n    // Check if the dinosaur is within the threshold near the platform\n    const isDinoNearPlatform = distance < distanceThreshold;\n\n    if (isDinoNearPlatform) {\n      // If the dinosaur is within the threshold, set the flag to true\n      platform.dataset.isDinoNear = 'true';\n    } else {\n      // If the dinosaur is not within the threshold, set the flag to false\n      platform.dataset.isDinoNear = 'false';\n    }\n\n    if (!platform.dataset.hadCollision && collision === true) {\n      platform.dataset.hadCollision = true;\n    }\n  });\n  document\n    .querySelectorAll('[data-platform-container]')\n    .forEach((platformContainer) => {\n      incrementCustomProperty(\n        platformContainer,\n        '--left',\n        delta * speedScale * SPEED * -1\n      );\n      if (getCustomProperty(platformContainer, '--left') <= -100) {\n        platformContainer.remove();\n      }\n    });\n\n  if (nextPlatformTime <= 0 && getIsPlatformRunning()) {\n    generateRandomPlatforms();\n    nextPlatformTime =\n      randomNumberBetween(platform_INTERVAL_MIN, platform_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextPlatformTime -= delta;\n}\n\nexport function getPlatformRects() {\n  return [...document.querySelectorAll('[data-platform]')].map((platform) => {\n    return platform.getBoundingClientRect();\n  });\n}\n\n// Array of possible platform images with associated weights\nconst platformObj = {\n  'item-cloud': {\n    weight: 20,\n  },\n  2: { weight: 1 },\n  3: { weight: 2 },\n  4: { weight: 5 },\n  5: { weight: 5 },\n  // Add more image sources with corresponding weights\n};\n\nfunction createCloud(platformElem, isFirstChild, zIndex, i) {\n  const cloud = document.createElement('img');\n  cloud.src = cloud1Img;\n  const cloudClass =\n    i % 3 === 0\n      ? 'floating-cloud-animation-1'\n      : i % 3 === 1\n      ? 'floating-cloud-animation-2'\n      : 'floating-cloud-animation-3';\n\n  cloud.classList.add('cloud', cloudClass);\n  // Shift each cloud to the left by 30% of its width if it's not the first cloud\n  if (!isFirstChild) {\n    cloud.style.marginLeft = '-4px';\n  }\n  cloud.style.zIndex = zIndex;\n  platformElem.append(cloud);\n}\n\nconst normalizedPlatformItemWeights = normalizeWeights(getItemDropState());\n\nfunction createItemCloud(platformElem) {\n  const cloud = document.createElement('img');\n  cloud.src = cloud2Img;\n\n  cloud.classList.add('item-cloud');\n\n  // Randomly flip the cloud horizontally\n  if (Math.random() < 0.5) {\n    cloud.style.transform = 'scaleX(-1)';\n  }\n\n  // Shift each cloud to the left by 30% of its width if it's not the first cloud\n  platformElem.append(cloud);\n}\n\nfunction createPlatform(newPosition) {\n  const numberOfClouds = getRandomWeighted(normalizedPlatformWeights);\n  const platform = document.createElement('div');\n  const parentContainer = document.createElement('div');\n  parentContainer.dataset.platformContainer = true;\n  parentContainer.classList.add('platform-parent-container');\n  if (numberOfClouds !== 'item-cloud') {\n    for (let i = 0; i < numberOfClouds; i++) {\n      const zIndex = numberOfClouds.length - i + 2;\n      createCloud(platform, i === 0, zIndex, i);\n    }\n  } else {\n    createItemCloud(platform);\n    createChildItems(\n      getRandomWeighted(normalizedPlatformItemWeights),\n      parentContainer\n    );\n  }\n  platform.dataset.platform = true;\n  platform.classList.add('platform', 'game-element', 'flex-row');\n  platform.id = `platform-${Math.random()}`;\n  parentContainer.append(platform);\n  setCustomProperty(parentContainer, '--left', newPosition);\n  setCustomProperty(\n    parentContainer,\n    '--bottom',\n    `${randomNumberBetween(45, 45)}`\n  );\n  worldElem.append(parentContainer);\n  createCoinsOnPlatform(parentContainer);\n}\n\nexport function randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// Example usage:\nconst normalizedPlatformWeights = normalizeWeights(platformObj);\n\nexport function normalizeWeights(item) {\n  const keys = Object.keys(item);\n  const weights = keys.map((key) => item[key].weight);\n  const sumOfWeights = weights.reduce((sum, weight) => sum + weight, 0);\n\n  const normalizedWeights = {};\n  keys.forEach((key, index) => {\n    normalizedWeights[key] = weights[index] / sumOfWeights;\n  });\n\n  return normalizedWeights;\n}\n\nexport function getRandomWeighted(item) {\n  const keys = Object.keys(item);\n  const probabilities = keys.map((key) => item[key]);\n  const randomValue = Math.random();\n  let cumulativeProbability = 0;\n\n  for (let i = 0; i < keys.length; i++) {\n    cumulativeProbability += probabilities[i];\n    if (randomValue <= cumulativeProbability) {\n      return keys[i];\n    }\n  }\n\n  // Default case (fallback)\n  return keys[keys.length - 1];\n}\n\nfunction createCoinsOnPlatform(parent) {\n  // Calculate the total weight\n  const totalWeight = collectableOptions.reduce(\n    (sum, item) => sum + item.weight,\n    0\n  );\n\n  // Generate a random number between 0 and totalWeight\n  const randomWeight = Math.random() * totalWeight;\n\n  // Select a random collectable based on the weighted probabilities\n  let cumulativeWeight = 0;\n  let selectedCollectable;\n  for (const item of collectableOptions) {\n    cumulativeWeight += item.weight;\n    if (randomWeight <= cumulativeWeight) {\n      selectedCollectable = item;\n      break;\n    }\n  }\n  const element = document.createElement('div');\n  element.dataset.coin = true;\n  element.dataset.cloudChild = true;\n  element.dataset.type = selectedCollectable.type;\n  element.dataset.locked = 'false';\n  element.dataset.isLocking = 'false';\n  element.dataset.isMagnetSpeedFactor = randomNumberBetween(1.3, 2.4);\n  element.dataset.isLockingDuration = randomNumberBetween(100, 300);\n  element.dataset.points = selectedCollectable.points;\n  element.classList.add(\n    selectedCollectable.type,\n    'collectable',\n    'move-bottom-cloud-coin'\n  );\n  element.id = Math.random().toString(16).slice(2);\n  setCustomProperty(element, '--left', 100);\n  setCustomProperty(element, '--bottom', getCustomProperty(parent, '--bottom'));\n  const initialKeyframe = getRandomKeyframe();\n  element.style.animationDelay = `-${initialKeyframe}%`;\n  worldElem.append(element);\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport { getDinoRect } from './player-controller';\nimport { isCollision, updateMultiplierInterface } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport {\n  currentMultiplierElem,\n  interfaceComboContainer,\n  currentComboScoreContainer,\n} from '../elements-refs';\nimport { toggleElemOn } from '../utility/toggle-element';\nimport { updateScoreWithPoints } from '../game-manager';\nimport { getRandomWeighted, normalizeWeights } from './platform';\nconst {\n  setMultiplierRatio,\n  getMultiplierRatio,\n  getPlayerImmunity,\n  getHasStar,\n  getObstaclePoints,\n  getIsGroundEnemyRunning,\n  getGroundSpeed,\n  getGroundEnemySpeedFactor,\n} = StateSingleton;\nconst enemyPositions = [];\n\nconst SPEED = getGroundSpeed() + getGroundEnemySpeedFactor();\nconst GROUND_ENEMY_INTERVAL_MIN = 500;\nconst GROUND_ENEMY_INTERVAL_MAX = 1700;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextGroundEnemyTime;\nexport function setupGroundEnemy() {\n  nextGroundEnemyTime = GROUND_ENEMY_INTERVAL_MIN;\n  document.querySelectorAll('[data-ground-enemy]').forEach((groundEnemy) => {\n    groundEnemy.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return enemyPositions.includes(position);\n}\n\nlet groupIdCounter = 0; // Counter to generate unique groupIds\n\nfunction generateRandomEnemy() {\n  const minEnemy = 1;\n  const maxEnemy = 1; // Adjust the range as needed\n  let groupId; // Declare groupId outside the loop\n\n  const numberOfEnemy = randomNumberBetween(minEnemy, maxEnemy);\n\n  if (numberOfEnemy >= minEnemy) {\n    groupId = groupIdCounter++;\n    for (let i = 0; i < numberOfEnemy; i++) {\n      let newPosition;\n      do {\n        newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n      } while (isPositionOccupied(newPosition));\n\n      enemyPositions.push({\n        position: newPosition,\n        groupId: groupId,\n      });\n      createGroundEnemy(newPosition, groupId);\n    }\n  } else {\n    let newPosition;\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    enemyPositions.push({\n      position: newPosition,\n    });\n    createGroundEnemy(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  enemyPositions.length = 0;\n}\n\nconst distanceThreshold = 200; // Adjust this threshold as needed\nlet groundEnemyGroups = new Map(); // Declare cactusGroups outside the updateCactus function\n\nexport function updateGroundEnemy(delta, speedScale) {\n  document.querySelectorAll('[data-ground-enemy]').forEach((groundEnemy) => {\n    // Get positions of the dinosaur and ground-enemy\n    const dinoRect = getDinoRect();\n    const groundEnemyRect = groundEnemy.getBoundingClientRect();\n\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - groundEnemyRect.x, 2) +\n        Math.pow(dinoRect.y - groundEnemyRect.y, 2)\n    );\n    const collision = isCollision(dinoRect, groundEnemyRect);\n    // Check if the groundEnemy belongs to a group\n    const groupId = groundEnemy.dataset.groupId;\n    const isGrouped = groupId !== undefined;\n\n    // Initialize groupFlags to an empty object\n    let groupFlags = {};\n\n    // Check if the dinosaur is within the threshold near the bird\n    const isDinoNearGroundEnemy = distance < distanceThreshold;\n    // Check if there was a collision in the previous frame\n    const hadCollision = groundEnemy.dataset.hadCollision === 'true';\n\n    // Check if the groundEnemy has moved past the dinosaur\n    const hasPassedDino = groundEnemyRect.right < dinoRect.left;\n\n    if (isGrouped) {\n      // Check if this groundEnemy belongs to a group\n      if (!groundEnemyGroups.has(groupId)) {\n        // If the group does not exist, create it\n        groundEnemyGroups.set(groupId, {\n          isDinoNear: false,\n          hadCollision: false,\n          comboIncremented: false,\n        });\n      }\n\n      // Update the group's flags based on individual groundEnemies\n      groupFlags = groundEnemyGroups.get(groupId);\n\n      // Update the flags for this groundEnemy in the group\n      groupFlags.isDinoNear =\n        groupFlags.isDinoNear || groundEnemy.dataset.isDinoNear === 'true';\n      groupFlags.hadCollision = groupFlags.hadCollision || hadCollision;\n\n      // Check if the groundEnemy has moved past the dinosaur within the group\n      groupFlags.hasPassedDino = groupFlags.hasPassedDino || hasPassedDino;\n    }\n\n    if (isDinoNearGroundEnemy) {\n      // If the dinosaur is within the threshold, set the flag to true\n      groundEnemy.dataset.isDinoNear = 'true';\n    } else {\n      // If the dinosaur is not within the threshold, set the flag to false\n      groundEnemy.dataset.isDinoNear = 'false';\n    }\n\n    if (\n      isGrouped &&\n      groupFlags.isDinoNear &&\n      !groupFlags.hadCollision &&\n      groupFlags.hasPassedDino &&\n      !groupFlags.comboIncremented\n    ) {\n      // Increment combo only if there was no collision in the previous frame\n      // and the groundEnemy group has moved past the dinosaur without a new collision\n      let currentMultiplierRatio = getMultiplierRatio();\n      setMultiplierRatio((currentMultiplierRatio += 1));\n      updateMultiplierInterface();\n      // const newElement = document.createElement('div');\n      // newElement.classList.add('one-up');\n      // newElement.style.position = 'absolute';\n      // newElement.textContent = '+1x';\n      // groundEnemy.appendChild(newElement);\n      // setTimeout(() => {\n      //   newElement.remove();\n      // }, 600);\n      // Set the comboIncremented flag for the entire group\n      groupFlags.comboIncremented = true;\n    }\n\n    if (\n      !groundEnemy.dataset.hadCollision &&\n      collision === true &&\n      !groundEnemy.dataset.scoreUpdated\n    ) {\n      if (getPlayerImmunity() && getHasStar()) {\n        const text = document.createElement('div');\n        text.classList.add('enemy-plus-points');\n        text.style.position = 'absolute';\n        text.style.left = groundEnemy.offsetLeft + 'px';\n        text.style.top = groundEnemy.offsetTop - 70 + 'px';\n        groundEnemy.parentNode.insertBefore(text, groundEnemy);\n        const points = getMultiplierRatio() * getObstaclePoints();\n        text.textContent = `+${points}`;\n        updateScoreWithPoints(points);\n        groundEnemy.classList.add('penguin-die');\n        groundEnemy.dataset.scoreUpdated = true;\n        text.addEventListener('animationend', () => {\n          text.remove();\n        });\n        // After the transition, remove the groundEnemy\n        groundEnemy.addEventListener('animationend', () => {\n          groundEnemy.remove();\n        });\n      } else {\n        groundEnemy.dataset.hadCollision = true;\n      }\n    }\n\n    const extraSpeedFactor = parseFloat(\n      groundEnemy.dataset.groundEnemyExtraSpeedFactor || 0\n    );\n\n    incrementCustomProperty(\n      groundEnemy,\n      '--left',\n      delta * speedScale * -1 * (SPEED + extraSpeedFactor)\n    );\n    if (getCustomProperty(groundEnemy, '--left') <= -100) {\n      groundEnemy.remove();\n    }\n  });\n\n  if (nextGroundEnemyTime <= 0 && getIsGroundEnemyRunning()) {\n    generateRandomEnemy();\n    nextGroundEnemyTime =\n      randomNumberBetween(\n        GROUND_ENEMY_INTERVAL_MIN,\n        GROUND_ENEMY_INTERVAL_MAX\n      ) / speedScale;\n  }\n  nextGroundEnemyTime -= delta;\n}\n\nexport function getGroundEnemyRects() {\n  return [...document.querySelectorAll('[data-ground-enemy]')].map(\n    (groundEnemy) => {\n      return groundEnemy.getBoundingClientRect();\n    }\n  );\n}\n\n// Array of possible groundEnemy images with associated weights\nconst groundEnemyObj = {\n  rollingPenguin: { weight: 1, class: 'idle-penguin', speedFactor: -0.05 },\n  spinningPenguin: { weight: 1, class: 'spinning-penguin', speedFactor: 0 },\n  walkingPenguin: { weight: 1, class: 'walking-penguin', speedFactor: -0.035 },\n  // Add more image sources with corresponding weights\n};\n\nconst normalizedGroundEnemyWeights = normalizeWeights(groundEnemyObj);\n\nfunction createGroundEnemy(newPosition, groupId) {\n  const randomBuffKey = getRandomWeighted(normalizedGroundEnemyWeights);\n  const groundEnemy = document.createElement('div');\n  groundEnemy.dataset.groundEnemy = true;\n  groundEnemy.dataset.groundEnemyType = randomBuffKey;\n  groundEnemy.classList.add(\n    'ground-enemy',\n    groundEnemyObj[randomBuffKey].class,\n    'game-element'\n  );\n  if (groundEnemyObj[randomBuffKey].speedFactor) {\n    groundEnemy.dataset.groundEnemyExtraSpeedFactor =\n      groundEnemyObj[randomBuffKey].speedFactor;\n  } else groundEnemy.dataset.groundEnemyExtraSpeedFactor = 0;\n\n  setCustomProperty(groundEnemy, '--left', newPosition);\n  setCustomProperty(groundEnemy, 'height', '8%');\n\n  // Set the groupId as a data attribute on the groundEnemy element\n  groundEnemy.dataset.groupId = groupId;\n\n  worldElem.append(groundEnemy);\n  if (randomBuffKey == 'rollingPenguin') {\n    setTimeout(() => {\n      groundEnemy.classList.remove('idle-penguin');\n      groundEnemy.classList.add('dive-penguin');\n    }, 1000);\n    groundEnemy.addEventListener('animationend', () => {\n      // Animation ends, add 'rolling-penguin' class\n      groundEnemy.classList.remove('dive-penguin');\n      groundEnemy.classList.add('rolling-penguin');\n      groundEnemy.dataset.groundEnemyExtraSpeedFactor = 0;\n    });\n  }\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport { getDinoRect } from './player-controller';\nimport { isCollision, updateMultiplierInterface } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport {\n  currentMultiplierElem,\n  interfaceComboContainer,\n  currentComboScoreContainer,\n} from '../elements-refs';\nimport { toggleElemOn } from '../utility/toggle-element';\nimport { updateScoreWithPoints } from '../game-manager';\nimport { getRandomWeighted, normalizeWeights } from './platform';\nconst {\n  setMultiplierRatio,\n  getMultiplierRatio,\n  getPlayerImmunity,\n  getHasStar,\n  getObstaclePoints,\n  getIsBirdRunning,\n} = StateSingleton;\nconst cactiPositions = [];\n\nconst SPEED = 0.03;\nconst BIRD_INTERVAL_MIN = 500;\nconst BIRD_INTERVAL_MAX = 2000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextBirdTime;\nexport function setupBird() {\n  nextBirdTime = BIRD_INTERVAL_MIN;\n  document.querySelectorAll('[data-bird]').forEach((bird) => {\n    bird.remove();\n  });\n}\n\nfunction isPositionOccupied(position) {\n  return cactiPositions.includes(position);\n}\n\nlet groupIdCounter = 0; // Counter to generate unique groupIds\n\nfunction generateRandomCacti() {\n  const minCacti = 1;\n  const maxCacti = 1; // Adjust the range as needed\n  let groupId; // Declare groupId outside the loop\n\n  const numberOfCacti = randomNumberBetween(minCacti, maxCacti);\n\n  if (numberOfCacti >= minCacti) {\n    groupId = groupIdCounter++;\n    for (let i = 0; i < numberOfCacti; i++) {\n      let newPosition;\n      do {\n        newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n      } while (isPositionOccupied(newPosition));\n\n      cactiPositions.push({\n        position: newPosition,\n        groupId: groupId,\n      });\n      createBird(newPosition, groupId);\n    }\n  } else {\n    let newPosition;\n    do {\n      newPosition = randomNumberBetween(95, 103); // Adjust the range of positions as needed\n    } while (isPositionOccupied(newPosition));\n\n    cactiPositions.push({\n      position: newPosition,\n    });\n    createBird(newPosition);\n  }\n\n  // Clear cacti positions for the next round (optional)\n  cactiPositions.length = 0;\n}\n\nconst distanceThreshold = 200; // Adjust this threshold as needed\nlet birdGroups = new Map(); // Declare birdGroups outside the updateBird function\n\nexport function updateBird(delta, speedScale) {\n  document.querySelectorAll('[data-bird]').forEach((bird) => {\n    // Check if the comboIncremented flag is already set for this bird\n    const comboIncremented = bird.dataset.comboIncremented === 'true';\n\n    // Get positions of the dinosaur and bird\n    const dinoRect = getDinoRect();\n    const birdRect = bird.getBoundingClientRect();\n\n    // Calculate distance\n    const distance = Math.sqrt(\n      Math.pow(dinoRect.x - birdRect.x, 2) +\n        Math.pow(dinoRect.y - birdRect.y, 2)\n    );\n    const collision = isCollision(dinoRect, birdRect);\n\n    // Check if the bird belongs to a group\n    const groupId = bird.dataset.groupId;\n    const isGrouped = groupId !== undefined;\n\n    // Initialize groupFlags to an empty object\n    let groupFlags = {};\n    // Check if the dinosaur is within the threshold near the bird\n    const isDinoNearBird = distance < distanceThreshold;\n\n    // Check if there was a collision in the previous frame\n    const hadCollision = bird.dataset.hadCollision === 'true';\n\n    // Check if the bird has moved past the dinosaur\n    const hasPassedDino = birdRect.right < dinoRect.left;\n\n    if (isGrouped) {\n      // Check if this bird belongs to a group\n      if (!birdGroups.has(groupId)) {\n        // If the group does not exist, create it\n        birdGroups.set(groupId, {\n          isDinoNear: false,\n          hadCollision: false,\n          comboIncremented: false,\n        });\n      }\n\n      // Update the group's flags based on individual birds\n      groupFlags = birdGroups.get(groupId);\n\n      // Update the flags for this bird in the group\n      groupFlags.isDinoNear =\n        groupFlags.isDinoNear || bird.dataset.isDinoNear === 'true';\n      groupFlags.hadCollision = groupFlags.hadCollision || hadCollision;\n\n      // Check if the bird has moved past the dinosaur within the group\n      groupFlags.hasPassedDino = groupFlags.hasPassedDino || hasPassedDino;\n    }\n\n    if (isDinoNearBird) {\n      // If the dinosaur is within the threshold, set the flag to true\n      bird.dataset.isDinoNear = 'true';\n    } else {\n      // If the dinosaur is not within the threshold, set the flag to false\n      bird.dataset.isDinoNear = 'false';\n    }\n\n    if (\n      isGrouped &&\n      groupFlags.isDinoNear &&\n      !groupFlags.hadCollision &&\n      groupFlags.hasPassedDino &&\n      !groupFlags.comboIncremented\n    ) {\n      // Increment combo only if there was no collision in the previous frame\n      // and the bird group has moved past the dinosaur without a new collision\n      let currentMultiplierRatio = getMultiplierRatio();\n      setMultiplierRatio((currentMultiplierRatio += 1));\n      updateMultiplierInterface();\n      // const newElement = document.createElement('div');\n      // newElement.classList.add('one-up');\n      // newElement.style.position = 'absolute';\n      // newElement.textContent = '+1x';\n      // bird.appendChild(newElement);\n      // setTimeout(() => {\n      //   newElement.remove();\n      // }, 600);\n      // Set the comboIncremented flag for the entire group\n      groupFlags.comboIncremented = true;\n    }\n\n    if (\n      !bird.dataset.hadCollision &&\n      collision === true &&\n      !bird.dataset.scoreUpdated\n    ) {\n      if (getPlayerImmunity() && getHasStar()) {\n        const text = document.createElement('div');\n        text.classList.add('enemy-plus-points');\n        text.style.position = 'absolute';\n        text.style.left = bird.offsetLeft + 'px';\n        text.style.top = bird.offsetTop - 70 + 'px';\n        bird.parentNode.insertBefore(text, bird);\n        const points = getMultiplierRatio() * getObstaclePoints();\n        text.textContent = `+${points}`;\n        updateScoreWithPoints(points);\n        bird.classList.add('enemy-die');\n        bird.dataset.scoreUpdated = true;\n        // After the transition, remove the bird\n        bird.addEventListener('animationend', () => {\n          bird.remove();\n        });\n      } else {\n        bird.dataset.hadCollision = true;\n      }\n    }\n\n    incrementCustomProperty(bird, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(bird, '--left') <= -100) {\n      bird.remove();\n    }\n  });\n\n  if (nextBirdTime <= 0 && getIsBirdRunning()) {\n    generateRandomCacti();\n    nextBirdTime =\n      randomNumberBetween(BIRD_INTERVAL_MIN, BIRD_INTERVAL_MAX) / speedScale;\n  }\n  nextBirdTime -= delta;\n}\n\nexport function getBirdRects() {\n  return [...document.querySelectorAll('[data-bird]')].map((bird) => {\n    return bird.getBoundingClientRect();\n  });\n}\n\n// Array of possible bird images with associated weights\nconst birdObj = {\n  penguin: { weight: 1 },\n  // Add more image sources with corresponding weights\n};\n\nconst normalizedBirdWeights = normalizeWeights(birdObj);\n\nfunction createBird(newPosition, groupId) {\n  const bird = document.createElement('div');\n  bird.dataset.bird = true;\n  bird.classList.add('bird', 'flying-penguin', 'game-element');\n\n  // Set the groupId as a data attribute on the bird element\n  bird.dataset.groupId = groupId;\n\n  setCustomProperty(bird, '--left', newPosition);\n  setCustomProperty(bird, 'height', `${randomNumberBetween(8, 13)}%`);\n\n  worldElem.append(bird);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","//gets all users from collection\nconst getAllHighScoreUsers = async () => {\n  try {\n    const response = await fetch('http://3.12.120.102:3001/scores/users');\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.log('getAllHighScoreUsers error', error);\n  }\n};\n\n//insertions instead of delete\n\n//deletes entry by field\nconst handleDeleteEntry = async (entryField) => {\n  try {\n    const response = await fetch(\n      `http://3.12.120.102:3001/scores/delete-entry/${entryField}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    if (!response.ok) {\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === 'no user found') {\n        alert('ERROR: No entry found with the specified ID');\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleDeleteEntry error', error);\n  }\n};\n\n//sorts all collection data in descending order by score, and deletes last entry by username\nconst handleSortAndDeleteLastEntry = async () => {\n  await getAllHighScoreUsers().then((data) => {\n    const sortedData = data.users.sort((a, b) => {\n      return parseInt(b.score, 10) - parseInt(a.score, 10);\n    });\n    handleDeleteEntry(sortedData[sortedData.length - 1].username);\n  });\n};\n\n//adds new high score\nconst handleNewHighScore = async (username, score) => {\n  try {\n    const response = await fetch('http://3.12.120.102:3001/scores/new-high', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: username,\n        score: score,\n      }),\n    });\n    console.log(response);\n\n    if (!response.ok) {\n      console.log('not ok');\n      // Check if the response status is not OK (e.g., 4xx or 5xx)\n      const errorData = await response.json();\n      if (errorData.type === 'username already exists') {\n        return console.log('username already exists');\n      } else {\n        alert('ERROR: Something went wrong');\n      }\n    } else {\n      await handleSortAndDeleteLastEntry();\n    }\n  } catch (error) {\n    // Handle other errors (e.g., network issues)\n    console.log('handleNewHighScore error', error);\n  }\n};\n\nconst checkIfNewHighScore = async (score) => {};\n\nexport { handleNewHighScore, getAllHighScoreUsers, checkIfNewHighScore };\n","import { getAllHighScoreUsers } from '../apis';\n\nexport function sortLeaderboard(data) {\n  return data.users.sort((a, b) => {\n    return parseInt(b.score, 10) - parseInt(a.score, 10);\n  });\n}\n\nexport function getSuffix(number) {\n  const lastDigit = number % 10;\n  if (number === 11 || number === 12 || number === 13) {\n    return 'th';\n  } else if (lastDigit === 1) {\n    return 'st';\n  } else if (lastDigit === 2) {\n    return 'nd';\n  } else if (lastDigit === 3) {\n    return 'rd';\n  } else {\n    return 'th';\n  }\n}\n\nexport function createLeaderboard(leaderboardElem) {\n  //for right sidebar\n  const personalBestLvl = document.querySelector('[data-personal-best-lvl]');\n  const personalBestCombo = document.querySelector(\n    '[data-personal-best-combo]'\n  );\n  const personalBestScoreElem = document.querySelector(\n    '[data-personal-best-score]'\n  );\n\n  // Retrieve values from local storage\n  const storedPersonalBestLvl = localStorage.getItem('lion-best-lvl');\n  const storedPersonalBestCombo = localStorage.getItem('lion-best-combo');\n  const storedPersonalBestScore = localStorage.getItem('lion-high-score');\n\n  // Check if values exist in local storage before updating the elements\n  if (storedPersonalBestLvl !== null) {\n    personalBestLvl.textContent = storedPersonalBestLvl;\n  }\n\n  if (storedPersonalBestCombo !== null) {\n    personalBestCombo.textContent = storedPersonalBestCombo;\n  }\n\n  if (storedPersonalBestScore !== null) {\n    personalBestScoreElem.textContent = storedPersonalBestScore;\n  }\n\n  getAllHighScoreUsers().then((data) => {\n    const sortedData = sortLeaderboard(data);\n\n    // Map data to HTML elements and append to container\n    sortedData.forEach((item, index) => {\n      const rowElement = document.createElement('tr');\n      rowElement.classList.add('leaderboard-row');\n      rowElement.id = `leaderboard-row-${index + 1}`;\n\n      // Create and append the \"Rank\" cell\n      const rankCell = document.createElement('td');\n      rankCell.classList.add('leaderboard-rank-item');\n      const indexSuffix = getSuffix(index + 1);\n      rankCell.textContent = `${index + 1}${indexSuffix}`;\n      rowElement.appendChild(rankCell);\n\n      // Create and append the \"Score\" cell\n      const scoreCell = document.createElement('td');\n      scoreCell.classList.add('leaderboard-score-item');\n      scoreCell.textContent = `${item.score}`;\n      rowElement.appendChild(scoreCell);\n\n      // Create and append the \"Name\" cell\n      const nameCell = document.createElement('td');\n      nameCell.classList.add('leaderboard-name-item');\n      nameCell.textContent = `${item.username}`;\n      rowElement.appendChild(nameCell);\n\n      // Append the entire row to the body\n      leaderboardElem.appendChild(rowElement);\n    });\n  });\n}\n","const badWordsArray = [\n  'ass',\n  'fuc',\n  'fuk',\n  'fuq',\n  'fux',\n  'fck',\n  'coc',\n  'cok',\n  'coq',\n  'kox',\n  'koc',\n  'kok',\n  'koq',\n  'cac',\n  'cak',\n  'caq',\n  'kac',\n  'kak',\n  'kaq',\n  'dic',\n  'dik',\n  'diq',\n  'dix',\n  'dck',\n  'pns',\n  'psy',\n  'fag',\n  'fgt',\n  'ngr',\n  'nig',\n  'cnt',\n  'knt',\n  'sht',\n  'dsh',\n  'twt',\n  'bch',\n  'cum',\n  'clt',\n  'kum',\n  'klt',\n  'suc',\n  'suk',\n  'suq',\n  'sck',\n  'lic',\n  'lik',\n  'liq',\n  'lck',\n  'jiz',\n  'jzz',\n  'gay',\n  'gey',\n  'gei',\n  'gai',\n  'vag',\n  'vgn',\n  'sjv',\n  'fap',\n  'prn',\n  'jew',\n  'joo',\n  'gvr',\n  'pus',\n  'pis',\n  'pss',\n  'snm',\n  'tit',\n  'fku',\n  'fcu',\n  'fqu',\n  'hor',\n  'slt',\n  'jap',\n  'wap',\n  'wop',\n  'kik',\n  'kyk',\n  'kyc',\n  'kyq',\n  'dyk',\n  'dyq',\n  'dyc',\n  'kkk',\n  'jyz',\n  'prk',\n  'prc',\n  'prq',\n  'mic',\n  'mik',\n  'miq',\n  'myc',\n  'myk',\n  'myq',\n  'guc',\n  'guk',\n  'guq',\n  'giz',\n  'gzz',\n  'sex',\n  'sxx',\n  'sxi',\n  'sxe',\n  'sxy',\n  'xxx',\n  'wac',\n  'wak',\n  'waq',\n  'wck',\n  'pot',\n  'thc',\n  'vaj',\n  'vjn',\n  'nut',\n  'std',\n  'lsd',\n  'poo',\n  'azn',\n  'pcp',\n  'dmn',\n  'orl',\n  'anl',\n  'ans',\n  'muf',\n  'mff',\n  'phk',\n  'phc',\n  'phq',\n  'xtc',\n  'tok',\n  'toc',\n  'toq',\n  'mlf',\n  'rac',\n  'rak',\n  'raq',\n  'rck',\n  'sac',\n  'sak',\n  'saq',\n  'pms',\n  'nad',\n  'ndz',\n  'nds',\n  'wtf',\n  'sol',\n  'sob',\n  'fob',\n  'kys',\n];\n\nfunction checkForBadWords(input) {\n  for (const word of badWordsArray) {\n    if (input.includes(word)) {\n      return true; // bad word detected\n    }\n  }\n  return false; // No bad words detected\n}\n\nfunction validateInput() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  if (checkForBadWords(userInput)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport { validateInput };\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\n\nconst SPEED = 0.05;\nconst MULTIPLIER_INTERVAL_MIN = 10000;\nconst MULTIPLIER_INTERVAL_MAX = 21000;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextMultiplierTime;\nexport function setupMultiplier() {\n  nextMultiplierTime = MULTIPLIER_INTERVAL_MIN;\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    multiplier.remove();\n  });\n}\n\nexport function updateMultiplier(delta, speedScale) {\n  document.querySelectorAll('[data-multiplier]').forEach((multiplier) => {\n    incrementCustomProperty(\n      multiplier,\n      '--left',\n      delta * speedScale * SPEED * -1\n    );\n    if (getCustomProperty(multiplier, '--left') <= -100) {\n      multiplier.remove();\n    }\n  });\n\n  if (nextMultiplierTime <= 0) {\n    createMultipliers();\n    nextMultiplierTime =\n      randomNumberBetween(MULTIPLIER_INTERVAL_MIN, MULTIPLIER_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextMultiplierTime -= delta;\n}\n\nexport function getMultiplierRects() {\n  return [...document.querySelectorAll('[data-multiplier]')].map(\n    (multiplier) => {\n      return {\n        id: multiplier.id,\n        rect: multiplier.getBoundingClientRect(),\n        multiplier: multiplier.dataset.multiplier,\n      };\n    }\n  );\n}\n\nfunction getRandomKeyWeighted(obj) {\n  const keys = Object.keys(obj);\n  const probabilities = [0.7, 0.2, 0.1]; // Adjust probabilities as needed\n  const randomValue = Math.random();\n  let cumulativeProbability = 0;\n\n  for (let i = 0; i < keys.length; i++) {\n    cumulativeProbability += probabilities[i];\n    if (randomValue <= cumulativeProbability) {\n      return keys[i];\n    }\n  }\n\n  // Default case (fallback)\n  return keys[keys.length - 1];\n}\n\nfunction createMultipliers() {\n  const multiplier = document.createElement('div');\n  multiplier.dataset.multiplier =\n    multiplierRatios[getRandomKeyWeighted(multiplierRatios)];\n  multiplier.textContent = multiplier.dataset.multiplier;\n  multiplier.classList.add('multiplier', 'floating-item');\n  multiplier.id = Math.random().toString(16).slice(2);\n  setCustomProperty(multiplier, '--left', 100);\n  worldElem.append(multiplier);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst multiplierRatios = {\n  x2: 2,\n  x5: 5,\n  x10: 10,\n};\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\n\nconst SPEED = 0.05;\nconst MAGNET_INTERVAL_MIN = 1000;\nconst MAGNET_INTERVAL_MAX = 1300;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextMagnetTime;\nexport function setupMagnet() {\n  nextMagnetTime = MAGNET_INTERVAL_MIN;\n  document.querySelectorAll('[data-magnet]').forEach((magnet) => {\n    magnet.remove();\n  });\n}\n\nexport function updateMagnet(delta, speedScale) {\n  document.querySelectorAll('[data-magnet]').forEach((magnet) => {\n    incrementCustomProperty(magnet, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(magnet, '--left') <= -100) {\n      magnet.remove();\n    }\n  });\n\n  if (nextMagnetTime <= 0) {\n    createMagnet();\n    nextMagnetTime =\n      randomNumberBetween(MAGNET_INTERVAL_MIN, MAGNET_INTERVAL_MAX) /\n      speedScale;\n  }\n  nextMagnetTime -= delta;\n}\n\nexport function getMagnetRects() {\n  return [...document.querySelectorAll('[data-magnet]')].map((magnet) => {\n    return {\n      id: magnet.id,\n      rect: magnet.getBoundingClientRect(),\n      magnet: magnet.dataset.magnet,\n    };\n  });\n}\n\nfunction createMagnet() {\n  const magnet = document.createElement('div');\n  magnet.dataset.magnet = true;\n  magnet.textContent = 'magnet';\n  magnet.classList.add('magnet', 'bouncing-item');\n  magnet.id = Math.random().toString(16).slice(2);\n  setCustomProperty(magnet, '--left', 100);\n  worldElem.append(magnet);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getHeartRects() {\n  return [...document.querySelectorAll('[data-heart]')].map((heart) => {\n    return {\n      id: heart.id,\n      rect: heart.getBoundingClientRect(),\n      heart: heart.dataset.heart,\n    };\n  });\n}\n","export function getLeafRects() {\n  return [...document.querySelectorAll('[data-leaf]')].map((leaf) => {\n    return {\n      id: leaf.id,\n      rect: leaf.getBoundingClientRect(),\n      heart: leaf.dataset.leaf,\n    };\n  });\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\n\nconst SPEED = 0.05;\nconst STARS_INTERVAL_MIN = 1000;\nconst STARS_INTERVAL_MAX = 1300;\nconst worldElem = document.querySelector('[data-world]');\n\nlet nextStarTime;\nexport function setupStar() {\n  nextStarTime = STARS_INTERVAL_MIN;\n  document.querySelectorAll('[data-star]').forEach((star) => {\n    star.remove();\n  });\n}\n\nexport function updateStar(delta, speedScale) {\n  document.querySelectorAll('[data-star]').forEach((star) => {\n    incrementCustomProperty(star, '--left', delta * speedScale * SPEED * -1);\n    if (getCustomProperty(star, '--left') <= -100) {\n      star.remove();\n    }\n  });\n\n  if (nextStarTime <= 0) {\n    createStars();\n    nextStarTime =\n      randomNumberBetween(STARS_INTERVAL_MIN, STARS_INTERVAL_MAX) / speedScale;\n  }\n  nextStarTime -= delta;\n}\n\nexport function getStarRects() {\n  return [...document.querySelectorAll('[data-star]')].map((star) => {\n    return {\n      id: star.id,\n      rect: star.getBoundingClientRect(),\n      star: star.dataset.star,\n    };\n  });\n}\n\nfunction createStars() {\n  const star = document.createElement('div');\n  star.dataset.star = true;\n  star.textContent = 'star';\n  star.classList.add('star', 'bouncing-item');\n  star.id = Math.random().toString(16).slice(2);\n  setCustomProperty(star, '--left', 100);\n  worldElem.append(star);\n}\n\nfunction randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","//snow particle system\nconst snow = {\n  el: '#snow',\n  density: 12500, // higher = fewer bits\n  maxHSpeed: 1, // How much do you want them to move horizontally\n  minFallSpeed: 0.5,\n  canvas: null,\n  ctx: null,\n  particles: [],\n  colors: [],\n  mp: 1,\n  quit: false,\n  paused: false,\n\n  init() {\n    this.quit = false;\n    this.canvas = document.querySelector(this.el);\n    this.ctx = this.canvas.getContext('2d');\n    this.reset();\n    requestAnimationFrame(this.render.bind(this));\n    window.addEventListener('resize', this.reset.bind(this));\n  },\n  reset() {\n    this.w = window.innerWidth;\n    this.h = window.innerHeight;\n    this.canvas.width = this.w;\n    this.canvas.height = this.h;\n    this.particles = [];\n    this.mp = Math.ceil((this.w * this.h) / this.density);\n    for (let i = 0; i < this.mp; i++) {\n      let size = Math.random() * 1.7 + 3;\n      this.particles.push({\n        x: Math.random() * this.w, //x-coordinate\n        y: Math.random() * this.h, //y-coordinate\n        w: size,\n        h: size,\n        vy: this.minFallSpeed + Math.random(), //density\n        vx: Math.random() * this.maxHSpeed - this.maxHSpeed / 2,\n        fill: '#ffffff',\n        s: Math.random() * 0.2 - 0.1,\n      });\n    }\n  },\n\n  render() {\n    if (this.paused) {\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.w, this.h);\n    this.particles.forEach((p, i) => {\n      p.y += p.vy;\n      p.x += p.vx;\n      this.ctx.fillStyle = p.fill;\n      this.ctx.fillRect(p.x, p.y, p.w, p.h);\n      if (p.x > this.w + 5 || p.x < -5 || p.y > this.h) {\n        p.x = Math.random() * this.w;\n        p.y = -10;\n      }\n    });\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.render.bind(this));\n  },\n\n  togglePause() {\n    this.paused = !this.paused;\n    if (this.paused) {\n      // Pause actions\n      this.quit = true; // Stop the animation loop\n      // Additional pause logic if needed\n    } else {\n      // Resume actions\n      this.quit = false; // Resume the animation loop\n      requestAnimationFrame(this.render.bind(this));\n      // Additional resume logic if needed\n    }\n  },\n\n  destroy() {\n    this.quit = true;\n  },\n};\n\n//confetti particle system\nconst confetti = {\n  el: '#confetti',\n  density: 800,\n  maxHSpeed: 2.1, // Increase max horizontal speed\n  minFallSpeed: 2, // Increase min fall speed\n  canvas: null,\n  ctx: null,\n  particles: [],\n  colors: ['#009CDE', '#ffffff'], // Blue and white colors\n  mp: 1,\n  quit: false,\n  initialFall: true,\n\n  init() {\n    this.particles = [];\n    this.quit = false;\n    this.canvas = document.querySelector(this.el);\n    this.ctx = this.canvas.getContext('2d');\n    this.reset();\n    requestAnimationFrame(this.render.bind(this));\n    window.addEventListener('resize', this.reset.bind(this));\n  },\n\n  // Add a variable to control initial fall\n  initialFall: false,\n\n  reset() {\n    this.w = window.innerWidth;\n    this.h = window.innerHeight;\n    this.canvas.width = this.w;\n    this.canvas.height = this.h;\n    this.particles = [];\n    // Not dense at the beginning, then regular density\n    this.mp = 1500;\n\n    for (let i = 0; i < this.mp; i++) {\n      let size = 0;\n      // Randomly choose between two size ranges\n      if (Math.random() < 0.5) {\n        size = Math.random() * 1.7 + 3; // Smaller particles\n      } else {\n        size = Math.random() * 2 + 4; // Bigger particles\n      }\n\n      // Randomly choose between two height ranges\n      let heightMultiplier = 1;\n      if (Math.random() < 0.5) {\n        heightMultiplier = 2; // 2 times as high\n      }\n\n      let vy = this.initialFall ? 0 : this.minFallSpeed + Math.random();\n      let y = this.initialFall\n        ? Math.random() * this.h\n        : Math.random() * -size * 140;\n      let widthTransition = Math.random() > 0.5 ? 1 : 0.9; // Random width transition value (0 to 1)\n      this.particles.push({\n        x: Math.random() * this.w,\n        y: y,\n        w: size,\n        h: size * heightMultiplier,\n        vy: vy,\n        vx: Math.random() * this.maxHSpeed - this.maxHSpeed / 2,\n        fill: this.colors[Math.floor(Math.random() * this.colors.length)],\n        s: Math.random() * 0.2 - 0.1,\n        angle: Math.random() * 360, // Initialize the angle for rotation\n        rotationSpeed: Math.random() * 1.75 - 0.25, // Initialize the rotation speed\n        widthTransition: widthTransition,\n      });\n      this.initialFall = false;\n    }\n  },\n\n  render() {\n    this.ctx.clearRect(0, 0, this.w, this.h);\n\n    this.particles.forEach((p, i) => {\n      p.x += p.vx;\n      // Apply rotation during the fall\n      p.angle += p.rotationSpeed;\n      p.y += p.vy; // Update the y-coordinate for falling\n\n      // Calculate opacity based on the particle's vertical position\n      const maxOpacity = 1;\n      const minOpacity = 0;\n      const opacityRange = maxOpacity - minOpacity;\n      const normalizedY = p.y / this.h; // Normalize the y-coordinate\n      const opacity = maxOpacity - normalizedY * opacityRange;\n\n      // Calculate width based on width transition value\n      const maxWidth = p.w;\n      const minWidth = 0;\n      const width = minWidth + p.widthTransition * (maxWidth - minWidth);\n\n      // Add rotation to the particles\n      this.ctx.save();\n      this.ctx.translate(p.x + width / 2, p.y + p.h / 2);\n      this.ctx.rotate((Math.PI / 180) * p.angle);\n      this.ctx.globalAlpha = opacity;\n      this.ctx.fillStyle = p.fill;\n      this.ctx.fillRect(-width / 2, -p.h / 2, width, p.h);\n      this.ctx.restore();\n\n      if (p.x > this.w + 5 || p.x < -5 || p.y > this.h) {\n        p.x = Math.random() * this.w;\n        p.y = -10;\n      }\n    });\n\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.render.bind(this));\n  },\n\n  destroy() {\n    this.quit = true;\n  },\n};\n\nexport { confetti, snow };\n","import iceCream from '../public/imgs/buffs/icecream.png';\nimport mittens from '../public/imgs/buffs/mittens.png';\nimport stopwatch from '../public/imgs/buffs/stopwatch.png';\nimport book from '../public/imgs/buffs/book.png';\nimport sneakers from '../public/imgs/buffs/sneakers.png';\nimport coffee from '../public/imgs/buffs/coffee.png';\nimport backpack from '../public/imgs/buffs/backpack.png';\nimport cowbell from '../public/imgs/buffs/cowbell.png';\n\nimport {\n  filetMignonEffect,\n  trustyPocketWatchEffect,\n  booksSmartEffect,\n  sackOfCoinsEffect,\n  togglePause,\n} from '../game-manager';\nimport { confetti } from './particle-systems';\nconst buffOptionsContainer = document.querySelector('.buff-options');\nconst modal = document.getElementById('level-up-modal');\n\nfunction applyBuff(buffName) {\n  // Implement logic to apply the selected buff\n  console.log(`Applying ${buffName}`);\n  buffs[buffName].effect();\n\n  confetti.destroy();\n  // Close the modal\n  modal.style.display = 'none';\n  modal.classList.remove('show-modal');\n  buffOptionsContainer.innerHTML = '';\n  togglePause();\n}\n\nfunction applyStarterBuff(buffName) {\n  // Get all power-up divs\n  const powerUpDivs = document.querySelectorAll('.starter-power-up');\n  // Check if the user already has the selected power-up\n\n  // Find the first available power-up div without a power-up\n  const lastEmptyPowerUp = Array.from(powerUpDivs).find(\n    (powerUpDiv) => !powerUpDiv.querySelector('img')\n  );\n\n  if (lastEmptyPowerUp) {\n    lastEmptyPowerUp.classList.remove('dim');\n\n    // Implement logic to apply the selected buff\n    console.log(`Applying ${buffName}`);\n    starterBuffs[buffName].effect();\n\n    // Add the icon to the power-up div\n    const icon = document.createElement('img');\n    icon.src = starterBuffs[buffName].icon;\n    icon.alt = `${buffName}`;\n    icon.classList.add('w-full');\n    lastEmptyPowerUp.appendChild(icon);\n  }\n  confetti.destroy();\n  // Close the modal\n  modal.style.display = 'none';\n  modal.classList.remove('show-modal');\n  buffOptionsContainer.innerHTML = '';\n  togglePause();\n}\n\nexport function createStarterBuffs() {\n  togglePause();\n  // Show the modal\n  const modal = document.getElementById('level-up-modal');\n  modal.style.display = 'flex';\n  modal.classList.add('show-modal');\n\n  Object.keys(starterBuffs).map((key) => {\n    // Create buff container (use a div as a clickable area)\n    const buffContainer = document.createElement('div');\n    buffContainer.classList.add('buff-container', 'starter-buff');\n    buffContainer.addEventListener('click', () => applyStarterBuff(key));\n\n    // Create flex container for icon and title\n    const flexContainer = document.createElement('div');\n    flexContainer.classList.add('flex-col', 'items-center');\n\n    // Create div to wrap the icon\n    const iconWrapper = document.createElement('div');\n    iconWrapper.classList.add('buff-icon-wrapper');\n\n    // Create icon (adjust the path accordingly)\n    const icon = document.createElement('img');\n    icon.classList.add('buff-icon');\n    icon.src = starterBuffs[key].icon;\n    icon.alt = `${key} Icon`;\n\n    // Create title\n    const title = document.createElement('div');\n    title.classList.add('buff-title', 'uppercase');\n    title.textContent = key;\n\n    // Append icon wrapper and title to flex container\n    flexContainer.appendChild(title);\n    // Append icon to icon wrapper\n    iconWrapper.appendChild(icon);\n    flexContainer.appendChild(iconWrapper);\n\n    // Create description\n    const description = document.createElement('p');\n    description.classList.add('buff-description', 'body');\n    description.textContent = starterBuffs[key].description;\n\n    const buffContainerTop = document.createElement('div');\n    buffContainerTop.classList.add('flex-col');\n\n    // Append flex container and description to buff container\n    buffContainerTop.appendChild(flexContainer);\n    buffContainerTop.appendChild(description);\n    buffContainer.appendChild(buffContainerTop);\n\n    // Append buff container to modal content\n    buffOptionsContainer.appendChild(buffContainer);\n  });\n\n  confetti.init();\n}\n\nexport function createBuffs() {\n  togglePause();\n  // Show the modal\n  const modal = document.getElementById('level-up-modal');\n  modal.style.display = 'flex';\n  modal.classList.add('show-modal');\n\n  Object.keys(buffs).map((key) => {\n    // Create buff container (use a div as a clickable area)\n    const buffContainer = document.createElement('div');\n    buffContainer.classList.add('buff-container');\n    buffContainer.addEventListener('click', () => applyBuff(key));\n\n    // Create flex container for icon and title\n    const flexContainer = document.createElement('div');\n    flexContainer.classList.add('flex-col', 'items-center');\n\n    // Create div to wrap the icon\n    const iconWrapper = document.createElement('div');\n    iconWrapper.classList.add('buff-icon-wrapper');\n\n    // Create icon (adjust the path accordingly)\n    const icon = document.createElement('img');\n    icon.classList.add('buff-icon');\n    icon.src = buffs[key].icon;\n    icon.alt = `${key} Icon`;\n\n    // Create title\n    const title = document.createElement('div');\n    title.classList.add('buff-title', 'uppercase');\n    title.textContent = key;\n\n    // Append icon wrapper and title to flex container\n    flexContainer.appendChild(title);\n    // Append icon to icon wrapper\n    iconWrapper.appendChild(icon);\n    flexContainer.appendChild(iconWrapper);\n\n    // Create description\n    const description = document.createElement('p');\n    description.classList.add('buff-description', 'body');\n    description.textContent = buffs[key].description;\n\n    const buffContainerTop = document.createElement('div');\n    buffContainerTop.classList.add('flex-col');\n\n    // Append flex container and description to buff container\n    buffContainerTop.appendChild(flexContainer);\n    buffContainerTop.appendChild(description);\n    buffContainer.appendChild(buffContainerTop);\n\n    // Append buff container to modal content\n    buffOptionsContainer.appendChild(buffContainer);\n  });\n\n  confetti.init();\n}\n\nconst buffs = {\n  Stopwatch: {\n    description: 'Speed up game speed.',\n    weight: 1,\n    icon: stopwatch,\n    effect: filetMignonEffect,\n  },\n  'Magic Coffee': {\n    description: 'Gain 1 random item.',\n    weight: 1,\n    icon: coffee,\n    effect: filetMignonEffect,\n  },\n  Backpack: {\n    description: 'Open your backpack. Gain 25 random coins.',\n    weight: 1,\n    icon: backpack,\n    effect: sackOfCoinsEffect,\n  },\n  Sundae: {\n    description: 'Enjoy some ice cream. Gain 1 life.',\n    weight: 1,\n    icon: iceCream,\n    effect: filetMignonEffect,\n  },\n};\n\nconst starterBuffs = {\n  Cowbell: {\n    description:\n      'Items with duration last twice as long, items that are instant occur twice.',\n    weight: 1,\n    icon: cowbell,\n    effect: filetMignonEffect,\n  },\n  'New Sneakers': {\n    description: 'Gain the ability to jump twice',\n    weight: 1,\n    icon: sneakers,\n    effect: filetMignonEffect,\n  },\n  'Text book': {\n    description: 'Every level up increases value of coins by 1.',\n    weight: 1,\n    icon: book,\n    effect: booksSmartEffect,\n  },\n  'Luck Mittens': {\n    description:\n      'Your pick up range & item drop frequency is increased by 15%.',\n    weight: 1,\n    icon: mittens,\n    effect: filetMignonEffect,\n  },\n};\n","const phases = {\n  bonus: {\n    totalTime: 15,\n    speedScale: 0.9,\n  },\n  1: {\n    totalTime: 60,\n    speedScale: 0.9,\n  },\n  2: {\n    totalTime: 40,\n    speedScale: 0.4,\n  },\n};\n\nexport { phases };\n","import StateSingleton from '../game-state';\nimport { phases } from './phase-properties';\nconst {\n  getPhaseTimerInterval,\n  getCurrentPhase,\n  setCurrentPhase,\n  setPhaseTimerInterval,\n  updateState,\n  setIsFlagCreated,\n} = StateSingleton;\n\nexport function updatePhase1(timer) {\n  updateState({\n    isCactusRunning: true,\n    isCoinRunning: true,\n    isPlatformRunning: true,\n    isGroundEnemyRunning: true,\n  });\n\n  if (timer > getPhaseTimerInterval()) {\n    console.log(`Phase ${getCurrentPhase()} complete`);\n    setIsFlagCreated(false);\n    setCurrentPhase('bonus');\n    // Set the timer interval for the new phase\n    setPhaseTimerInterval(getPhaseTimerInterval() + phases['bonus'].totalTime);\n  }\n}\n","import StateSingleton from '../game-state';\nimport { phases } from './phase-properties';\n\nconst {\n  getPhaseTimerInterval,\n  setCurrentPhase,\n  setPhaseTimerInterval,\n  getCurrentPhase,\n  updateState,\n  setIsFlagCreated,\n} = StateSingleton;\n\nexport function updatePhase2(timer) {\n  updateState({\n    isPlatformRunning: true,\n    isCactusRunning: true,\n  });\n  if (timer > getPhaseTimerInterval()) {\n    setCurrentPhase('bonus');\n    setIsFlagCreated(false);\n    console.log(`Phase ${getCurrentPhase()} complete`);\n    setPhaseTimerInterval(phases['2'].totalTime);\n  }\n}\n","import StateSingleton from '../game-state';\nimport { updateNotification } from '../game-manager';\nimport { phases } from './phase-properties';\nconst {\n  getPhaseTimerInterval,\n  setCurrentPhase,\n  setPhaseTimerInterval,\n  getLastPhase,\n  setLastPhase,\n  updateState,\n  getCurrentPhase,\n} = StateSingleton;\nexport function updateBonusPhase(timer) {\n  updateState({\n    isCactusRunning: false,\n  });\n  if (timer > getPhaseTimerInterval()) {\n    const incrementPhase = getLastPhase() + 2;\n    setLastPhase(getLastPhase() + 1);\n    console.log(`Phase bonus complete`);\n    // Transition to the next phase\n    setCurrentPhase(incrementPhase);\n    updateNotification(`stage ${getCurrentPhase()}!`);\n    updateState({\n      isGroundLayer2Running: true,\n    });\n    // Set the timer interval for the new phase\n    setPhaseTimerInterval(\n      getPhaseTimerInterval() + phases[`${incrementPhase}`].totalTime\n    );\n  }\n}\n","import {\n  getCustomProperty,\n  incrementCustomProperty,\n  setCustomProperty,\n} from '../utility/updateCustomProperty.js';\nimport StateSingleton from '../game-state.js';\nconst { getIsGroundLayer2Running, getGroundSpeed } = StateSingleton;\nconst SPEED = getGroundSpeed();\nconst bonusLayerElems = document.querySelectorAll('[data-bonus-layer]');\n\nexport function setupBonusLayer() {\n  setCustomProperty(bonusLayerElems[0], '--left', 100);\n  setCustomProperty(bonusLayerElems[1], '--left', 281);\n}\n\nlet isBonusLayerMovedBack = false;\nlet isBonusLayerSetup = true;\nexport function updateBonusLayer(delta, speedScale) {\n  if (!getIsGroundLayer2Running()) {\n    isBonusLayerSetup = false;\n    bonusLayerElems.forEach((bonus) => {\n      incrementCustomProperty(bonus, '--left', delta * speedScale * SPEED * -1);\n      if (getCustomProperty(bonus, '--left') <= -281) {\n        incrementCustomProperty(bonus, '--left', 362);\n      }\n    });\n  } else if (\n    getIsGroundLayer2Running() &&\n    !isBonusLayerMovedBack &&\n    !isBonusLayerSetup\n  ) {\n    setCustomProperty(bonusLayerElems[0], '--left', -77);\n    setCustomProperty(bonusLayerElems[1], '--left', -77);\n    isBonusLayerMovedBack = true;\n  } else if (\n    getIsGroundLayer2Running() &&\n    isBonusLayerMovedBack &&\n    !isBonusLayerSetup\n  ) {\n    bonusLayerElems.forEach((bonus) => {\n      incrementCustomProperty(bonus, '--left', delta * speedScale * SPEED * -1);\n\n      if (getCustomProperty(bonus, '--left') <= -281) {\n        setCustomProperty(bonusLayerElems[0], '--left', 100);\n        setCustomProperty(bonusLayerElems[1], '--left', 281);\n        isBonusLayerSetup = true;\n      }\n    });\n  } else return;\n}\n","// state.js\nconst InterfaceTextElemsSingleton = (function () {\n  // State array to keep track of interfaceTextElems\n  let interfaceTextElemsState = [];\n\n  return {\n    getInterfaceTextElemsState: function () {\n      return interfaceTextElemsState;\n    },\n    updateState: function (newValues) {\n      Object.assign(state, newValues);\n    },\n    addInterfaceTextElem: function (elem) {\n      interfaceTextElemsState.push(elem);\n    },\n    removeInterfaceTextElem: function (elem) {\n      const index = interfaceTextElemsState.indexOf(elem);\n      if (index !== -1) {\n        interfaceTextElemsState.splice(index, 1);\n      }\n    },\n  };\n})();\n\nexport default InterfaceTextElemsSingleton;\n","import { incrementCustomProperty } from '../utility/updateCustomProperty.js';\nimport InterfaceTextElemsSingleton from '../interface-text-elems-state.js';\nimport StateSingleton from '../game-state.js';\n\nconst { getGroundSpeed } = StateSingleton;\nconst { getInterfaceTextElemsState } = InterfaceTextElemsSingleton;\nconst SPEED = getGroundSpeed() / 1.5;\nexport function updateInterfaceText(delta, speedScale) {\n  const interfaceTextElems = getInterfaceTextElemsState();\n\n  interfaceTextElems.forEach((text) => {\n    incrementCustomProperty(text, '--left', delta * speedScale * SPEED * -1);\n  });\n}\n","import StateSingleton from '../game-state';\nimport ItemDropStateSingleton from '../item-drop-state';\nimport { setCustomProperty, getCustomProperty } from './updateCustomProperty';\nimport { worldElem } from '../elements-refs';\nconst { getItemDropState } = ItemDropStateSingleton;\nexport function createCrateItems(elementName, parent) {\n  const element = document.createElement('div');\n  element.dataset[`${elementName}`] = true;\n  element.classList.add(\n    `${elementName}-item-cloud`,\n    `${elementName}-cloud-item-asset`\n  );\n  element.id = Math.random().toString(16).slice(2);\n\n  parent.append(element);\n}\n\nexport function createCrateItemsAboveCrate(elementName, parent) {\n  const element = document.createElement('div');\n  element.dataset.crateItem = true;\n  element.dataset[`${elementName}`] = true;\n  element.classList.add(\n    `${elementName}-collectable-item-translate`,\n    'collectable-crate-item'\n  );\n  element.style.top = 'unset';\n  element.id = Math.random().toString(16).slice(2);\n\n  //removes collider for a moment so the item can track to the player without colliding instantly\n  const state = getItemDropState();\n  state[elementName].colliderSetter(false);\n\n  setCustomProperty(\n    element,\n    '--bottom',\n    getCustomProperty(parent, '--bottom') + 3\n  );\n  setCustomProperty(element, '--left', getCustomProperty(parent, '--left'));\n  worldElem.appendChild(element);\n  element.addEventListener('animationend', () => {\n    state[elementName].colliderSetter(true);\n    element.dataset.itemLocked = true;\n    setCustomProperty(\n      element,\n      '--bottom',\n      getCustomProperty(parent, '--bottom') + 15\n    );\n  });\n}\n","import {\n  setCustomProperty,\n  incrementCustomProperty,\n  getCustomProperty,\n} from '../utility/updateCustomProperty';\nimport crate1Img from '../public/imgs/Crate/Crate-1.png';\nimport crate2Img from '../public/imgs/Crate/Crate-2.png';\nimport { getDinoRect } from './player-controller';\nimport { normalizeWeights, getRandomWeighted } from './platform';\nimport { isCollision } from '../game-manager';\nimport StateSingleton from '../game-state';\nimport ItemDropStateSingleton from '../item-drop-state';\nimport { createCrateItemsAboveCrate } from '../utility/crate-items';\nimport { worldElem } from '../elements-refs';\nimport { moveItemToPlayer } from './coin';\nconst { getIsCrateRunning, getGroundSpeed } = StateSingleton;\nconst { getItemDropState } = ItemDropStateSingleton;\n\nconst SPEED = getGroundSpeed();\nconst crate_INTERVAL_MIN = 1000;\nconst crate_INTERVAL_MAX = 1500;\n\nlet nextCrateTime;\nexport function setupCrate() {\n  nextCrateTime = crate_INTERVAL_MIN;\n  document.querySelectorAll('[data-crate]').forEach((crate) => {\n    crate.remove();\n  });\n}\n\nexport function updateCrate(delta, speedScale) {\n  const dinoRect = getDinoRect();\n\n  document\n    .querySelectorAll('[data-crate-container]')\n    .forEach((crateContainer) => {\n      // Get positions of the dinosaur and crate\n      const crateContainerRect = crateContainer.getBoundingClientRect();\n      const collision = isCollision(dinoRect, crateContainerRect);\n      if (collision && !crateContainer.dataset.didCollide) {\n        const crate = crateContainer.querySelector('img');\n        crate.src = crate2Img;\n        crateContainer.dataset.didCollide = true;\n        createCrateItemsAboveCrate(\n          getRandomWeighted(normalizedCrateItemWeights),\n          crateContainer\n        );\n      }\n      incrementCustomProperty(\n        crateContainer,\n        '--left',\n        delta * speedScale * SPEED * -1\n      );\n      if (getCustomProperty(crateContainer, '--left') <= -100) {\n        crateContainer.remove();\n      }\n    });\n\n  const crateItems = document.querySelectorAll('[data-crate-item]');\n  // if any crate items exist then move them to player\n  if (crateItems.length > 0) {\n    crateItems.forEach((crateItem) => {\n      incrementCustomProperty(\n        crateItem,\n        '--left',\n        delta * speedScale * SPEED * -1\n      );\n      if (crateItem.dataset.itemLocked) {\n        const crateItemRect = crateItem.getBoundingClientRect();\n        // Calculate distance\n        const distance = Math.sqrt(\n          Math.pow(dinoRect.x - crateItemRect.x, 2) +\n            Math.pow(dinoRect.y - crateItemRect.y, 2)\n        );\n        moveItemToPlayer(\n          dinoRect,\n          crateItem,\n          crateItemRect,\n          distance,\n          delta,\n          0.02\n        );\n      }\n    });\n  }\n  if (nextCrateTime <= 0 && getIsCrateRunning()) {\n    createCrate();\n    nextCrateTime =\n      randomNumberBetween(crate_INTERVAL_MIN, crate_INTERVAL_MAX) / speedScale;\n  }\n  nextCrateTime -= delta;\n}\n\nexport function getCrateRects() {\n  return [...document.querySelectorAll('[data-crate]')].map((crate) => {\n    return crate.getBoundingClientRect();\n  });\n}\n\nconst normalizedCrateItemWeights = normalizeWeights(getItemDropState());\nfunction createCrate() {\n  const crate = document.createElement('img');\n  const parentContainer = document.createElement('div');\n  parentContainer.dataset.crateContainer = true;\n  parentContainer.classList.add('crate-parent-container');\n\n  crate.src = crate1Img;\n  crate.dataset.crate = true;\n  crate.classList.add('crate', 'game-element');\n  crate.id = `crate-${Math.random()}`;\n  parentContainer.append(crate);\n  setCustomProperty(parentContainer, '--left', 100);\n  worldElem.append(parentContainer);\n}\nexport function randomNumberBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import redGem from '../public/imgs/red-gem/red-gem.png';\nimport blueGem from '../public/imgs/blue-gem/blue-gem.png';\nimport greenGem from '../public/imgs/green-gem/green-gem.png';\n\nexport function applyGem(gemName) {\n  // Get all power-up divs\n  const powerUpDivs = document.querySelectorAll('.power-up');\n\n  // Check if the user already has the selected power-up\n  const existingPowerUp = Array.from(powerUpDivs).find(\n    (powerUpDiv) =>\n      powerUpDiv.querySelector('img') &&\n      powerUpDiv.querySelector('img').alt.includes(gemName)\n  );\n\n  if (existingPowerUp) {\n    // User already has the power-up, increment the rank\n    const existingRank = existingPowerUp.querySelector('.power-up-rank');\n    const existingRankValue = parseInt(existingRank.textContent);\n    existingRank.textContent = `${existingRankValue + 1}`;\n  } else {\n    // Find the first available power-up div without a power-up\n    const lastEmptyPowerUp = Array.from(powerUpDivs).find(\n      (powerUpDiv) => !powerUpDiv.querySelector('img')\n    );\n\n    if (lastEmptyPowerUp) {\n      // Add the icon to the power-up div\n      const icon = document.createElement('img');\n      icon.src = collectableGems[gemName].icon;\n      icon.alt = `${gemName}`;\n      icon.classList.add('w-full');\n      lastEmptyPowerUp.appendChild(icon);\n\n      // Add the rank to the power-up div\n      const rank = document.createElement('div');\n      rank.classList.add('power-up-rank', 'sans');\n      rank.textContent = '1';\n      lastEmptyPowerUp.appendChild(rank);\n    }\n  }\n}\n\nconst collectableGems = {\n  'red-gem': {\n    icon: redGem,\n  },\n  'blue-gem': {\n    icon: blueGem,\n  },\n  'green-gem': {\n    icon: greenGem,\n  },\n};\n","import { updateGround, setupGround } from './elements/ground.js';\nimport {\n  updateGroundLayerTwo,\n  setupGroundLayerTwo,\n} from './elements/groundLayerTwo';\nimport {\n  updateGroundLayerTwoTwo,\n  setupGroundLayerTwoTwo,\n} from './elements/groundLayerTwoTwo';\nimport {\n  updateGroundLayerThree,\n  setupGroundLayerThree,\n} from './elements/groundLayerThree';\nimport {\n  updateDino,\n  setupDino,\n  getDinoRect,\n  setDinoLose,\n  handleIdle,\n} from './elements/player-controller.js';\nimport {\n  updateCactus,\n  setupCactus,\n  getCactusRects,\n} from './elements/cactus.js';\nimport {\n  updateGroundEnemy,\n  setupGroundEnemy,\n  getGroundEnemyRects,\n} from './elements/ground-enemy';\nimport { updateBird, setupBird, getBirdRects } from './elements/bird.js';\nimport {\n  updatePlatform,\n  setupPlatform,\n  getPlatformRects,\n} from './elements/platform.js';\nimport { createLeaderboard, getSuffix } from './elements/leaderboard.js';\nimport { soundController } from './utility/sound-controller.js';\nimport {\n  getAllHighScoreUsers,\n  handleNewHighScore,\n  handleSortAndDeleteLastEntry,\n} from './apis.js';\nimport { validateInput } from './utility/validate-input.js';\nimport {\n  setupMultiplier,\n  updateMultiplier,\n  getMultiplierRects,\n} from './elements/score-multiplier.js';\nimport {\n  setupMagnet,\n  getMagnetRects,\n  updateMagnet,\n} from './elements/magnet.js';\nimport { getHeartRects } from './elements/heart.js';\nimport { getLeafRects } from './elements/leaf.js';\nimport { setupStar, updateStar, getStarRects } from './elements/star.js';\nimport { setupCoin, updateCoin, getCoinRects } from './elements/coin.js';\nimport muteImg from './public/imgs/icons/Speaker-Off.png';\nimport unmuteImg from './public/imgs/icons/Speaker-On.png';\nimport pauseImg from './public/imgs/icons/Pause.png';\nimport playImg from './public/imgs/icons/Play.png';\nimport redoImg from './public/imgs/icons/Redo.png';\nimport foregroundImg from './public/imgs/backgrounds/Foreground-Trees.png';\nimport { createBuffs, createStarterBuffs } from './elements/buff.js';\nimport StateSingleton from './game-state.js';\nimport {\n  worldElem,\n  scoreElem,\n  highScoreElem,\n  startScreenElem,\n  endScreenElem,\n  gameOverTextElem,\n  gameOverIconElem,\n  leaderboardElem,\n  scoreMultiplierElem,\n  scoreNewHighScoreElem,\n  scoreErrorMessageElem,\n  multiplierTimerElem,\n  tickerElem,\n  tickerElem2,\n  tickerElem3,\n  livesElem,\n  dinoElem,\n  scrollableTableElem,\n  currentMultiplierElem,\n  plusPointsElem,\n  tickerContainerElem,\n  loadingTextElem,\n  submitNewScoreFormElem,\n  interfaceComboContainer,\n  currentMultiplierScoreElem,\n  currentComboScoreContainer,\n  timerProgress,\n  currentGameTimerElem,\n  gameLoadingScreenElem,\n  gameLoadingTextElem,\n  gameNotificationElem,\n  pausedScreenElem,\n  bonusElem,\n} from './elements-refs';\nimport { toggleElemOff, toggleElemOn } from './utility/toggle-element.js';\nimport { snow } from './elements/particle-systems.js';\nimport { phases } from './phases/phase-properties.js';\nimport { updatePhase1 } from './phases/phase1.js';\nimport { updatePhase2 } from './phases/phase2.js';\nimport { updateBonusPhase } from './phases/bonus-phase.js';\nimport { setupBonusLayer, updateBonusLayer } from './elements/bonus-layer.js';\nimport { updateInterfaceText } from './utility/update-interface-text.js';\nimport InterfaceTextElemsSingleton from './interface-text-elems-state.js';\nimport { setupCrate, updateCrate } from './elements/crate.js';\nimport { updateGroundQue } from './elements/groundQue.js';\nimport { applyGem } from './elements/gem-collection.js';\nconst { removeInterfaceTextElem, addInterfaceTextElem } =\n  InterfaceTextElemsSingleton;\nconst {\n  setMultiplierRatio,\n  getMultiplierRatio,\n  getTimerInterval,\n  setTimerInterval,\n  setMultiplierTimer,\n  getMultiplierTimer,\n  getSpeedScale,\n  getSpeedScaleIncrease,\n  getStarDuration,\n  getPlayerImmunity,\n  setPlayerImmunity,\n  getHasStar,\n  setHasStar,\n  getGravityFallAdjustment,\n  setGravityFallAdjustment,\n  getSelectedStarter,\n  setSelectedStarter,\n  getCurrentPhase,\n  setJumpCountLimit,\n  getLeafDuration,\n  setHasLeaf,\n  getIsStarColliding,\n  getIsHeartColliding,\n  getIsMagnetColliding,\n  getIsLeafColliding,\n  getIsGroundLayer2Running,\n} = StateSingleton;\nconst WORLD_WIDTH = 100;\nconst WORLD_HEIGHT = 45;\nexport let SPEED_SCALE_INCREASE = 0.00001;\n\nlet showLeaderboard = false;\n\n// const playAgainButtonElem = document.querySelector('[data-play-again]');\n\n// playAgainButtonElem.addEventListener('click', function () {\n//   handleStart(); // Add any other actions you want to perform on button click\n// });\nsetPixelToWorldScale();\ncreateLeaderboard(leaderboardElem);\nsnow.init();\nwindow.addEventListener('resize', setPixelToWorldScale);\ndocument.addEventListener('keydown', handleStart, { once: true });\ndocument.addEventListener('touchstart', handleStart, { once: true });\nlet lastTime;\nlet score;\nlet idleIntervalId;\nlet collisionOccurred = false; // Flag to track collision\nlet milestone = 25;\n//init highScore elem\nhighScoreElem.textContent = localStorage.getItem('lion-high-score')\n  ? localStorage.getItem('lion-high-score')\n  : Math.floor('0').toString().padStart(6, 0);\nlet hasBeatenScore = false;\nlet isPaused = false;\nlet immunityDuration = 2000; // Example: 2000 milliseconds (2 seconds)\nscrollableTableElem.classList.add('hide-element');\nscrollableTableElem.style.display = 'none';\nworldElem.setAttribute('transition-style', 'in:circle:center');\ntickerContainerElem.classList.add('hide-element');\ntickerContainerElem.classList.remove('show-element');\nconst pauseIconButton = document.getElementById('pause-icon-button');\n\nconst shareContainer = document.getElementById('share-container');\nconst shareButton = document.getElementById('shareButton');\n\nshareContainer.addEventListener('mouseenter', () => {\n  shareButton.classList.add('transparent-background');\n});\n\nshareContainer.addEventListener('mouseleave', () => {\n  shareButton.classList.remove('transparent-background');\n});\n\n// function typeLoadingText(elem) {\n//   setTimeout(() => {\n//     typeLettersWithoutSpaces(0, '...Oh no', elem, 100);\n//   }, 400);\n//   setTimeout(() => {\n//     // Set white-space CSS style to allow line breaks\n//     elem.style.whiteSpace = 'pre-line';\n//     // Add a line break before the second line\n//     elem.textContent += '\\n';\n//     typeLettersWithoutSpaces(0, 'Gotta get to class!', elem, 100);\n//   }, 3000);\n// }\n\n// typeLoadingText(gameLoadingTextElem);\n\nfunction copyCurrentLink() {\n  var input = document.createElement('input');\n  input.value = window.location.href;\n  document.body.appendChild(input);\n  input.select();\n  document.execCommand('copy');\n  document.body.removeChild(input);\n\n  // Change the button text to \"Copied!\"\n  document.getElementById('copy-link-button').textContent = 'Copied!';\n\n  // Change it back to \"Copy link\" after a delay (e.g., 2 seconds)\n  setTimeout(function () {\n    document.getElementById('copy-link-button').textContent = 'Copy link';\n  }, 2000);\n}\n\nif (document.getElementById('copy-link-button')) {\n  document\n    .getElementById('copy-link-button')\n    .addEventListener('click', copyCurrentLink);\n}\n\nconst pauseButton = document.getElementById('pauseButton');\npauseButton.addEventListener('click', function () {\n  togglePause();\n  if (pausedScreenElem.style.display === 'flex') {\n    pausedScreenElem.style.display = 'none';\n  } else {\n    pausedScreenElem.style.display = 'flex';\n  }\n  pauseButton.blur();\n});\n\nlet immunityTimeout;\n\n// Function to set player immunity\nfunction setTimedPlayerImmunity(duration) {\n  setPlayerImmunity(true);\n  // Clear any existing timeout\n  clearTimeout(immunityTimeout);\n\n  // Set a new timeout\n  immunityTimeout = setTimeout(\n    () => {\n      setPlayerImmunity(false);\n    },\n    duration ? duration : immunityDuration\n  );\n\n  // Check if getHasStar is true, and cancel the timeout if needed\n  if (getHasStar()) {\n    clearTimeout(immunityTimeout);\n  }\n}\n\nidleIntervalId = setInterval(handleIdle, 300);\n\nfunction updateElements() {}\n\nlet deltaAdjustment = 1;\nlet currentSpeedScale = getSpeedScale();\nlet isUpdatedSpeedScale = false;\nlet decelerationFactor = 0.95; // Adjust the deceleration factor as needed\n\nfunction deleteLetters(index, elem, timeout) {\n  const text = elem.textContent;\n  if (index >= 0) {\n    elem.textContent = text.substring(0, index);\n    setTimeout(() => {\n      deleteLetters(index - 1, elem, timeout);\n    }, timeout); // Use the provided timeout\n  } else {\n  }\n}\n\nexport function updateNotification(\n  notification,\n  deleteLettersDelay = 3000,\n  typeLettersDelay = 1000\n) {\n  const timeout = 125;\n  setTimeout(() => {\n    typeLettersWithoutSpaces(0, notification, gameNotificationElem, 100);\n    // After a delay, start deleting the letters in reverse order\n\n    setTimeout(() => {\n      deleteLetters(\n        gameNotificationElem.textContent.length - 1,\n        gameNotificationElem,\n        timeout\n      );\n    }, deleteLettersDelay);\n  }, typeLettersDelay);\n}\n\nfunction checkCollisions() {\n  if (checkLose()) return handleLose();\n  checkMultiplierCollision();\n  checkCoinCollision();\n  if (getIsStarColliding()) {\n    checkStarCollision();\n  }\n\n  if (getIsHeartColliding()) {\n    checkHeartCollision();\n  }\n  if (getIsMagnetColliding()) {\n    checkMagnetCollision();\n  }\n  if (getIsLeafColliding()) {\n    checkLeafCollision();\n  }\n}\n\nconst phaseUpdateFunctions = {\n  1: updatePhase1,\n  bonus: updateBonusPhase,\n  2: updatePhase2,\n};\n\nfunction update(time) {\n  if (isPaused) {\n    // Do nothing if the game is paused\n    return;\n  }\n\n  if (lastTime == null) {\n    lastTime = time;\n    window.requestAnimationFrame(update);\n    return;\n  }\n\n  let baseDelta = 5;\n  // let delta = time - lastTime;\n  let delta = baseDelta;\n  if (collisionOccurred && !getPlayerImmunity()) {\n    setTimedPlayerImmunity();\n    togglePause();\n    setTimeout(() => {\n      collisionOccurred = false; // Reset the collision flag after the delay\n      togglePause();\n    }, 400);\n    return; // Pause the update during the delay\n  }\n\n  const updateFunction = phaseUpdateFunctions[getCurrentPhase()];\n  if (updateFunction) {\n    updateFunction(timer, delta, currentSpeedScale);\n  }\n  updateGroundLayerTwoTwo(delta, currentSpeedScale);\n  // updateBonusLayer(delta, currentSpeedScale);\n  updateGround(delta, currentSpeedScale);\n  updateGroundLayerThree(delta, currentSpeedScale);\n  updateGroundLayerTwo(delta, currentSpeedScale);\n  updateCactus(delta, currentSpeedScale);\n  // updateBird(delta, currentSpeedScale);\n  // updateGroundEnemy(delta, currentSpeedScale);\n  // updatePlatform(delta, currentSpeedScale);\n  // updateFlag(delta, currentSpeedScale);\n  updateInterfaceText(delta, currentSpeedScale);\n  // updateMultiplier(delta, currentSpeedScale);\n  // updateMagnet(delta, currentSpeedScale);\n  updateCoin(delta, currentSpeedScale);\n  // updateCrate(delta, currentSpeedScale);\n  updateDino(\n    delta,\n    currentSpeedScale,\n    getGravityFallAdjustment(),\n    getSelectedStarter()\n  );\n  updateSpeedScale(delta);\n  updateScore(delta);\n  updateGroundQue(delta, currentSpeedScale);\n  checkCollisions();\n  lastTime = time;\n  window.requestAnimationFrame(update);\n}\n\nfunction createOneUpText(element) {\n  soundController.beatScore.play();\n  const newElement = document.createElement('div');\n  newElement.classList.add('one-up', 'sans');\n  newElement.style.position = 'absolute';\n  element.appendChild(newElement);\n  newElement.textContent = '1UP';\n  newElement.addEventListener('animationend', () => {\n    newElement.remove();\n  });\n  return true;\n}\n\nlet currentComboScore = 0; // Initialize the current combo score variable\n\nfunction resetMultiplier() {\n  toggleElemOff(interfaceComboContainer);\n  toggleElemOff(currentComboScoreContainer);\n  clearInterval(getTimerInterval());\n  setTimerInterval(null);\n  currentComboScore = 0;\n  timerProgress.style.width = '100%'; // Set the progress bar to full width\n  setMultiplierTimer(5000);\n  currentMultiplierElem.textContent = 'x1';\n  currentMultiplierScoreElem.textContent = '0';\n  setMultiplierRatio(1);\n}\n\nfunction startMultiplierTimer() {\n  clearInterval(getTimerInterval());\n  setMultiplierTimer(5000);\n  const timerInterval = setInterval(() => {\n    setMultiplierTimer(getMultiplierTimer() - 100); // Subtract 100 milliseconds (adjust as needed)\n    const progressValue = (getMultiplierTimer() / 5000) * 100; // Calculate progress value\n\n    if (getMultiplierTimer() <= 0) {\n      resetMultiplier();\n    } else {\n      timerProgress.style.width = `${progressValue}%`;\n    }\n  }, 100); // Update every 100 milliseconds\n  setTimerInterval(timerInterval);\n}\n\nexport function checkForCrateItem(element) {\n  if (element.dataset.crateItem && !element.dataset.itemLocked) return false;\n}\n\nfunction checkMultiplierCollision() {\n  const dinoRect = getDinoRect();\n  getMultiplierRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      // soundController.beatScore.play();\n      document.getElementById(element.id).remove();\n      let currentMultiplierRatio = getMultiplierRatio();\n      // Multiply the existing multiplier by the newly collided multiplier\n      if (currentMultiplierRatio === 1) {\n        currentMultiplierRatio += parseInt(element.multiplier) - 1;\n        setMultiplierRatio(currentMultiplierRatio);\n      } else {\n        currentMultiplierRatio += parseInt(element.multiplier);\n        setMultiplierRatio(currentMultiplierRatio);\n      }\n      updateMultiplierInterface();\n      return true;\n    }\n  });\n}\n\nexport function updateMultiplierInterface() {\n  toggleElemOn(interfaceComboContainer);\n  toggleElemOn(currentComboScoreContainer);\n  clearInterval(getTimerInterval());\n  startMultiplierTimer();\n  currentMultiplierElem.textContent = `x${getMultiplierRatio()}`;\n}\n\nconst duration = 1000;\nconst updateInterval = 50;\n\nfunction randomArc(element) {\n  // Set random horizontal movement values\n  const randomXEnd = Math.random() * 100 - 50; // Adjust the range based on your preference\n  document.documentElement.style.setProperty(\n    '--random-x-end',\n    randomXEnd + 'px'\n  );\n}\n\nfunction calculateFontSize(points) {\n  return Math.min(12 + points * 0.01, 36);\n}\n\nlet goldCoinCounter = 0;\nlet redGemMultiplier = 1;\n\nfunction checkCoinCollision() {\n  const dinoRect = getDinoRect();\n  getCoinRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const coinElement = document.getElementById(element.id);\n\n      // Create a pickup text element\n      const newElement = document.createElement('div');\n      if (coinElement.dataset.gem === 'true') {\n        applyGem(coinElement.dataset.type);\n      } else {\n        addPickupText(newElement, coinElement);\n      }\n      coinElement.remove();\n      setTimeout(() => {\n        newElement.remove();\n      }, 600);\n\n      // Remove the coin and update points\n      soundController.pickupCoin.play();\n      return true;\n    }\n  });\n}\n\nfunction createOneUpTextAtPosition(position) {\n  soundController.beatScore.play();\n  const newElement = document.createElement('div');\n  newElement.classList.add('one-up', 'moving-interface-text');\n  newElement.style.position = 'absolute';\n  newElement.dataset.interfaceText = true;\n  // Set the position based on the provided coordinates\n  newElement.style.top = `${position.y - 100}px`;\n  worldElem.appendChild(newElement);\n  newElement.textContent = '1UP';\n\n  // Store the created element in the array\n  addInterfaceTextElem(newElement);\n\n  // Listen for the animationend event to remove the element\n  newElement.addEventListener('animationend', () => {\n    newElement.remove();\n    removeInterfaceTextElem(newElement);\n  });\n\n  return true;\n}\n\nfunction checkHeartCollision() {\n  const dinoRect = getDinoRect();\n  getHeartRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const collisionPosition = { x: dinoRect.x, y: dinoRect.y };\n\n      let currentLives = parseInt(livesElem.textContent, 10);\n      currentLives += 1;\n      livesElem.textContent = currentLives;\n      const heartElement = document.getElementById(element.id);\n      createOneUpTextAtPosition(collisionPosition);\n      heartElement.remove();\n      // // Add a class to dinoElem\n\n      // // Set a timeout to remove the class after the star duration\n      // setTimeout(() => {\n\n      //   // Remove the class from dinoElem after the star duration\n      // }, 100);\n\n      return true;\n    }\n  });\n}\n\nfunction checkLeafCollision() {\n  const dinoRect = getDinoRect();\n  getLeafRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const leaf = document.getElementById(element.id);\n      setHasLeaf(true);\n      setJumpCountLimit(4);\n      leaf.remove();\n      setTimeout(() => {\n        setHasLeaf(false);\n        setJumpCountLimit(1);\n      }, getLeafDuration());\n      return true;\n    }\n  });\n}\n\nfunction checkStarCollision() {\n  const dinoRect = getDinoRect();\n  getStarRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const starElement = document.getElementById(element.id);\n      starElement.remove();\n      setHasStar(true);\n      // Add a class to dinoElem\n      dinoElem.classList.add('star-invincible');\n\n      // Set a timeout to remove the class after the star duration\n      setTimeout(() => {\n        setHasStar(false);\n        setPlayerImmunity(false);\n        // Remove the class from dinoElem after the star duration\n        dinoElem.classList.remove('star-invincible');\n      }, getStarDuration());\n      setTimedPlayerImmunity(getStarDuration());\n\n      return true;\n    }\n  });\n}\n\nfunction checkMagnetCollision() {\n  const dinoRect = getDinoRect();\n  getMagnetRects().some((element) => {\n    if (isCollision(element.rect, dinoRect)) {\n      const magnetElement = document.getElementById(element.id);\n      magnetElement.remove();\n      document.querySelectorAll('[data-coin]').forEach((coin) => {\n        coin.dataset.locked = 'true';\n        coin.dataset.isMagnetLocked = 'true';\n        coin.dataset.isLocking === 'false';\n      });\n      return true;\n    }\n  });\n}\n\n// setTimeout(() => {\n//   collisionOccurred = false;\n//   dinoElem.classList.remove('flash-animation');\n//   dinoElem.classList.add('flash-light-animation');\n// }, 400);\n// setTimeout(() => {\n//   collisionOccurred = false;\n//   dinoElem.classList.remove('flash-light-animation');\n// }, 1600);\n\nconst lastMultiplierScore = document.querySelector(\n  '[data-last-multiplier-score]'\n);\n\nfunction addPickupText(text, pickupElement) {\n  if (!getIsGroundLayer2Running()) {\n    text.classList.add('plus-points-navy', 'sans');\n  } else {\n    text.classList.add('plus-points', 'sans');\n  }\n  text.style.position = 'absolute';\n  text.style.left = pickupElement.offsetLeft + 'px';\n  text.style.top = pickupElement.offsetTop - 70 + 'px';\n  randomArc(text);\n  pickupElement.parentNode.insertBefore(text, pickupElement);\n  let pickupPoints, points;\n  let currentMultiplierRatio = getMultiplierRatio();\n\n  pickupPoints = pickupElement?.dataset?.points;\n  points = pickupPoints * currentMultiplierRatio;\n\n  updateScoreWithPoints(points);\n  const fontSize = calculateFontSize(points);\n  text.style.fontSize = fontSize + 'px';\n  text.textContent = `+${points}`;\n  // Add a div inside the lastMultiplierScore\n  const innerDiv = document.createElement('div');\n  innerDiv.textContent = `+${pickupPoints}x${currentMultiplierRatio}`;\n  innerDiv.classList.add('inner-plus-points', 'sans');\n\n  // Check if there is an existing innerDiv, remove it if present\n  const existingInnerDiv =\n    lastMultiplierScore.querySelector('.inner-plus-points');\n  if (existingInnerDiv) {\n    existingInnerDiv.remove();\n  }\n\n  // Append the new innerDiv inside lastMultiplierScore\n  lastMultiplierScore.appendChild(innerDiv);\n\n  if (innerDiv) {\n    // Remove the new innerDiv after 1 second\n    setTimeout(() => {\n      innerDiv.remove();\n    }, 1000);\n  }\n}\n\nlet scoreSinceMilestone = 0;\n\nexport function updateScoreWithPoints(delta) {\n  const initialScore = score;\n  const increments = Math.ceil(duration / updateInterval);\n  const incrementAmount = delta / increments;\n  let currentMultiplierRatio = getMultiplierRatio();\n  const intervalId = setInterval(() => {\n    score += incrementAmount;\n    scoreSinceMilestone += incrementAmount;\n    scoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n\n    if (currentMultiplierRatio > 1) {\n      currentComboScore += incrementAmount;\n      currentMultiplierScoreElem.textContent = Math.floor(currentComboScore)\n        .toString()\n        .padStart(1, 0);\n    }\n    if (score >= initialScore + delta) {\n      // Stop the interval when the target score is reached\n      clearInterval(intervalId);\n    }\n  }, updateInterval);\n}\n\nfunction checkLose() {\n  //init dino rect\n  const dinoRect = getDinoRect();\n\n  const cactusRects = getCactusRects();\n  const birdRects = getBirdRects();\n  const groundEnemyRects = getGroundEnemyRects();\n  const allEnemyRects = [...cactusRects, ...birdRects, ...groundEnemyRects];\n\n  //init enemy and player collision state\n  const isEnemyAndPlayerCollision = allEnemyRects.some((rect) =>\n    isCollision(rect, dinoRect)\n  );\n\n  //if no lives remain then lose\n  if (livesElem.textContent === '0') {\n    worldElem.setAttribute('transition-style', 'out:circle:hesitate');\n    worldElem.classList.remove('stop-time'); // Add the class to stop time\n    return true;\n  } //check if enemy and player are in colliding\n  else if (isEnemyAndPlayerCollision && !getPlayerImmunity() && !getHasStar()) {\n    //check if player is not in previous collision state\n    if (!collisionOccurred) {\n      // decrement lives elem by 1\n      soundController.takeDamage.play();\n      let currentLives = parseInt(livesElem.textContent, 10);\n      if (!isNaN(currentLives)) {\n        currentLives -= 1;\n        livesElem.textContent = currentLives;\n      }\n      resetMultiplier();\n      //switch player collision state to true\n      collisionOccurred = true;\n      //set player to flash\n      dinoElem.classList.add('flash-animation');\n      //set world update pause\n      worldElem.classList.add('stop-time'); // Add the class to stop time\n      //set timeout for world update pause\n\n      // // Set a timeout to reset player collision state and player flash\n      setTimeout(() => {\n        dinoElem.classList.remove('flash-animation');\n        dinoElem.classList.add('flash-light-animation');\n      }, 400);\n      setTimeout(() => {\n        collisionOccurred = false;\n        dinoElem.classList.remove('flash-light-animation');\n      }, 1600);\n    }\n  } else if (isEnemyAndPlayerCollision && getPlayerImmunity()) {\n  }\n}\n\nconst muteButton = document.getElementById('muteButton');\nlet soundControllerMuted = false;\nconst muteIconButton = document.getElementById('mute-icon-button');\n//mute/unmute function\nmuteButton.addEventListener('click', function () {\n  if (!soundControllerMuted) {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(true);\n    });\n    muteIconButton.src = muteImg;\n    soundControllerMuted = true;\n    muteButton.blur();\n  } else {\n    Object.keys(soundController).forEach(function (key) {\n      soundController[key].mute(false);\n    });\n    muteIconButton.src = unmuteImg;\n    soundControllerMuted = false;\n    muteButton.blur();\n  }\n});\n\nexport function isCollision(rect1, rect2) {\n  return (\n    rect1.left < rect2.right &&\n    rect1.top < rect2.bottom &&\n    rect1.right > rect2.left &&\n    rect1.bottom > rect2.top\n  );\n}\n\nfunction updateSpeedScale(delta) {\n  currentSpeedScale += delta * getSpeedScaleIncrease();\n}\n\n// Assuming you have the necessary elements in your HTML\nconst levelBarElem = document.getElementById('levelBar');\nconst levelDisplayElem = document.getElementById('levelDisplay');\n\nfunction calculateNextMilestone(currentMilestone) {\n  // You can customize the growth rate based on your requirements\n  const growthRate = 2; // Adjust this as needed\n  return Math.floor(currentMilestone * growthRate);\n}\n\nfunction handleLevelUp() {\n  scoreSinceMilestone = 0;\n  // Increment the level\n  const currentLevel = parseInt(levelDisplayElem.textContent, 10);\n  levelDisplayElem.textContent = currentLevel + 1;\n  if (getSelectedStarter() === 'Text book') {\n    currentPassives.forEach((item) => {\n      const currentItem = collectableOptions.find(\n        (curItem) => curItem.type === item.type\n      );\n\n      item.lastValue = currentItem.points;\n      item.effect(incrementAdjustment);\n    });\n  }\n  if (currentLevel === 1) {\n    createStarterBuffs();\n  } else {\n    createBuffs();\n  }\n  // Reset the progress bar to 0\n  levelBarElem.value = 0;\n  // Update the milestone for the next level\n  milestone = calculateNextMilestone(milestone);\n}\n\nfunction updateScore(delta) {\n  score += delta * 0.01;\n  scoreSinceMilestone += delta * 0.01;\n  scoreElem.textContent = Math.floor(score).toString().padStart(6, '0');\n\n  // Update the level bar\n  let progress = (scoreSinceMilestone / milestone) * 100;\n  levelBarElem.value = progress;\n\n  if (\n    score > highScoreElem.textContent &&\n    !hasBeatenScore &&\n    highScoreElem.textContent !== '000000'\n  ) {\n    soundController.beatScore.play();\n    hasBeatenScore = true;\n  }\n\n  if (scoreSinceMilestone >= milestone) {\n    handleLevelUp();\n  }\n}\n\nfunction handleCheckIfHighScore(score) {\n  if (score > highScoreElem.textContent) {\n    highScoreElem.textContent = Math.floor(score).toString().padStart(6, 0);\n    localStorage.setItem('lion-high-score', highScoreElem.textContent);\n  }\n  if (handleCheckLeaderboardHighScore(score)) {\n    return true;\n  }\n}\n\nfunction setUpElements() {\n  setupGroundElements();\n  setupObstacles();\n  setupCharacters();\n  setupPowerUps();\n  setupPlatform();\n  setupCrate();\n}\n\nfunction setupGroundElements() {\n  setupGround();\n  setupGroundLayerTwo();\n  setupGroundLayerThree();\n  setupBonusLayer();\n}\n\nfunction setupObstacles() {\n  setupCactus();\n  setupBird();\n  setupGroundEnemy();\n}\n\nfunction setupCharacters() {\n  setupDino();\n}\n\nfunction setupPowerUps() {\n  setupMultiplier();\n  setupCoin();\n  setupMagnet();\n}\n\nfunction handleStart() {\n  updateNotification(`stage ${getCurrentPhase()}!`);\n  clearInterval(idleIntervalId); // Clear the interval\n  worldElem.setAttribute('transition-style', 'in:circle:center');\n  lastTime = null;\n  hasBeatenScore = false;\n  score = 0;\n  startTimer();\n  setMultiplierRatio(1);\n  let currentMultiplierRatio = getMultiplierRatio();\n  setUpElements();\n  dinoElem.classList.remove('leap');\n  currentMultiplierElem.textContent = `x${currentMultiplierRatio}`;\n  livesElem.textContent = 10;\n  startScreenElem.classList.add('hide');\n  endScreenElem.classList.add('hide');\n  gameOverIconElem.classList.add('hide-element');\n  // Get the container element where the ticker items will be appended\n  const tickerData = [\n    {\n      username: 'bap1',\n      score: 'start',\n    },\n    { username: 'b4p2', score: '323451' },\n    { username: 'fgp3', score: '331451' },\n    { username: 'agf4', score: '131451' },\n    {\n      username: 'bap5',\n      score: '353451',\n    },\n    { username: 'b4p6', score: '323451' },\n    { username: 'fgp', score: '331451' },\n    {\n      username: 'bap7',\n      score: '353451',\n    },\n    { username: 'b4p8', score: '323451' },\n    { username: 'fgp9', score: '331451' },\n    { username: 'agf10', score: '131451' },\n    {\n      username: 'bap11',\n      score: '353451',\n    },\n    { username: 'b4p12', score: '323451' },\n    { username: 'fgp13', score: 'end' },\n  ];\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem2.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem2.appendChild(tickerDivider);\n    }\n  });\n  tickerData.forEach((item, index) => {\n    const tickerItem = document.createElement('div');\n    tickerItem.classList.add('ticker__item');\n    tickerItem.innerHTML = `${item.username} - ${item.score}`;\n    const tickerDivider = document.createElement('div');\n    tickerDivider.classList.add('ticker-divider');\n    tickerElem3.appendChild(tickerItem);\n    // Add a divider after each item, except for the last one\n    if (index < tickerData.length - 1) {\n      tickerElem3.appendChild(tickerDivider);\n    }\n  });\n  // tickerContainerElem.classList.add('hide-element');\n  // tickerContainerElem.classList.remove('show-element');\n\n  window.requestAnimationFrame(update);\n}\n\nlet timer = 0;\nlet intervalId;\n\nfunction updateTimer() {\n  timer++;\n  currentGameTimerElem.textContent = formatTime(timer);\n}\n\nfunction formatTime(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n}\n\nfunction startTimer() {\n  intervalId = setInterval(updateTimer, 1000); // Update the timer every second\n}\n\nfunction stopTimer() {\n  clearInterval(intervalId);\n}\n\n// Function to toggle the pause state\nexport function togglePause() {\n  isPaused = !isPaused;\n  // const body = document.body;\n  if (isPaused) {\n    // body.classList.add('pause-animation');\n    pauseIconButton.src = playImg;\n    stopTimer(); // Pause the timer\n    snow.togglePause();\n  } else {\n    // body.classList.remove('pause-animation');\n    pauseIconButton.src = pauseImg;\n    snow.togglePause();\n    startTimer(); // Start the timer or resume from where it left off\n    window.requestAnimationFrame(update);\n  }\n}\n\nfunction revealAchievementForm(index, score) {\n  gameOverIconElem.classList.add('hide-element');\n  const rank = index + 2;\n  scoreNewHighScoreElem.textContent = Math.round(score);\n  const achievementRankElem = document.getElementById('achievement-rank-text');\n  achievementRankElem.textContent = `${rank}${getSuffix(rank)}`;\n  const achievementBlockElem = document.getElementById('achievement-block');\n  const lionGameAchievementTitleElem = document.getElementById(\n    'achievement-title-block'\n  );\n  const achievementInstructionsBlockElem = document.getElementById(\n    'achievement-instructions-block'\n  );\n  const achievementFormElem = document.getElementById('achievement-form-block');\n  const newHighScoreInput = document.getElementById('newHighScoreInput');\n  submitNewScoreFormElem.classList.remove('hide-form');\n  submitNewScoreFormElem.classList.add('show-form');\n  setTimeout(() => {\n    lionGameAchievementTitleElem.classList.remove('fade-out-text');\n    lionGameAchievementTitleElem.classList.add('fade-in-text');\n  }, 2000);\n  setTimeout(() => {\n    typeLettersWithoutSpaces(0, 'Achievement', achievementBlockElem, 100);\n  }, 4050);\n  setTimeout(() => {\n    typeLettersWithoutSpaces(\n      0,\n      'New high score, enter your username!',\n      achievementInstructionsBlockElem,\n      100\n    );\n  }, 8050);\n  setTimeout(() => {\n    newHighScoreInput.focus();\n    achievementFormElem.classList.remove('fade-out-text');\n    achievementFormElem.classList.remove('fade-in-text');\n  }, 12050);\n}\n\nasync function handleCheckLeaderboardHighScore(score) {\n  try {\n    await getAllHighScoreUsers().then((data) => {\n      //sort all the data in ascending order\n      const sortedData = data.users.sort((a, b) => {\n        return parseInt(b.score, 10) - parseInt(a.score, 10);\n      });\n      //check the last highest score compared to the leaderboard\n      const lastHigherScore = sortedData\n        .reverse()\n        .find((user) => parseInt(user.score, 10) > parseInt(score, 10));\n      //find the index of the last highest score\n      const index = sortedData.reverse().indexOf(lastHigherScore);\n      //if the index is not data.length-1 then the score is not higher than any on the leaderboard\n      if (index !== sortedData.length - 1) {\n        // const rank = index !== 0 ? index + 2 : index; will need to add condition for the highest score\n        revealAchievementForm(index, score);\n        return true;\n      } else {\n        setTimeout(() => {\n          document.addEventListener('keydown', handleStart, { once: true });\n          document.addEventListener('touchstart', handleStart, {\n            once: true,\n          });\n          endScreenElem.classList.remove('hide');\n        }, 100);\n        setTimeout(() => {\n          typeLetters(0);\n        }, 1500);\n        return;\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//trim any extra spaces in score\nfunction trimmedOutExtraSpacesScore(score) {\n  return score.replace(/\\s+/g, ' ').trim();\n}\n\n//submit new score to leaderboard\nasync function handleSubmitNewScore() {\n  const userInput = document.getElementById('newHighScoreInput').value;\n  //check for validation errors and update error message accordingly\n  if (!validateInput() || !userInput) {\n    scoreErrorMessageElem.textContent = 'Enter a valid name!';\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  }\n\n  const res = await handleNewHighScore(\n    userInput,\n    trimmedOutExtraSpacesScore(scoreNewHighScoreElem.textContent)\n  );\n\n  //check if user already exists from res and update error message accordingly, else submit new score\n  if (res === 'user already exists') {\n    scoreErrorMessageElem.textContent = res;\n    scoreErrorMessageElem.classList.remove('hide');\n    return;\n  } else {\n    submitNewScoreFormElem.classList.add('fade-out-text');\n    scrollableTableElem.style.display = 'flex';\n    showLeaderboard = !showLeaderboard;\n    const leaderboardContent = document.getElementById('leaderboard-content');\n    leaderboardContent.classList.remove('flicker-opacity-off');\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    worldElem.setAttribute('transition-style', '');\n    stopLoading();\n    scrollableTableElem.setAttribute('transition-style', 'in:wipe:left');\n    scrollableTableElem.classList.add('show-element');\n    leaderboardContent.classList.add('translateX-right-to-left');\n    scrollableTableElem.classList.remove('hide-element');\n    setTimeout(() => {\n      showLeaderboard = true;\n      scrollableTableElem.classList.remove('hide-element');\n      scrollableTableElem.classList.add('show-element');\n      scoreErrorMessageElem.classList.add('hide');\n    }, 3000);\n  }\n}\n\ndocument.addEventListener('click', function (event) {\n  const shareContainer = document.getElementById('share-container');\n  const shareButton = document.getElementById('shareButton');\n\n  if (\n    !shareContainer.contains(event.target) &&\n    !shareButton.contains(event.target)\n  ) {\n    shareContainer.classList.remove('show-share-container');\n  }\n});\n\nfunction handleOpenShareContainer() {\n  const shareContainer = document.getElementById('share-container');\n  shareContainer.classList.add('show-share-container');\n}\n\nif (document.getElementById('submit-button')) {\n  document\n    .getElementById('submit-button')\n    .addEventListener('click', handleSubmitNewScore);\n}\n\nlet currentPage = 'leaderboard-page';\n\nfunction handleOpenWiki() {\n  underlineCurrentPageButton('wiki-page');\n}\nfunction handleOpenControls() {\n  underlineCurrentPageButton('controls-page');\n}\nfunction handleOpenLeaderboard() {\n  underlineCurrentPageButton('leaderboard-page');\n}\n\nfunction underlineCurrentPageButton(page) {\n  const oldPage = document.getElementById(currentPage);\n  oldPage.classList.add('hide-page');\n  oldPage.classList.remove('show-page');\n  const currentButton = document.getElementById(pageButtons[currentPage]);\n  currentButton.classList.remove('sidebar-button-selected');\n  currentPage = page;\n  const newPage = document.getElementById(currentPage);\n  newPage.classList.add('show-page');\n  newPage.classList.remove('hide-page');\n  const newButton = document.getElementById(pageButtons[newPage.id]);\n  newButton.classList.add('sidebar-button-selected');\n}\n\ndocument\n  .getElementById('closeLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('toggleLeaderboard')\n  .addEventListener('click', handleToggleLeaderboard);\n\ndocument\n  .getElementById('shareButton')\n  .addEventListener('click', handleOpenShareContainer);\n\ndocument\n  .getElementById('show-wiki-page-button')\n  .addEventListener('click', handleOpenWiki);\n\ndocument\n  .getElementById('show-controls-page-button')\n  .addEventListener('click', handleOpenControls);\n\ndocument\n  .getElementById('show-leaderboard-page-button')\n  .addEventListener('click', handleOpenLeaderboard);\n\nconst pageButtons = {\n  'wiki-page': 'show-wiki-page-button',\n  'leaderboard-page': 'show-leaderboard-page-button',\n  'controls-page': 'show-controls-page-button',\n};\n\nunderlineCurrentPageButton('leaderboard-page');\n\nlet loading;\nfunction stopLoading() {\n  loading = false;\n}\n\nfunction handleToggleLeaderboard() {\n  const leaderboardContent = document.getElementById('leaderboard-content');\n  if (showLeaderboard !== null && showLeaderboard === false) {\n    leaderboardContent.classList.remove('flicker-opacity-off');\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    worldElem.setAttribute('transition-style', 'out:wipe:right');\n    const randomTimeout = Math.random() * (2800 - 1500) + 1500; // Random timeout between 1500ms and 2800ms\n    setTimeout(() => {\n      stopLoading();\n      scrollableTableElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.add('show-element');\n      leaderboardContent.classList.add('translateX-right-to-left');\n      scrollableTableElem.classList.remove('hide-element');\n    }, randomTimeout);\n  } else {\n    handleStart();\n    loading = true;\n    runTypeLetters();\n    showLeaderboard = !showLeaderboard;\n    scrollableTableElem.setAttribute('transition-style', 'out:wipe:right');\n    leaderboardContent.classList.add('flicker-opacity-off');\n    setTimeout(() => {\n      stopLoading();\n      scrollableTableElem.style.display = 'none';\n      worldElem.setAttribute('transition-style', 'in:wipe:left');\n      scrollableTableElem.classList.remove('show-element');\n      scrollableTableElem.classList.add('hide-element');\n    }, 1500);\n  }\n}\n\nfunction runTypeLetters() {\n  if (!loading) {\n    return;\n  }\n  loadingTextElem.textContent = '';\n  typeLettersAny(0, '...', loadingTextElem, 120);\n  const rerunDelay = 2700;\n  setTimeout(runTypeLetters, rerunDelay);\n}\n\nfunction handleLose() {\n  gameOverTextElem.textContent = '';\n  // tickerContainerElem.classList.add('show-element');\n  // tickerContainerElem.classList.remove('hide-element');\n  soundController.die.play();\n  setDinoLose();\n  handleCheckIfHighScore(score);\n}\n\nfunction setPixelToWorldScale() {\n  let worldToPixelScale;\n  if (window.innerWidth / window.innerHeight < WORLD_WIDTH / WORLD_HEIGHT) {\n    worldToPixelScale = window.innerWidth / WORLD_WIDTH;\n  } else {\n    worldToPixelScale = window.innerHeight / WORLD_HEIGHT;\n  }\n\n  worldElem.style.width = `${WORLD_WIDTH * worldToPixelScale}px`;\n  worldElem.style.height = `${WORLD_HEIGHT * worldToPixelScale}px`;\n}\n\nfunction handleOrientationChange() {\n  var blackScreen = document.getElementById('blackScreen');\n\n  if ((isMobile() && window.orientation === 0) || window.orientation === 180) {\n    // Portrait orientation on mobile\n    blackScreen.style.display = 'flex';\n  } else {\n    // Hide black screen in other cases\n    blackScreen.style.display = 'none';\n  }\n}\n\nfunction isMobile() {\n  return /Mobi|Android/i.test(navigator.userAgent);\n}\n\n// Initial check\nhandleOrientationChange();\n\n// Listen for orientation changes\nwindow.addEventListener('orientationchange', handleOrientationChange);\n\nconst textToType = 'Game Over';\n\nfunction typeLetters(index) {\n  if (index < textToType.length) {\n    gameOverTextElem.textContent += textToType.charAt(index);\n    setTimeout(() => typeLetters(index + 1), 200); // Adjust the delay as needed\n  } else {\n    gameOverIconElem.classList.remove('hide-element');\n    gameOverIconElem.classList.add('show-element');\n  }\n}\n\nfunction typeLettersAny(index, text, elem, timeout) {\n  if (index < text.length) {\n    elem.innerHTML += `<span>${text.charAt(index)}</span>`;\n    setTimeout(() => {\n      Array.from(elem.children).forEach((span, index) => {\n        setTimeout(() => {\n          span.classList.add('wavy');\n        }, index * 80);\n      });\n      typeLettersAny(index + 1, text, elem, timeout);\n    }, 250); // Adjust the delay as needed\n  } else {\n    elem.classList.remove('hide-element');\n    elem.classList.add('show-element');\n  }\n}\n\nfunction typeLettersWithoutSpaces(index, text, elem, timeout) {\n  if (index < text.length) {\n    elem.textContent += text.charAt(index);\n    setTimeout(() => {\n      typeLettersWithoutSpaces(index + 1, text, elem, timeout);\n    }, timeout); // Use the provided timeout\n  } else {\n    elem.classList.remove('hide-element');\n    elem.classList.add('show-element');\n  }\n}\n\nexport let collectableOptions = [\n  { type: 'gold-coin', weight: 20, points: 31 },\n  { type: 'silver-coin', weight: 60, points: 16 },\n  { type: 'green-gem', weight: 0.3, points: 250 },\n  { type: 'red-gem', weight: 0.2, points: 500 },\n  { type: 'blue-gem', weight: 0.1, points: 1000 },\n];\n\n//buff-effects\n\nfunction filetMignonEffect() {\n  const rank = 1;\n\n  let currentLives = parseInt(livesElem.textContent, 10);\n  currentLives += rank;\n  livesElem.textContent = currentLives;\n  const playerContainer = document.querySelector('.player-container');\n  createOneUpText(playerContainer);\n}\n\nfunction trustyPocketWatchEffect() {\n  const startRank = 0.4;\n  const endRank = 0.95;\n  const updateInterval = 1000; // Update every second\n\n  let currentRank = startRank;\n  const intervalId = setInterval(() => {\n    // Increment the current rank\n    currentRank += 0.1; // Adjust the increment as needed\n\n    // Ensure the current rank does not exceed the end rank\n    currentRank = Math.min(currentRank, endRank);\n\n    // Update the deltaAdjustment based on the current rank\n    deltaAdjustment = currentRank;\n\n    if (currentRank >= endRank) {\n      // Stop the interval when the end rank is reached\n      clearInterval(intervalId);\n      deltaAdjustment = endRank;\n    }\n  }, updateInterval);\n}\n\nfunction getRandomCollectable() {\n  const randomValue = Math.random();\n  let cumulativeProbability = 0;\n\n  for (const option of collectableOptions) {\n    cumulativeProbability += option.weight;\n    if (randomValue <= cumulativeProbability) {\n      return option;\n    }\n  }\n\n  // Default case (fallback)\n  return collectableOptions[collectableOptions.length - 1];\n}\n\nfunction sackOfCoinsEffect() {\n  let totalPoints = 0;\n  let currentMultiplierRatio = getMultiplierRatio();\n\n  for (let i = 0; i < 25; i++) {\n    const randomCollectable = getRandomCollectable();\n    totalPoints += randomCollectable.points * currentMultiplierRatio;\n  }\n\n  updateScoreWithPoints(totalPoints);\n\n  // Add totalPoints to the score (adjust as needed)\n  // Example: score += totalPoints;\n  console.log(`Collected ${totalPoints} points from 25 random coins.`);\n}\n\nfunction reduceByPercentage(value, percentage) {\n  return value * (1 - percentage);\n}\n\nfunction slowFallEffect() {\n  const reductionPercentage = 0.3; // Adjust the percentage as needed\n  setGravityFallAdjustment(\n    reduceByPercentage(getGravityFallAdjustment(), reductionPercentage)\n  );\n}\n\nexport { filetMignonEffect, trustyPocketWatchEffect, sackOfCoinsEffect };\n\n//starters\nlet selectedStarter;\nlet currentPassives = [];\n\nfunction booksSmartEffect() {\n  if (currentPassives !== []) {\n    currentPassives.forEach((ability) => {\n      console.log(\n        `${ability.name} - Level ${ability.level}, Value ${ability.value}`\n      );\n    });\n  }\n  setSelectedStarter('Text book');\n}\n\nexport { booksSmartEffect };\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}